Consulta Atual (Problem√°tica):

JavaScript

Copiar
const { data: anotacoes, error } = await supabase
  .from('apostila_anotacoes')
  .select(`
    *,
    apostila_pastas!left (
      id,
      nome
    )
  `)
  .eq('user_id', auth.currentUser.uid)
  .order('data_exportacao', { ascending: false });
üîç Causas Identificadas do Erro

Migra√ß√£o Pendente ou Ausente:
A estrutura do banco de dados n√£o foi atualizada para incluir as tabelas apostila_anotacoes e apostila_pastas com as rela√ß√µes corretas.
Inconsist√™ncia nas Tabelas ou Rela√ß√µes:
As tabelas podem estar ausentes, ou a chave estrangeira entre apostila_anotacoes.pasta_id e apostila_pastas.id n√£o foi criada.
Falta de Implementa√ß√£o da Funcionalidade "Corrigir Rela√ß√£o Apostila":
A op√ß√£o ‚ÄúCorrigir Rela√ß√£o Apostila‚Äù no menu Workflow pode n√£o existir ou n√£o ter sido realizada.
‚úÖ Objetivo e Resultado Esperado

Crie ou ajuste as tabelas apostila_anotacoes e apostila_pastas no esquema p√∫blico do Supabase, com as estruturas e rela√ß√µes corretas.
Implemente a funcionalidade "Corrigir Rela√ß√£o Apostila" no menu Workflow para automatizar a corre√ß√£o da estrutura do banco.
Atualizar o esquema cache do Supabase para refletir as mudan√ßas.
Ajustar a consulta para carregar as anota√ß√µes, tratando de casos em que pasta_id √© null .
Garanta que o Modal da Apostila Inteligente exiba as anota√ß√µes corretamente, com o nome da pasta associada (se houver).
üõ†Ô∏è Instru√ß√µes para Corre√ß√£o

1. Criar ou Ajustar as Tabelas no Supabase
Garanta que as tabelas apostila_anotacoes e apostila_pastas existam com a estrutura correta e que a rela√ß√£o entre elas esteja configurada.

Passo 1: Acesse o painel do Supabase e v√° para o SQL Editor .
Passo 2: Crie ou ajuste a tabela apostila_pastas :
sql

Copiar
CREATE TABLE IF NOT EXISTS public.apostila_pastas (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID NOT NULL,
  nome TEXT NOT NULL,
  descricao TEXT,
  data_criacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE
);

ALTER TABLE apostila_pastas ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Usu√°rios s√≥ podem ver suas pastas" ON apostila_pastas
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Usu√°rios podem inserir suas pastas" ON apostila_pastas
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Usu√°rios podem atualizar suas pastas" ON apostila_pastas
FOR UPDATE
USING (auth.uid() = user_id);
Passo 3: Crie ou ajuste a tabela apostila_anotacoes :
sql

Copiar
CREATE TABLE IF NOT EXISTS public.apostila_anotacoes (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID NOT NULL,
  pasta_id UUID,
  titulo TEXT NOT NULL,
  conteudo TEXT NOT NULL,
  modelo_anotacao TEXT,
  tags TEXT[],
  data_criacao TIMESTAMP WITH TIME ZONE NOT NULL,
  data_exportacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  origem TEXT NOT NULL,
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE,
  CONSTRAINT fk_pasta_id FOREIGN KEY (pasta_id) REFERENCES apostila_pastas(id) ON DELETE SET NULL
);

ALTER TABLE apostila_anotacoes ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Usu√°rios s√≥ podem ver suas anota√ß√µes" ON apostila_anotacoes
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Usu√°rios podem inserir suas anota√ß√µes" ON apostila_anotacoes
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Usu√°rios podem atualizar suas anota√ß√µes" ON apostila_anotacoes
FOR UPDATE
USING (auth.uid() = user_id);
Valida√ß√£o:

Confirme no Table Editor que ambas as tabelas n√£o existem no esquema public .
Insira dados de teste:
sql

Copiar
INSERT INTO apostila_pastas (user_id, nome, descricao)
VALUES ('<seu_user_id>', 'Pasta de Teste', 'Descri√ß√£o de teste');

INSERT INTO apostila_anotacoes (user_id, pasta_id, titulo, conteudo, modelo_anotacao, tags, data_criacao, origem)
VALUES (
  '<seu_user_id>',
  (SELECT id FROM apostila_pastas WHERE user_id = '<seu_user_id>' LIMIT 1),
  'Anota√ß√£o de Teste',
  'Conte√∫do de teste',
  'Estudo Completo',
  ARRAY['tag1', 'tag2'],
  CURRENT_TIMESTAMP,
  'caderno'
);
os dados:
sql

Copiar
SELECT * FROM apostila_anotacoes
LEFT JOIN apostila_pastas ON apostila_anotacoes.pasta_id = apostila_pastas.id
WHERE apostila_anotacoes.user_id = '<seu_user_id>';
2. Atualizar o Schema Cache do Supabase
Ap√≥s criar ou ajustar as tabelas, atualize o esquema cache do Supabase para garantir que ele reconhe√ßa as mudan√ßas.

Passo 1: No painel do Supabase, v√° para Configura√ß√µes > API .
Passo 2: Clique em Atualizar API Docs para recarregar o cache do esquema.
Passo 3: Se o problema persistir, v√° para Configura√ß√µes > Geral e clique em Reiniciar Projeto .
Passo 4 (Opcional): Reinicie a aplica√ß√£o para garantir que o cliente do Supabase recarregue o esquema.