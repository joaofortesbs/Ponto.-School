Objetivo: Descrever em detalhes o funcionamento e o design moderno e sofisticado do modal que aparece ao clicar na opção "Configurações" no modal de três pontos no cabeçalho do chat de conversa (mini-seção "Discussões"). O modal deve refletir o design das imagens enviadas, exibir informações dinâmicas do grupo, incluir seções específicas, e operar de forma funcional e integrada com o Supabase. Todas as funcionalidades existentes devem ser preservadas, e o design/layout da mini-seção "Grupos de Estudos" (incluindo modais de "Adicionar Grupo" e "Criar Novo Grupo") não deve ser alterado.



Instruções Gerais





Escopo Restrito: Foque exclusivamente na função showSettingsModal e nas seções descritas no frontend. Não modifique o design, layout ou qualquer elemento da mini-seção "Grupos de Estudos", incluindo os modais de "Adicionar Grupo" e "Criar Novo Grupo", nem outras partes do código (ex.: createGroup, joinGroupByCode, loadAllGroups).



Preservação: Mantenha intactas todas as funcionalidades existentes (criação via modal, adesão, saída/exclusão, chat, pesquisa, contagem de online), sem impacto no layout ou design atual.



Eficiência: Implemente o modal com dados dinâmicos do grupo via Supabase, validação e logs para evitar falhas.



Testes Completos: Após a implementação, teste o modal e envie os logs.



Descrição do Design Moderno e Sofisticado





Posicionamento: O modal deve ser exibido no centro da tela, com position: fixed, top: 50%, left: 50%, e transform: translate(-50%, -50%) para alinhamento perfeito.



Dimensões e Estilo Geral: Largura fixa de 400px, padding interno de 20px, borda-radius de 10px, fundo branco (#fff), e uma sombra suave (box-shadow: 0 0 10px rgba(0,0,0,0.5)) para um efeito elevado.



Fonte e Texto: Usar a fonte Arial, sans-serif, com texto alinhado à esquerda, cor principal #333 para títulos e #666 para detalhes, e espaçamento consistente (margem inferior de 15px entre seções).



Cabeçalho: Um título "Configurações do Grupo" em <h2> com margem superior zero, cor #333, e peso bold para destacar.



Botão de Fechamento: Um botão "Fechar" na parte inferior, com fundo #e74c3c (vermelho), texto branco, padding de 5px 15px, borda-radius de 5px, e cursor pointer para interatividade.



Responsividade: O modal deve ser ajustado para telas menores (abaixo de 600px), reduzindo a largura para 90% da tela e mantendo a centralização.



Seções do Modal





Nome do Grupo





Descrição: Exibe o nome do grupo em um parágrafo abaixo de um label "Nome do Grupo:" em negrito.



Comportamento: O nome é carregado dinamicamente do campo nome da tabela grupos_estudo no Supabase.



Estilo: Texto em #333, sem edição (somente leitura por enquanto).



Tipo de Grupo





Descrição: Mostra o tipo do grupo (ex.: "Estudos", "Social") abaixo de um label "Tipo de Grupo:" em negrito.



Comportamento: Carregado do campo tipo_grupo do Supabase.



Estilo: Texto em #333, sem edição.



Visibilidade





Descrição: Indica se o grupo é privado ou público abaixo de um label "Visibilidade:" em negrito.



Comportamento: Carregado do campo is_private (verdadeiro = "Privado", falso = "Público") do Supabase.



Estilo: Texto em #333, sem edição.



Visível para Todos





Descrição: Mostra se o grupo é visível para todos os usuários abaixo de um label "Visível para Todos:" em negrito.



Comportamento: Carregado do campo is_visible_to_all (verdadeiro = "Sim", falso = "Não") do Supabase.



Estilo: Texto em #333, sem edição.



Código Único





Descrição: Exibe o código único do grupo para adesão abaixo de um label "Código Único:" em negrito.



Comportamento: Carregado do campo codigo_unico do Supabase. Deve ser copiável ao clicar (adicionar um tooltip "Copiado!" por 2 segundos).



Estilo: Texto em #333, com cursor pointer e fundo #f0f0f0 ao passar o mouse.



Funcionamento e Sistemas





Carregamento de Dados: Ao chamar showSettingsModal(groupId), consultar a tabela grupos_estudo no Supabase com select('nome, tipo_grupo, is_private, is_visible_to_all, codigo_unico').eq('id', groupId).single() para obter os dados do grupo.



Exibição do Modal: Criar dinamicamente um elemento <div> no document.body com o CSS descrito, preenchendo as seções com os dados retornados.



Interatividade do Botão "Fechar": Ao clicar, remover o elemento pai (this.parentElement.remove()) para fechar o modal sem afetar a interface principal.



Cópia do Código Único: Adicionar um evento onclick ao parágrafo do "Código Único" que usa navigator.clipboard.writeText() para copiar o texto e exibe um <span> com "Copiado!" por 2 segundos usando setTimeout.



Erro Handling: Se a consulta ao Supabase falhar, exibir um alerta com a mensagem de erro e registrar no console, com retry automático após 2 segundos.



Fechamento Forçado: O modal deve fechar ao pressionar a tecla "Escape" ou clicar fora dele, removendo o elemento e restaurando o foco na interface.



Implementação no Frontend (JavaScript)

 // Função para exibir o modal de configurações const showSettingsModal = async (groupId) => { try { const { data: groupData, error } = await supabase .from('grupos_estudo') .select('nome, tipo_grupo, is_private, is_visible_to_all, codigo_unico') .eq('id', groupId) .single(); if (error) throw error; 

const modal = document.createElement('div');
modal.style.cssText = 'position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.5); z-index: 2000; width: 400px; font-family: Arial, sans-serif; text-align: left;';
modal.innerHTML = `
  <h2 style="color: #333; margin-top: 0;">Configurações do Grupo</h2>
  <div style="margin-bottom: 15px;">
    <label style="font-weight: bold;">Nome do Grupo:</label>
    <p>${groupData.nome}</p>
  </div>
  <div style="margin-bottom: 15px;">
    <label style="font-weight: bold;">Tipo de Grupo:</label>
    <p>${groupData.tipo_grupo}</p>
  </div>
  <div style="margin-bottom: 15px;">
    <label style="font-weight: bold;">Visibilidade:</label>
    <p>${groupData.is_private ? 'Privado' : 'Público'}</p>
  </div>
  <div style="margin-bottom: 15px;">
    <label style="font-weight: bold;">Visível para Todos:</label>
    <p>${groupData.is_visible_to_all ? 'Sim' : 'Não'}</p>
  </div>
  <div style="margin-bottom: 15px; position: relative;">
    <label style="font-weight: bold;">Código Único:</label>
    <p id="code-text" style="margin: 0; cursor: pointer;" onclick="copyCode(this, '${groupData.codigo_unico}')">${groupData.codigo_unico}</p>
    <span id="copy-feedback" style="display: none; position: absolute; top: -20px; right: 0; color: #2ecc71; font-size: 12px;">Copiado!</span>
  </div>
  <button onclick="this.parentElement.remove();" style="background: #e74c3c; color: white; border: none; padding: 5px 15px; border-radius: 5px; cursor: pointer;">Fechar</button>
`;
document.body.appendChild(modal);

// Responsividade
if (window.innerWidth < 600) {
  modal.style.width = '90%';
}

// Fechamento com Escape
const closeOnEscape = (e) => {
  if (e.key === 'Escape') {
    modal.remove();
    document.removeEventListener('keydown', closeOnEscape);
  }
};
document.addEventListener('keydown', closeOnEscape);

// Fechamento ao clicar fora
const closeOnOutsideClick = (e) => {
  if (!modal.contains(e.target)) {
    modal.remove();
    document.removeEventListener('click', closeOnOutsideClick);
  }
};
setTimeout(() => document.addEventListener('click', closeOnOutsideClick), 100);

} catch (error) { console.error('Erro ao carregar configurações:', error.message, error.stack); alert('Erro ao carregar configurações. Verifique o console.'); setTimeout(() => showSettingsModal(groupId), 2000); // Retry após 2 segundos } };

// Função para copiar o código único const copyCode = (element, code) => { navigator.clipboard.writeText(code).then(() => { const feedback = document.getElementById('copy-feedback'); feedback.style.display = 'inline'; setTimeout(() => feedback.style.display = 'none', 2000); }).catch(err => console.error('Erro ao copiar código:', err)); };

// Manter outras funções existentes (ex.: accessGroup, addMessageToChat, sendMessage, loadMyGroups, etc.) sem alterações