Criar um sistema de ‚ÄúMapeamento Inteligente de Campos por Tipo de Atividade‚Äù, para que:

Cada tipo de atividade (por ID ou tipo) tenha um arquivo exclusivo que define os campos esperados do modal de Editar Materiais.

A IA saiba exatamente quais respostas gerar, com chaves que correspondem aos campos que precisam ser preenchidos dentro do modal.

O sistema consiga sincronizar automaticamente as respostas geradas pela IA com os campos corretos do modal de forma segura, autom√°tica e sem precisar de qualquer a√ß√£o manual do usu√°rio.

üß† NOME DO SISTEMA:
IA_ModalBinderEngine

üìÅ ESTRUTURA DE PASTAS:

src/features/schoolpower/construction/modalBinder/

modalBinderEngine.ts ‚Üí Fun√ß√£o principal de sincroniza√ß√£o.

fieldMaps/

atividade_videoaula.ts

atividade_estudo_caso.ts

atividade_quiz.ts

atividade_mapa_mental.ts

atividade_livro_digital.ts

[... um arquivo por tipo de atividade ...]

utils/

parseIAResponse.ts ‚Üí Transforma resposta da IA em objeto com chave ‚Üí valor.

fieldSetter.ts ‚Üí Faz o binding dos dados nos campos corretos do modal.

üß© FUNCIONAMENTO DO SISTEMA PASSO A PASSO:

Quando o usu√°rio clica em ‚ÄúAprovar Plano de A√ß√£o‚Äù:

O sistema identifica todos os tipos de atividades no plano aprovado.

Para cada atividade, carrega seu respectivo arquivo de mapeamento de campos (fieldMap) a partir da pasta modalBinder/fieldMaps/.

O sistema faz uma chamada √† IA (Gemini), passando:

O tipo de atividade.

O conte√∫do da atividade no plano aprovado.

O modelo de mapeamento da atividade.

A IA responde com um objeto estruturado que segue exatamente a chave de cada campo necess√°rio no modal. Exemplo:

ts
Copiar
Editar
{
  titulo: "As mudan√ßas clim√°ticas e seus efeitos",
  descricao: "Estudo guiado sobre impactos ambientais...",
  formatoEntrega: "PDF",
  duracao: "45 minutos",
  dificuldade: "Intermedi√°ria",
  objetivos: ["Compreender...", "Relacionar..."],
  materiais: ["Texto base", "V√≠deo de apoio"]
}
O sistema chama modalBinderEngine.ts, que faz o seguinte:

Usa o ID da atividade e tipo para localizar o modal aberto.

Usa o fieldSetter.ts para preencher cada campo com base nas chaves e valores recebidos.

Aciona automaticamente o bot√£o ‚ÄúConstruir Atividade‚Äù.

üß© EXEMPLO DE ARQUIVO DE MAPEAMENTO: atividade_quiz.ts

ts
Copiar
Editar
export const activityQuizFieldMap = {
  titulo: "#field-titulo",
  descricao: "#field-descricao",
  disciplina: "#select-disciplina",
  dificuldade: "#select-dificuldade",
  formatoEntrega: "#select-formato",
  duracao: "#input-duracao",
  objetivos: "#textarea-objetivos",
  materiais: "#textarea-materiais",
  perguntas: "#editor-perguntas"
}
‚öôÔ∏è COMPONENTE PRINCIPAL: modalBinderEngine.ts

ts
Copiar
Editar
import { getFieldMap } from './fieldMaps';
import { parseIAResponse } from './utils/parseIAResponse';
import { fillModalField } from './utils/fieldSetter';

export const modalBinderEngine = async (activityId, type, iaRawOutput) => {
  const fieldMap = getFieldMap(type);
  const parsed = parseIAResponse(iaRawOutput);

  for (const [key, value] of Object.entries(parsed)) {
    const selector = fieldMap[key];
    if (!selector) continue;
    await fillModalField(activityId, selector, value);
  }

  // Disparar a constru√ß√£o autom√°tica
  await triggerBuildButton(activityId);
};
üì¶ RESULTADO FINAL ESPERADO

‚úÖ Ap√≥s a aprova√ß√£o do plano de a√ß√£o:

O sistema automaticamente entende o tipo de atividade.

Gera via IA todos os campos esperados.

Preenche todos os campos certos no modal correto.

Aciona o bot√£o ‚ÄúConstruir Atividade‚Äù.

Atividade constru√≠da automaticamente e sem erro.

üß† VANTAGENS ESTRAT√âGICAS

‚úÖ Sistema modular e escal√°vel: cada tipo de atividade pode evoluir sem impactar as demais.
‚úÖ Evita bugs: n√£o h√° mapeamento gen√©rico, tudo √© espec√≠fico por tipo de atividade.
‚úÖ IA bem guiada: os campos esperados s√£o declarados, evitando respostas erradas ou faltantes.
‚úÖ Zero interven√ß√£o do usu√°rio: completamente autom√°tico e fluido.
‚úÖ Compat√≠vel com o design atual: nenhuma mudan√ßa visual √© feita.