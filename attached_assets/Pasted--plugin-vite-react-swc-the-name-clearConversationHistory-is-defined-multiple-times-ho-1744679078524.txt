[plugin:vite:react-swc] Ã— the name `clearConversationHistory` is defined multiple times
     â•­â”€[/home/runner/workspace/src/services/aiChatService.ts:745:1]
 745 â”‚ }
 746 â”‚ 
 747 â”‚ // Limpar histÃ³rico da conversa
 748 â”‚ export function clearConversationHistory(sessionId: string): void {
     Â·                 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
     Â·                             â•°â”€â”€ previous definition of `clearConversationHistory` here
 749 â”‚   if (conversationHistory[sessionId]) {
 750 â”‚     // MantÃ©m apenas a mensagem do sistema
 751 â”‚     const systemMessage = conversationHistory[sessionId][0];
 752 â”‚     conversationHistory[sessionId] = [systemMessage];
 753 â”‚ 
 754 â”‚     // Limpar do localStorage tambÃ©m
 755 â”‚     try {
 756 â”‚       localStorage.removeItem(`conversationHistory_${sessionId}`);
 757 â”‚     } catch (error) {
 758 â”‚       console.error("Erro ao limpar histÃ³rico do localStorage:", error);
 759 â”‚     }
 760 â”‚   }
 761 â”‚ }
 762 â”‚ 
 763 â”‚ // Obter histÃ³rico da conversa
 764 â”‚ export function getConversationHistory(sessionId: string): ChatMessage[] {
 765 â”‚   // Primeiro verifica se jÃ¡ estÃ¡ carregado na memÃ³ria
 766 â”‚   if (conversationHistory[sessionId]) {
 767 â”‚     return conversationHistory[sessionId];
 768 â”‚   }
 769 â”‚ 
 770 â”‚   // Caso contrÃ¡rio, tenta recuperar do localStorage
 771 â”‚   try {
 772 â”‚     const savedHistory = localStorage.getItem(`conversationHistory_${sessionId}`);
 773 â”‚     if (savedHistory) {
 774 â”‚       const parsedHistory = JSON.parse(savedHistory) as ChatMessage[];
 775 â”‚       conversationHistory[sessionId] = parsedHistory;
 776 â”‚       return parsedHistory;
 777 â”‚     }
 778 â”‚   } catch (error) {
 779 â”‚     console.error("Erro ao recuperar histÃ³rico do localStorage:", error);
 780 â”‚   }
 781 â”‚ 
 782 â”‚   return [];
 783 â”‚ }
 784 â”‚ 
 785 â”‚ // FunÃ§Ã£o para corrigir links da plataforma
 786 â”‚ function fixPlatformLinks(text: string): string {
 787 â”‚   const platformLinks = {
 788 â”‚     'Portal': 'https://pontoschool.com/portal',
 789 â”‚     'Portal de Estudos': 'https://pontoschool.com/portal',
 790 â”‚     'Agenda': 'https://pontoschool.com/agenda',
 791 â”‚     'Turmas': 'https://pontoschool.com/turmas',
 792 â”‚     'Grupos de Estudo': 'https://pontoschool.com/turmas?view=estudos',
 793 â”‚     'Biblioteca': 'https://pontoschool.com/biblioteca',
 794 â”‚     'Perfil': 'https://pontoschool.com/profile',
 795 â”‚     'PÃ¡gina de Perfil': 'https://pontoschool.com/profile',
 796 â”‚     'ConfiguraÃ§Ãµes': 'https://pontoschool.com/configuracoes',
 797 â”‚     'PÃ¡gina de ConfiguraÃ§Ãµes': 'https://pontoschool.com/configuracoes',
 798 â”‚     'Dashboard': 'https://pontoschool.com/dashboard',
 799 â”‚     'Epictus IA': 'https://pontoschool.com/epictus-ia',
 800 â”‚     'Mentor IA': 'https://pontoschool.com/mentor-ia',
 801 â”‚     'Planos de Estudo': 'https://pontoschool.com/planos-estudo',
 802 â”‚     'Conquistas': 'https://pontoschool.com/conquistas',
 803 â”‚     'Carteira': 'https://pontoschool.com/carteira',
 804 â”‚     'Mercado': 'https://pontoschool.com/mercado',
 805 â”‚     'OrganizaÃ§Ã£o': 'https://pontoschool.com/organizacao',
 806 â”‚     'Comunidades': 'https://pontoschool.com/comunidades',
 807 â”‚     'Chat IA': 'https://pontoschool.com/chat-ia',
 808 â”‚     'School IA': 'https://pontoschool.com/school-ia',
 809 â”‚     'Novidades': 'https://pontoschool.com/novidades',
 810 â”‚     'Lembretes': 'https://pontoschool.com/lembretes',
 811 â”‚     'Pedidos de Ajuda': 'https://pontoschool.com/pedidos-ajuda',
 812 â”‚     'ConexÃ£o Expert': 'https://pontoschool.com/pedidos-ajuda',
 813 â”‚     'Estudos': 'https://pontoschool.com/estudos',
 814 â”‚     'Login': 'https://pontoschool.com/login',
 815 â”‚     'Cadastro': 'https://pontoschool.com/register',
 816 â”‚     'PÃ¡gina de Ajuda': 'https://pontoschool.com/ajuda',
 817 â”‚     'Ajuda': 'https://pontoschool.com/ajuda'
 818 â”‚   };
 819 â”‚ 
 820 â”‚   let newText = text;
 821 â”‚   const alreadyReplaced = new Set<string>();
 822 â”‚   const linkRegex = /\[(.+?)\]\((.+?)\)/g;
 823 â”‚ 
 824 â”‚   // Primeiro, coletar todos os links jÃ¡ presentes no texto e verificar se estÃ£o formatados corretamente
 825 â”‚   let match;
 826 â”‚ 
 827 â”‚   // Armazenar os links que precisam ser corrigidos
 828 â”‚   const linksToFix = [];
 829 â”‚ 
 830 â”‚   while ((match = linkRegex.exec(newText)) !== null) {
 831 â”‚     const linkText = match[1];
 832 â”‚     const url = match[2];
 833 â”‚     alreadyReplaced.add(url.toLowerCase());
 834 â”‚ 
 835 â”‚     // TambÃ©m adicionar o texto do link para evitar duplicaÃ§Ã£o com diferentes textos
 836 â”‚     for (const key in platformLinks) {
 837 â”‚       if (linkText.toLowerCase() === key.toLowerCase()) {
 838 â”‚         alreadyReplaced.add(platformLinks[key].toLowerCase());
 839 â”‚       }
 840 â”‚     }
 841 â”‚   }
 842 â”‚ 
 843 â”‚   // Substituir expressÃµes mais especÃ­ficas, evitando duplicidades
 844 â”‚   for (const key in platformLinks) {
 845 â”‚     const url = platformLinks[key];
 846 â”‚     // Pular se este URL jÃ¡ foi usado
 847 â”‚     if (alreadyReplaced.has(url.toLowerCase())) continue;
 848 â”‚ 
 849 â”‚     const regex = new RegExp(`\\b(${key})\\b(?![^\\[]*\\])`, 'gi'); // Busca palavras inteiras que nÃ£o estÃ£o dentro de colchetes
 850 â”‚     if (regex.test(newText)) {
 851 â”‚       newText = newText.replace(regex, `[${key}](${url})`);
 852 â”‚       alreadyReplaced.add(url.toLowerCase());
 853 â”‚     }
 854 â”‚   }
 855 â”‚ 
 856 â”‚   // Adicionar correÃ§Ã£o para URLs que podem ter sido escritas incorretamente
 857 â”‚   newText = newText.replace(/\(https:\/\/pontoschool\.com(\s+)([^)]+)\)/g, '(https://pontoschool.com/$2)');
 858 â”‚ 
 859 â”‚   // Corrigir URLs que podem ter dupla barra
 860 â”‚   newText = newText.replace(/\(https:\/\/pontoschool\.com\/\/([^)]+)\)/g, '(https://pontoschool.com/$1)');
 861 â”‚ 
 862 â”‚   // Garantir que os links estejam formatados corretamente com os parÃªnteses fora da URL clicÃ¡vel
 863 â”‚   // Primeiro, encontrar todos os links no formato [texto](url)
 864 â”‚   const markdownLinkRegex = /\[([^\]]+)\]\(([^)]+)\)/g;
 865 â”‚   newText = newText.replace(markdownLinkRegex, (match, text, url) => {
 866 â”‚     // Certificar-se de que apenas a URL estÃ¡ dentro dos parÃªnteses
 867 â”‚     const cleanUrl = url.split(' ')[0]; // Pegar apenas a URL sem atributos adicionais
 868 â”‚     return `[${text}](${cleanUrl})`;
 869 â”‚   });
 870 â”‚ 
 871 â”‚   return newText;
 872 â”‚ }
 873 â”‚ 
 874 â”‚ 
 875 â”‚ // FunÃ§Ã£o para salvar o histÃ³rico da conversa no localStorage
 876 â”‚ function saveConversationHistory(sessionId: string, history: ChatMessage[]): void {
 877 â”‚   try {
 878 â”‚     localStorage.setItem(`conversationHistory_${sessionId}`, JSON.stringify(history));
 879 â”‚   } catch (error) {
 880 â”‚     console.error("Erro ao salvar o histÃ³rico da conversa:", error);
 881 â”‚   }
 882 â”‚ }
 883 â”‚ 
 884 â”‚ // SimulaÃ§Ã£o de resposta da IA
 885 â”‚ const getResponseForMessage = (message: string): string => {
 886 â”‚   // AnÃ¡lise bÃ¡sica da mensagem para gerar uma resposta contextual
 887 â”‚   const formattedMessage = message.toLowerCase();
 888 â”‚ 
 889 â”‚   if (formattedMessage.includes('olÃ¡') || formattedMessage.includes('oi') || formattedMessage.includes('bom dia') || formattedMessage.includes('boa tarde') || formattedMessage.includes('boa noite')) {
 890 â”‚     return `**OlÃ¡, ${userInfo?.username || 'amigo'}!** ðŸ˜Š\n\nComo posso ajudar vocÃª hoje?`;
 891 â”‚   } else if (formattedMessage.includes('funÃ§Ã£o') || formattedMessage.includes('o que vocÃª faz') || formattedMessage.includes('para que serve')) {
 892 â”‚     return `**Eu sou o Assistente de Suporte da Ponto.School**, aqui para te ajudar em tudo que precisar na plataforma! ðŸš€\n\nPosso ajudar com:\n\nâ€¢ **NavegaÃ§Ã£o:** Encontrar qualquer recurso na plataforma.\nâ€¢ **Tutoriais:** Explicar o funcionamento de qualquer ferramenta.\nâ€¢ **DÃºvidas:** Responder qualquer questÃ£o sobre a plataforma ou o conteÃºdo.\n\nComo posso ajudar vocÃª agora?`;
 893 â”‚   } else if (formattedMessage.includes('portal') || formattedMessage.includes('material') || formattedMessage.includes('acessar conteÃºdo')) {
 894 â”‚     return `VocÃª pode acessar o **Portal** com todos os materiais em https://pontoschool.com/portal\n\nLÃ¡ vocÃª encontrarÃ¡ todos os seus cursos, materiais e recursos de estudo organizados por disciplina.\n\n_Basta clicar no link acima para ir direto para o Portal!_ ðŸ“š`;
 895 â”‚   } else {
 896 â”‚     return "Desculpe, nÃ£o entendi sua pergunta. Pode reformulÃ¡-la?";
 897 â”‚   }
 898 â”‚ };
 899 â”‚ 
 900 â”‚ export const clearConversationHistory = async (sessionId: string): Promise<void> => {
     Â·              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
     Â·                          â•°â”€â”€ `clearConversationHistory` redefined here
 901 â”‚   try {
 902 â”‚     localStorage.removeItem(`conversation_${sessionId}`);
 903 â”‚     console.log(`HistÃ³rico de conversa para a sessÃ£o ${sessionId} foi limpo.`);
     â•°â”€â”€â”€â”€
/home/runner/workspace/src/services/aiChatService.ts:745:1