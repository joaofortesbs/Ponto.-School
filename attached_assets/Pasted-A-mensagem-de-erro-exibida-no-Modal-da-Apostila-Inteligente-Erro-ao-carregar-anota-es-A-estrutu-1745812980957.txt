A mensagem de erro exibida no Modal da Apostila Inteligente — "Erro ao carregar anotações: A estrutura do banco de dados precisa ser atualizada. Use a opção 'Corrigir Relação Apostila' no menu Workflow." — indica que há um problema com a estrutura do banco de dados no Supabase, provavelmente relacionado a uma migração pendente ou a uma inconsistência na configuração das tabelas ou relações. Vou analisar o problema com base no contexto fornecido anteriormente, identificar a causa raiz e propor uma solução clara para corrigir o erro. Em seguida, transformei a solução em um prompt super detalhado para a IA de Vibe Code implementar a correção.

Análise do Problema
O erro ocorre quando o Modal da Apostila Inteligente tenta carregar as anotações da tabela apostila_anotacoes e buscar informações relacionadas à tabela apostila_pastas . Uma mensagem de erro sugere que a estrutura do banco de dados não está homologada com o que a aplicação espera, a solução proposta é usar a opção "Corrigir Relação Apostila" no menu Workflow. Vamos detalhar as possíveis causas:

Migração Pendente ou Ausente :
A mensagem indica que a estrutura do banco de dados precisa ser atualizada. Isso sugere que uma migração de banco de dados (para criar ou ajustar tabelas, colunas, ou relações) não foi aplicada.
A opção "Corrigir Relação Apostila" no menu Workflow provavelmente executa um script de migração para ajustar a estrutura do banco, como criar tabelas ausentes, adicionar chaves estrangeiras, ou ajustar índices.
Inconsistência nas Tabelas ou Relações :
As tabelas apostila_anotacoes e apostila_pastas podem estar com diferentes estruturas do esperado pelo código da aplicação. Por exemplo:
A tabela apostila_pastas pode estar ausente ou com colunas faltando.
A chave estrangeira entre apostila_anotacoes.pasta_id e apostila_pastas.id pode não ter sido criada.
Alguma coluna promissora (ex.: nome em apostila_pastas ) pode estar com um tipo de dado incorreto ou ausente.
Erro no Código ou Configuração do Supabase :
Uma consulta no código pode estar tentando acessar colunas ou relações que não existem no banco de dados atual.
O esquema cache do Supabase pode estar desatualizado, não refletindo mudanças recentes no banco de dados.
Falta de Inicialização ou Script de Correção :
O aplicativo parece ter uma funcionalidade chamada "Corrigir Relação Apostila" no menu Workflow, que provavelmente foi projetada para executar uma migração ou script de correção. Se essa funcionalidade não foi executada, o banco de dados permanecerá desatualizado.
Solução Proposta
Para corrigir o erro, precisamos garantir que a estrutura do banco de dados seja correta, criando ou ajustando as tabelas apostila_anotacoes e apostila_pastas , configurando as relações permitidas, e aplicando qualquer migração pendente. Como o erro menciona a opção "Corrigir Relação Apostila" no menu Workflow, também precisamos implementar ou executar essa funcionalidade. Vou detalhar os passos para resolver o problema e, em seguida, fornecer um prompt atualizado para a IA do Vibe Code implementar a correção.

1. Verifique o Menu Workflow e a opção "Corrigir Relação Apostila"
Ação : Localize a opção "Corrigir Relação Apostila" no menu Workflow da aplicação e execute-a.
Passos :
Abra a aplicação e navegue até o menu Workflow (pode estar em um painel de administração ou configurações).
Procure pela opção "Corrigir Relação Apostila" .
Execute uma opção e observe se ela corrige ou erro automaticamente.
Se a opção não estiver visível ou não funcionar, precisaremos implementá-la manualmente (veja os passos a seguir).
2. Criar ou Ajustar as Tabelas no Supabase
Ação : Garantir que as tabelas apostila_anotacoes e apostila_pastas existam com a estrutura correta e que a relação entre elas esteja configurada.
Passos :
Acesse o painel do Supabase e vá para o SQL Editor .
Crie ou verifique a tabela apostila_pastas :
sql

Copiar
CREATE TABLE IF NOT EXISTS public.apostila_pastas (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID NOT NULL,
  nome TEXT NOT NULL,
  descricao TEXT,
  data_criacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE
);

ALTER TABLE apostila_pastas ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Usuários só podem ver suas pastas" ON apostila_pastas
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Usuários podem inserir suas pastas" ON apostila_pastas
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Usuários podem atualizar suas pastas" ON apostila_pastas
FOR UPDATE
USING (auth.uid() = user_id);
Crie ou verifique a tabela apostila_anotacoes :
sql

Copiar
CREATE TABLE IF NOT EXISTS public.apostila_anotacoes (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID NOT NULL,
  pasta_id UUID,
  titulo TEXT NOT NULL,
  conteudo TEXT NOT NULL,
  modelo_anotacao TEXT,
  tags TEXT[],
  data_criacao TIMESTAMP WITH TIME ZONE NOT NULL,
  data_exportacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  origem TEXT NOT NULL,
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE,
  CONSTRAINT fk_pasta_id FOREIGN KEY (pasta_id) REFERENCES apostila_pastas(id) ON DELETE SET NULL
);

ALTER TABLE apostila_anotacoes ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Usuários só podem ver suas anotações" ON apostila_anotacoes
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Usuários podem inserir suas anotações" ON apostila_anotacoes
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Usuários podem atualizar suas anotações" ON apostila_anotacoes
FOR UPDATE
USING (auth.uid() = user_id);
Validação :
Confirme no Table Editor que ambas as tabelas não existem no esquema public .
Insira dados de teste:
sql

Recolher

Desencapsular

Copiar
INSERT INTO apostila_pastas (user_id, nome, descricao)
VALUES ('<seu_user_id>', 'Pasta de Teste', 'Descrição de teste');

INSERT INTO apostila_anotacoes (user_id, pasta_id, titulo, conteudo, modelo_anotacao, tags, data_criacao, origem)
VALUES (
  '<seu_user_id>',
  (SELECT id FROM apostila_pastas WHERE user_id = '<seu_user_id>' LIMIT 1),
  'Anotação de Teste',
  'Conteúdo de teste',
  'Estudo Completo',
  ARRAY['tag1', 'tag2'],
  CURRENT_TIMESTAMP,
  'caderno'
);