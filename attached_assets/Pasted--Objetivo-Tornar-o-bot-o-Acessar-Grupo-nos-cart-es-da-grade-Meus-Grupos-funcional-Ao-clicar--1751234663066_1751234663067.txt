

Objetivo: Tornar o botão "Acessar Grupo" nos cartões da grade "Meus Grupos" funcional. Ao clicar, a interface da mini-seção "Grupos de Estudos" e "Minhas Turmas" será substituída pela interface do grupo selecionado, mantendo o menu lateral esquerdo visível. A nova interface terá mini-seções no topo ("Discussões", "Tarefas", "Membros", "Configurações", "Notificações"), com apenas "Discussões" ativa e as outras inativas por enquanto. O design e layout da mini-seção "Grupos de Estudos" (incluindo modais de "Adicionar Grupo" e "Criar Novo Grupo") não devem ser alterados, e todas as funcionalidades existentes devem ser preservadas.



Instruções Gerais





Escopo Restrito: Foque exclusivamente na função loadMyGroups e adicione uma nova função accessGroup no frontend. Não modifique o design, layout ou qualquer elemento da mini-seção "Grupos de Estudos", incluindo os modais de "Adicionar Grupo" e "Criar Novo Grupo", nem outras partes do código (ex.: createGroup, joinGroupByCode, loadAllGroups, modais existentes).



Preservação: Mantenha intactas todas as funcionalidades existentes (criação via modal, adesão via código/botão, saída/exclusão), sem impacto no layout ou design atual.



Eficiência: Implemente a troca de interface de forma simples, com validação e logs para evitar falhas.



Testes Completos: Após as alterações, teste o acesso ao grupo e envie os logs.



Problemas a Corrigir





Botão "Acessar Grupo" Não Funcional: O botão não substitui a interface atual pela interface do grupo.



Soluções:





Adicionar um botão "Acessar Grupo" que chame accessGroup.



Substituir a interface com mini-seções, mantendo o menu lateral.



Garantir que apenas "Discussões" seja ativa.



Implementação no Frontend (JavaScript)

 // Nova função para acessar o grupo e substituir a interface const accessGroup = async (groupId) => { try { console.log(`Acessando grupo ${groupId}...`); const userId = await validateUserAuth(); if (!userId) { console.error('Usuário não autenticado.'); alert('Usuário não autenticado.'); return; } 

// Simples substituição da interface, mantendo o menu lateral
const groupInterface = document.createElement('div');
groupInterface.id = 'group-interface';
groupInterface.style.cssText = 'margin-left: 250px; padding: 20px;'; // Ajustar margem para menu lateral (assumindo 250px de largura)
groupInterface.innerHTML = `
  <div style="display: flex; justify-content: space-between; border-bottom: 1px solid #ccc; padding-bottom: 10px;">
    <div class="mini-sections">
      <button class="active" style="background: #3498db; color: white; border: none; padding: 5px 10px; margin-right: 5px; border-radius: 5px;">Discussões</button>
      <button disabled style="background: #ddd; color: #666; border: none; padding: 5px 10px; margin-right: 5px; border-radius: 5px;">Tarefas</button>
      <button disabled style="background: #ddd; color: #666; border: none; padding: 5px 10px; margin-right: 5px; border-radius: 5px;">Membros</button>
      <button disabled style="background: #ddd; color: #666; border: none; padding: 5px 10px; margin-right: 5px; border-radius: 5px;">Configurações</button>
      <button disabled style="background: #ddd; color: #666; border: none; padding: 5px 10px; margin-right: 5px; border-radius: 5px;">Notificações</button>
    </div>
    <button onclick="returnToGroups()" style="background: #e74c3c; color: white; border: none; padding: 5px 10px; border-radius: 5px;">Voltar</button>
  </div>
  <div id="discussions-content" style="margin-top: 20px;">
    <p>Conteúdo da seção Discussões (placeholder - chat será configurado no próximo prompt).</p>
  </div>
`;
document.getElementById('main-content').innerHTML = ''; // Substituir conteúdo principal
document.getElementById('main-content').appendChild(groupInterface);
console.log(`Interface do grupo ${groupId} carregada com sucesso.`);

} catch (error) { console.error('Erro ao acessar grupo:', error.message, error.stack); alert('Erro ao acessar o grupo. Verifique o console.'); } };

// Função para voltar à interface original const returnToGroups = () => { console.log('Retornando à interface de Grupos de Estudos...'); loadMyGroups(); // Recarregar a grade Meus Grupos loadAllGroups(); // Recarregar a grade Todos os Grupos };

// Função ajustada para renderizar cartões com botão "Acessar Grupo" const loadMyGroups = async () => { try { const userId = await validateUserAuth(); if (!userId) { console.error('Usuário não autenticado ao carregar Meus Grupos.'); return; } const { data, error } = await supabase .from('grupos_estudo AS g') .select('g.id, g.nome, g.tipo_grupo, g.codigo_unico, g.is_private, g.is_visible_to_all') .or(criador_id.eq.${userId},exists(select 1 from membros_grupos where grupo_id = g.id and user_id = '${userId}')) .order('created_at', { ascending: false });

if (error) {
  console.error('Erro ao carregar Meus Grupos:', error.message);
  return;
}

console.log('Dados retornados do Supabase:', data);
if (!data || data.length === 0) {
  console.warn('Nenhum grupo encontrado para Meus Grupos.');
  return;
}

const grid = document.getElementById('my-groups');
if (!grid) {
  console.error('Elemento #my-groups não encontrado no DOM.');
  return;
}

if (!grid.classList.contains('group-grid')) {
  grid.classList.add('group-grid');
  grid.style.cssText = 'display: flex; flex-wrap: wrap; gap: 10px; padding: 10px;';
}

grid.innerHTML = data.map(group => `
  <div class="group-card" style="display: inline-block; margin: 10px; padding: 10px; border: 1px solid #ccc; border-radius: 5px; width: 200px; background: #f9f9f9; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
    <h3 style="margin: 0; font-size: 1.2em; color: #333;">${group.nome}</h3>
    <p><strong>Tipo:</strong> ${group.tipo_grupo}</p>
    <p><strong>Visibilidade:</strong> ${group.is_private ? 'Privado' : 'Público'}</p>
    <button onclick="accessGroup('${group.id}')" style="background: #2ecc71; color: white; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer; width: 100%; margin-top: 5px;">Acessar Grupo</button>
    <button onclick="showLeaveModal('${group.id}')" style="background: #e74c3c; color: white; border: none; padding: 5px 10px; border-radius: 5px; cursor: pointer; width: 100%; margin-top: 5px;">Sair</button>
  </div>
`).join('');

console.log(`Grade "Meus Grupos" renderizada com ${data.length} grupos.`);

} catch (error) { console.error('Erro geral em loadMyGroups:', error.message, error.stack); } };

// Chamar loadMyGroups manualmente para teste imediato loadMyGroups();

// Manter a inicialização existente document.addEventListener('DOMContentLoaded', () => { loadMyGroups(); });

// Manter outras funções existentes (ex.: createGroup, joinGroupByCode, loadAllGroups, showCelebrationModal, joinGroupDirectly, leaveGroup, deleteGroup) sem alterações