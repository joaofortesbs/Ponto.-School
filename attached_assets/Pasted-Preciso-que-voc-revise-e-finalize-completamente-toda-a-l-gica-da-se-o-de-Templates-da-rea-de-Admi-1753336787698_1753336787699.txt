Preciso que você revise e finalize completamente toda a lógica da seção de Templates da área de Administração da plataforma School Power, garantindo que tudo funcione como descrito abaixo — com integração 100% funcional com a base de dados (Supabase), com os componentes da interface já montados, e com a IA Gemini responsável por gerar as atividades de forma automatizada, dinâmica e contextualizada.

📌 Contexto Atual:

Já temos a interface da seção de “Templates” criada e funcionando, exibindo os cards dinamicamente conforme os dados vindos da tabela school_power_templates no Supabase.

A tabela já está estruturada com os campos necessários: id, name, description, tags, status, api_provider (Gemini), enabled etc.

Os cards aparecem corretamente com os dados dos templates.

Porém, ao clicar no botão "Ver" de cada card, a interface de visualização e geração de conteúdo interno ainda não aparece nem está funcional.

A IA Gemini precisa gerar automaticamente os conteúdos dos templates com base em campos dinâmicos pré-definidos para cada tipo de atividade.

🧩 Objetivo:
Revise e implemente completamente a funcionalidade de geração e visualização dos templates ao clicar em "Ver". Isso inclui:

✅ 1. Interface interna de cada card:

Ao clicar em “Ver”, deve abrir uma nova interface (modal ou rota interna, como preferir) com layout dividido em dois painéis:

🟧 Lado Esquerdo: exibe os campos dinâmicos de input (cada template tem campos próprios conforme seu tipo). Exemplo de campos:

“O que precisa conter na atividade?”

“Número de questões a gerar”

“Estilo de linguagem” etc.

Os campos devem vir da propriedade fields ou tags de cada item na tabela, de forma configurável e extensível.

Quando o usuário preencher esses campos e clicar em "Gerar", a IA Gemini deve processar a requisição e gerar a atividade automaticamente.

🟦 Lado Direito: exibe a visualização da atividade gerada pela IA, conforme os campos preenchidos.

Isso deve ser atualizado em tempo real quando o botão “Gerar” for clicado.

✅ 2. Integração com Gemini:

A IA Gemini já está como api_provider de cada template.

Use os dados inseridos pelo usuário nos campos (lado esquerdo) e envie para a API do Gemini, que retorna a atividade pronta.

Renderize a resposta da IA automaticamente no painel da direita.

Assegure que o sistema salve a atividade gerada com vínculo ao template utilizado.

✅ 3. Salvamento e Entrega:

Após a atividade ser gerada, ela deve ser salva automaticamente e disponibilizada dentro da seção de “Construção de Atividades” do School Power.

Garanta que exista um campo de status da atividade para que o administrador possa acompanhar se ela está “em construção”, “gerada” ou “enviada”.

🛠️ Requisitos técnicos adicionais:

Utilize os dados do Supabase como fonte única de verdade (read/write).

A propriedade fields (jsonb) pode ser usada para mapear os campos dinâmicos de input.

A propriedade last_generated_preview pode ser usada para armazenar o conteúdo da última atividade gerada.

Garantir loading state e tratamento de erros na geração com Gemini.

Garantir que os botões de “Editar” e “Excluir” também estejam funcionando corretamente.

Tudo deve funcionar dentro de uma única rota: /admin/templates.

✨ Objetivo final: Toda a integração da seção de Templates precisa estar completa, robusta e funcional — desde a exibição dos templates até a geração da atividade via IA e salvamento final.

Se algo estiver faltando ou mal implementado, corrija diretamente.