Divida os seguintes componentes em arquivos independentes e reutiliz√°veis:

Tela Principal: (schoolpower/SchoolPower.jsx)

Cont√©m a renderiza√ß√£o principal da interface.

Importa todos os componentes abaixo.

Respons√°vel por controlar o layout e comunica√ß√£o entre componentes.

Part√≠culas Interativas: (schoolpower/components/Particles3D.jsx)

Renderiza as part√≠culas interativas em 3 an√©is conc√™ntricos.

Gera movimento circular cont√≠nuo.

Permite intera√ß√£o de dispers√£o com cursor.

Caixa de Entrada de IA: (schoolpower/components/ChatInput.jsx)

Input de mensagem com placeholder ‚ÄúDigite sua mensagem para a IA‚Ä¶‚Äù

Bot√£o de microfone

Bot√£o ‚Äú+‚Äù para upload ou a√ß√£o futura

Menu suspenso com op√ß√£o ‚ÄúAgente IA‚Äù e ‚ÄúAssistente IA‚Äù

Menu de Perfis do Usu√°rio: (schoolpower/components/ProfileSelector.jsx)

√çcone central clic√°vel com o avatar do perfil ativo (Aluno, Professor etc.)

Expande para mostrar perfis laterais: Professor, Coordenador, Aluno, Expert, Respons√°vel.

Respons√°vel por emitir evento de troca de perfil global

Header de Sauda√ß√£o e Logo: (schoolpower/components/TopHeader.jsx)

Sauda√ß√£o personalizada: ‚ÄúBoa tarde, Jo√£o!‚Äù

Frase interativa: ‚ÄúO que vamos planejar hoje?‚Äù

Logo do School Power no topo

Pode importar dados din√¢micos do usu√°rio

Grade de Funcionalidades: (schoolpower/components/FunctionGrid.jsx)

Renderiza os 15 √≠cones rotativos nas 3 √≥rbitas circulares

Cada √≠cone representa uma funcionalidade ativa com base no perfil selecionado

Cada anel: 1¬™ linha (5), 2¬™ linha (4), 3¬™ linha (6)

Respons√°vel por alternar os √≠cones de forma sincronizada com o perfil

Painel Lateral (RightMenu): (schoolpower/components/SideMenu.jsx)

Painel lateral vertical (direita)

4 bot√µes interativos: Hist√≥rico, Favoritos, Notifica√ß√µes, Configura√ß√µes

Fixado √† direita da tela com z-index elevado

Contexto Global: (schoolpower/context/ProfileContext.js)

Define o contexto React para armazenar e trocar o perfil ativo

Permite comunica√ß√£o entre todos os componentes da interface

Ex: ao trocar de perfil, o FunctionGrid e o TopHeader s√£o atualizados

üß† Considera√ß√µes T√©cnicas:

Utilize ReactJS + TailwindCSS + Framer Motion para as anima√ß√µes

Garanta que os √≠cones nos c√≠rculos n√£o mudem de posi√ß√£o ao trocar perfil

Utilize JSON ou constantes centralizadas para armazenar os √≠cones de cada perfil

Use useEffect com debounce para anima√ß√µes cont√≠nuas e suaves

Adicione tratativas para hover em cada √≠cone

A arquitetura precisa permitir f√°cil inser√ß√£o de novos perfis e funcionalidades sem alterar a base existente