[plugin:vite:react-swc] × the name `quadroInterativoFieldMapping` is defined multiple times
     ╭─[/home/runner/workspace/src/features/schoolpower/activities/quadro-interativo/fieldMapping.ts:21:1]
  21 │   context: string;
  22 │ }
  23 │ 
  24 │ export const quadroInterativoFieldMapping: Record<string, keyof QuadroInterativoFields> = {
     ·              ──────────────┬─────────────
     ·                            ╰── previous definition of `quadroInterativoFieldMapping` here
  25 │   // Mapeamentos originais
  26 │   'Recursos': 'recursos',
  27 │   'Conteúdo': 'conteudo',
  28 │   'Interatividade': 'interatividade',
  29 │   'Design': 'design',
  30 │   'Objetivo': 'objetivo',
  31 │   'Avaliação': 'avaliacao',
  32 │ 
  33 │   // Mapeamentos específicos para o modal
  34 │   'title': 'title',
  35 │   'description': 'description',
  36 │   'subject': 'subject',
  37 │   'theme': 'theme',
  38 │   'schoolYear': 'schoolYear',
  39 │   'objectives': 'objectives',
  40 │   'difficultyLevel': 'difficultyLevel',
  41 │   'quadroInterativoCampoEspecifico': 'quadroInterativoCampoEspecifico',
  42 │   'materials': 'materials',
  43 │   'instructions': 'instructions',
  44 │   'evaluation': 'evaluation',
  45 │   'timeLimit': 'timeLimit',
  46 │   'context': 'context',
  47 │ 
  48 │   // Mapeamentos alternativos para campos do Action Plan
  49 │   'Disciplina / Área de conhecimento': 'subject',
  50 │   'Disciplina': 'subject',
  51 │   'Área de conhecimento': 'subject',
  52 │   'Componente Curricular': 'subject',
  53 │   'Matéria': 'subject',
  54 │ 
  55 │   'Ano / Série': 'schoolYear',
  56 │   'Ano': 'schoolYear',
  57 │   'Série': 'schoolYear',
  58 │   'Ano de Escolaridade': 'schoolYear',
  59 │   'Público-Alvo': 'schoolYear',
  60 │ 
  61 │   'Tema ou Assunto da aula': 'theme',
  62 │   'Tema': 'theme',
  63 │   'Assunto': 'theme',
  64 │   'Tópico': 'theme',
  65 │   'Tema Central': 'theme',
  66 │ 
  67 │   'Objetivo de aprendizagem da aula': 'objectives',
  68 │   'Objetivos': 'objectives',
  69 │   'Objetivo Principal': 'objectives',
  70 │   'Objetivos de Aprendizagem': 'objectives',
  71 │ 
  72 │   'Nível de Dificuldade': 'difficultyLevel',
  73 │   'Dificuldade': 'difficultyLevel',
  74 │   'Nível': 'difficultyLevel',
  75 │   'Complexidade': 'difficultyLevel',
  76 │ 
  77 │   'Atividade mostrada': 'quadroInterativoCampoEspecifico',
  78 │   'Atividade': 'quadroInterativoCampoEspecifico',
  79 │   'Atividades': 'quadroInterativoCampoEspecifico',
  80 │   'Tipo de Atividade': 'quadroInterativoCampoEspecifico',
  81 │   'Recursos Interativos': 'quadroInterativoCampoEspecifico',
  82 │   'Tipo de Interação': 'quadroInterativoCampoEspecifico',
  83 │ 
  84 │   'Materiais': 'materials',
  85 │   'Materiais Necessários': 'materials',
  86 │   'Recursos Visuais': 'materials',
  87 │ 
  88 │   'Instruções': 'instructions',
  89 │   'Metodologia': 'instructions',
  90 │   'Como Fazer': 'instructions',
  91 │   'Procedimentos': 'instructions',
  92 │ 
  93 │   'Critérios de Avaliação': 'evaluation',
  94 │   'Critérios': 'evaluation',
  95 │   'Como Avaliar': 'evaluation',
  96 │ 
  97 │   'Tempo': 'timeLimit',
  98 │   'Duração': 'timeLimit',
  99 │   'Tempo Estimado': 'timeLimit',
 100 │   'Tempo da Atividade': 'timeLimit',
 101 │ 
 102 │   'Contexto': 'context',
 103 │   'Aplicação': 'context',
 104 │   'Onde Usar': 'context',
 105 │   'Contexto de Aplicação': 'context'
 106 │ };
 107 │ 
 108 │ // Mapeamento reverso para facilitar a busca
 109 │ export const reverseQuadroInterativoFieldMapping: Record<keyof QuadroInterativoFields, string[]> = {
 110 │   recursos: ['Recursos', 'Materiais', 'Materiais Necessários'],
 111 │   conteudo: ['Conteúdo', 'Instruções', 'Metodologia'],
 112 │   interatividade: ['Interatividade', 'Atividade mostrada', 'Recursos Interativos'],
 113 │   design: ['Design', 'Nível de Dificuldade', 'Complexidade'],
 114 │   objetivo: ['Objetivo', 'Objetivos', 'Objetivo de aprendizagem da aula'],
 115 │   avaliacao: ['Avaliação', 'Critérios', 'Critérios de Avaliação'],
 116 │   title: ['title', 'Título'],
 117 │   description: ['description', 'Descrição'],
 118 │   subject: ['subject', 'Disciplina', 'Disciplina / Área de conhecimento'],
 119 │   theme: ['theme', 'Tema', 'Tema ou Assunto da aula'],
 120 │   schoolYear: ['schoolYear', 'Ano / Série', 'Ano de Escolaridade'],
 121 │   objectives: ['objectives', 'Objetivos', 'Objetivo de aprendizagem da aula'],
 122 │   difficultyLevel: ['difficultyLevel', 'Nível de Dificuldade', 'Dificuldade'],
 123 │   quadroInterativoCampoEspecifico: ['quadroInterativoCampoEspecifico', 'Atividade mostrada', 'Atividade', 'Tipo de Interação'],
 124 │   materials: ['materials', 'Materiais', 'Recursos'],
 125 │   instructions: ['instructions', 'Instruções', 'Metodologia'],
 126 │   evaluation: ['evaluation', 'Avaliação', 'Critérios de Avaliação'],
 127 │   timeLimit: ['timeLimit', 'Tempo', 'Duração'],
 128 │   context: ['context', 'Contexto', 'Aplicação']
 129 │ };
 130 │ 
 131 │ // Função utilitária para encontrar o campo correto baseado no valor
 132 │ export function findFieldByValue(value: string, targetField: keyof QuadroInterativoFields): boolean {
 133 │   const possibleKeys = reverseQuadroInterativoFieldMapping[targetField] || [];
 134 │   return possibleKeys.some(key => quadroInterativoFieldMapping[key] === targetField);
 135 │ }
 136 │ 
 137 │ // Função para validar se um campo é válido para Quadro Interativo
 138 │ export function isValidQuadroInterativoField(fieldKey: string): boolean {
 139 │   return fieldKey in quadroInterativoFieldMapping;
 140 │ }
 141 │ 
 142 │ // Campos obrigatórios para Quadro Interativo
 143 │ export const requiredQuadroInterativoFields: (keyof QuadroInterativoFields)[] = [
 144 │   'subject',
 145 │   'schoolYear',
 146 │   'theme',
 147 │   'objectives',
 148 │   'difficultyLevel',
 149 │   'quadroInterativoCampoEspecifico'
 150 │ ];
 151 │ 
 152 │ // Função para validar se todos os campos obrigatórios estão preenchidos
 153 │ export function validateRequiredFields(data: Partial<QuadroInterativoFields>): boolean {
 154 │   return requiredQuadroInterativoFields.every(field =>
 155 │     data[field] && typeof data[field] === 'string' && data[field]!.trim().length > 0
 156 │   );
 157 │ }
 158 │ 
 159 │ // Atualizar mapeamento de campos do Quadro Interativo para corresponder exatamente aos nomes dos campos
 160 │ export const quadroInterativoFieldMappingUpdate: Record<keyof QuadroInterativoFields, string[]> = {
 161 │   subject: ['Disciplina / Área de conhecimento', 'disciplina', 'Disciplina'],
 162 │   schoolYear: ['Ano / Série', 'anoSerie', 'Ano de Escolaridade'],
 163 │   theme: ['Tema ou Assunto da aula', 'tema', 'Tema'],
 164 │   objectives: ['Objetivo de aprendizagem da aula', 'objetivos', 'Objetivos'],
 165 │   difficultyLevel: ['Nível de Dificuldade', 'nivelDificuldade', 'dificuldade'],
 166 │   quadroInterativoCampoEspecifico: ['Atividade mostrada', 'atividadeMostrada', 'quadroInterativoCampoEspecifico', 'Campo Específico do Quadro Interativo', 'Tipo de Interação'],
 167 │   recursos: ['Recursos', 'Materiais', 'Materiais Necessários'],
 168 │   conteudo: ['Conteúdo', 'Instruções', 'Metodologia'],
 169 │   interatividade: ['Interatividade', 'Atividade mostrada', 'Recursos Interativos'],
 170 │   design: ['Design', 'Nível de Dificuldade', 'Complexidade'],
 171 │   objetivo: ['Objetivo', 'Objetivos', 'Objetivo de aprendizagem da aula'],
 172 │   avaliacao: ['Avaliação', 'Critérios', 'Critérios de Avaliação'],
 173 │   title: ['title', 'Título'],
 174 │   description: ['description', 'Descrição'],
 175 │   materials: [
 176 │     'materials',
 177 │     'material',
 178 │     'materiais',
 179 │     'materiaisNecessarios',
 180 │     'recursos',
 181 │     'recursos_necessarios'
 182 │   ],
 183 │   instructions: ['instructions', 'Instruções', 'Metodologia'],
 184 │   evaluation: ['evaluation', 'Avaliação', 'Critérios de Avaliação'],
 185 │   timeLimit: ['timeLimit', 'Tempo', 'Duração'],
 186 │   context: ['context', 'Contexto', 'Aplicação']
 187 │ };
 188 │ 
 189 │ // Função para mapear dados do Action Plan para campos do formulário
 190 │ export function mapQuadroInterativoFields(actionPlanData: any): any {
 191 │   const customFields = actionPlanData.customFields || {};
 192 │ 
 193 │   return {
 194 │     title: actionPlanData.personalizedTitle || actionPlanData.title || '',
 195 │     description: actionPlanData.personalizedDescription || actionPlanData.description || '',
 196 │     subject: getFieldValue(customFields, quadroInterativoFieldMappingUpdate.subject) || 'Matemática',
 197 │     schoolYear: getFieldValue(customFields, quadroInterativoFieldMappingUpdate.schoolYear) || 'Ex: 6º Ano, 7º Ano, 8º Ano',
 198 │     theme: getFieldValue(customFields, quadroInterativoFieldMappingUpdate.theme) || actionPlanData.title || 'Ex: Substantivos e Verbos, Frações, Sistema Solar',
 199 │     objectives: getFieldValue(customFields, quadroInterativoFieldMappingUpdate.objectives) || actionPlanData.description || '',
 200 │     difficultyLevel: getFieldValue(customFields, quadroInterativoFieldMappingUpdate.difficultyLevel) || 'Ex: Básico, Intermediário, Avançado',
 201 │     quadroInterativoCampoEspecifico: getFieldValue(customFields, quadroInterativoFieldMappingUpdate.quadroInterativoCampoEspecifico) || 'Ex: Jogo de arrastar e soltar, Quiz interativo, Mapa mental',
 202 │     materials: normalizeMaterials(getFieldValue(customFields, ['Materiais', 'Recursos'])),
 203 │     instructions: getFieldValue(customFields, ['Instruções', 'Metodologia']),
 204 │     evaluation: getFieldValue(customFields, ['Avaliação', 'Critérios de Avaliação']),
 205 │     timeLimit: getFieldValue(customFields, ['Tempo', 'Duração']),
 206 │     context: getFieldValue(customFields, ['Contexto', 'Aplicação'])
 207 │   };
 208 │ }
 209 │ 
 210 │ function getFieldValue(customFields: any, possibleKeys: string[]): string {
 211 │   for (const key of possibleKeys) {
 212 │     if (customFields[key]) {
 213 │       return customFields[key];
 214 │     }
 215 │   }
 216 │   return '';
 217 │ }
 218 │ 
 219 │ /**
 220 │  * Sanitiza texto para evitar problemas de JSON
 221 │  */
 222 │ function sanitizeText(text: string | undefined | null): string {
 223 │   if (!text || typeof text !== 'string') return '';
 224 │ 
 225 │   return text
 226 │     .replace(/[\u0000-\u001F\u007F-\u009F]/g, '') // Remove caracteres de controle
 227 │     .replace(/\\/g, '\\\\')
 228 │     .replace(/"/g, '\\"')
 229 │     .replace(/\n/g, ' ')
 230 │     .replace(/\r/g, ' ')
 231 │     .replace(/\t/g, ' ')
 232 │     .replace(/\s+/g, ' ')
 233 │     .trim();
 234 │ }
 235 │ 
 236 │ /**
 237 │  * Valida se o valor é seguro para uso
 238 │  */
 239 │ function isValidValue(value: any): boolean {
 240 │   if (value === null || value === undefined) return false;
 241 │   if (typeof value === 'string' && value.trim() === '') return false;
 242 │   return true;
 243 │ }
 244 │ 
 245 │ export function prepareQuadroInterativoDataForModal(activity: any) {
 246 │   console.log('🎯 Preparando dados do Quadro Interativo para o modal:', activity);
 247 │ 
 248 │   try {
 249 │     const customFields = activity.customFields || {};
 250 │ 
 251 │     // Sanitizar e validar cada campo
 252 │     const safeTitle = sanitizeText(activity.personalizedTitle || activity.title);
 253 │     const safeDescription = sanitizeText(activity.personalizedDescription || activity.description);
 254 │ 
 255 │     const formData = {
 256 │       subject: isValidValue(customFields['Disciplina']) ? sanitizeText(customFields['Disciplina']) : 'Matemática',
 257 │       schoolYear: isValidValue(customFields['Ano / Série']) ? sanitizeText(customFields['Ano / Série']) : 'Ex: 6º Ano, 7º Ano, 8º Ano',
 258 │       theme: safeTitle || 'Ex: Substantivos e Verbos, Frações, Sistema Solar',
 259 │       objectives: isValidValue(customFields['Objetivos de Aprendizagem']) ? sanitizeText(customFields['Objetivos de Aprendizagem']) : '',
 260 │       difficultyLevel: isValidValue(customFields['Nível de Dificuldade']) ? sanitizeText(customFields['Nível de Dificuldade']) : 'Ex: Básico, Intermediário, Avançado',
 261 │       quadroInterativoCampoEspecifico: isValidValue(customFields['Tipo de Interação']) ? sanitizeText(customFields['Tipo de Interação']) : 'Ex: Jogo de arrastar e soltar, Quiz interativo, Mapa mental',
 262 │       bnccCompetencias: isValidValue(customFields['BNCC / Competências']) ? sanitizeText(customFields['BNCC / Competências']) : '',
 263 │       publico: isValidValue(customFields['Público-alvo']) ? sanitizeText(customFields['Público-alvo']) : '',
 264 │       materials: normalizeMaterials(customFields['Materiais'] || customFields['Recursos'])
 265 │     };
 266 │ 
 267 │     // Validar que nenhum campo contém valores problemáticos
 268 │     Object.keys(formData).forEach(key => {
 269 │       if (typeof formData[key] === 'string' && formData[key].includes('undefined')) {
 270 │         formData[key] = '';
 271 │       }
 272 │     });
 273 │ 
 274 │     console.log('✅ FormData do Quadro Interativo preparado e validado:', formData);
 275 │     return formData;
 276 │ 
 277 │   } catch (error) {
 278 │     console.error('❌ Erro ao preparar dados do Quadro Interativo:', error);
 279 │ 
 280 │     // Retornar dados padrão seguros em caso de erro
 281 │     return {
 282 │       subject: 'Matemática',
 283 │       schoolYear: 'Ex: 6º Ano, 7º Ano, 8º Ano',
 284 │       theme: 'Ex: Substantivos e Verbos, Frações, Sistema Solar',
 285 │       objectives: '',
 286 │       difficultyLevel: 'Ex: Básico, Intermediário, Avançado',
 287 │       quadroInterativoCampoEspecifico: 'Ex: Jogo de arrastar e soltar, Quiz interativo, Mapa mental',
 288 │       bnccCompetencias: '',
 289 │       publico: '',
 290 │       materials: ''
 291 │     };
 292 │   }
 293 │ }
 294 │ 
 295 │ // Função para normalizar o campo materials
 296 │ export const normalizeMaterials = (materials: any): string => {
 297 │   if (!materials) return '';
 298 │ 
 299 │   if (typeof materials === 'string') {
 300 │     return materials;
 301 │   }
 302 │ 
 303 │   if (Array.isArray(materials)) {
 304 │     return materials.map(item => {
 305 │       if (typeof item === 'string') return item;
 306 │       if (typeof item === 'object' && item !== null) {
 307 │         // Se for um objeto, tentar extrair propriedades relevantes
 308 │         if (item.nome || item.name) return String(item.nome || item.name);
 309 │         if (item.titulo || item.title) return String(item.titulo || item.title);
 310 │         if (item.descricao || item.description) return String(item.descricao || item.description);
 311 │         return JSON.stringify(item);
 312 │       }
 313 │       return String(item);
 314 │     }).filter(item => item.trim()).join('\n');
 315 │   }
 316 │ 
 317 │   if (typeof materials === 'object' && materials !== null) {
 318 │     // Se for um objeto, tentar extrair propriedades relevantes
 319 │     if (materials.nome || materials.name) return String(materials.nome || materials.name);
 320 │     if (materials.titulo || materials.title) return String(materials.titulo || materials.title);
 321 │     if (materials.descricao || materials.description) return String(materials.descricao || materials.description);
 322 │     return JSON.stringify(materials);
 323 │   }
 324 │ 
 325 │   return String(materials);
 326 │ };
 327 │ /**
 328 │  * Mapeamento de campos para Quadro Interativo
 329 │  */
 330 │ export const quadroInterativoFieldMapping = {
     ·              ──────────────┬─────────────
     ·                            ╰── `quadroInterativoFieldMapping` redefined here
 331 │   'Disciplina / Área de conhecimento': 'subject',
 332 │   'Ano / Série': 'schoolYear', 
 333 │   'Tema ou Assunto da aula': 'theme',
     ╰────
/home/runner/workspace/src/features/schoolpower/activities/quadro-interativo/fieldMapping.ts:21:1
137|  // Função para validar se um campo é válido para Quadro Interativo
138|  export function isValidQuadroInterativoField(fieldKey: string): boolean {
139|    return fieldKey in quadroInterativoFieldMapping;
   |          ^
140|  }
141|
Click outside, press Esc key, or fix the code to dismiss.