üîç Causas Identificadas do Erro

Erro de Sintaxe no Comando:
O comando n√£o separa corretamente o echo do node , causando falha na execu√ß√£o.
Script fix-apostila-relation.js Ausente ou com Problemas:
O script n√£o pode existir no diret√≥rio scripts/ .
O script pode ter erros de sintaxe, depend√™ncias ausentes ou n√£o estar configurado corretamente para interagir com o Supabase.
‚úÖ Objetivo e Resultado Esperado

Corrigir o comando para executar o echo e o n√≥ corretamente.
Crie ou corrija o script fix-apostila-relation.js para que ele crie as tabelas apostila_pastas e apostila_anotacoes com as rela√ß√µes e pol√≠ticas de RLS corretas.
Certifique-se de que o script seja atualizado e que as depend√™ncias necess√°rias sejam instaladas.
Validar que, ap√≥s a execu√ß√£o do roteiro, o Modal da Apostila Inteligente funciona corretamente, exibindo as anota√ß√µes sem erros.
üõ†Ô∏è Instru√ß√µes para Corre√ß√£o

1. Corrigir o Comando
O comando preciso de um operador para separar o eco do node . Vamos usar o operador && para garantir que o segundo comando s√≥ seja executado se o primeiro for bem-sucedido.

Comando Corrigido:
festan√ßa

Copiar
echo "Iniciando corre√ß√£o da rela√ß√£o Apostila..." && node scripts/fix-apostila-relation.js
Valida√ß√£o:

Execute o comando no terminal e confirme que a mensagem "Iniciando corre√ß√£o da rela√ß√£o Apostila..." √© exibida, seguida da execu√ß√£o do script (se ele existir).
2. Verifique e crie o script fix-apostila-relation.js
-se de que o script existe e est√° funcionando corretamente. Se ele n√£o existir, crie-o com a l√≥gica necess√°ria para corrigir a rela√ß√£o Apostila.

Passo 1: Verifique a exist√™ncia do script:
Navegue at√© o diret√≥rio scripts/ no projeto.
Confirme se o arquivo fix-apostila-relation.js existe.
Passo 2: Crie o script se ele n√£o existir:
Crie o arquivo scripts/fix-apostila-relation.js com o seguinte conte√∫do:
JavaScript

Copiar
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// Inicializar o cliente do Supabase
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
const supabase = createClient(supabaseUrl, supabaseKey);

async function fixApostilaRelation() {
  console.log('Iniciando corre√ß√£o da rela√ß√£o Apostila...');

  try {
    // 1. Criar tabela apostila_pastas se n√£o existir
    const { error: pastasError } = await supabase.rpc('execute_sql', {
      sql_statement: `
        CREATE TABLE IF NOT EXISTS public.apostila_pastas (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          user_id UUID NOT NULL,
          nome TEXT NOT NULL,
          descricao TEXT,
          data_criacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
          CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE
        );

        ALTER TABLE apostila_pastas ENABLE ROW LEVEL SECURITY;

        CREATE POLICY "Usu√°rios s√≥ podem ver suas pastas" ON apostila_pastas
        FOR SELECT
        USING (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem inserir suas pastas" ON apostila_pastas
        FOR INSERT
        WITH CHECK (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem atualizar suas pastas" ON apostila_pastas
        FOR UPDATE
        USING (auth.uid() = user_id);
      `,
    });

    if (pastasError) {
      throw new Error(`Erro ao criar tabela apostila_pastas: ${pastasError.message}`);
    }

    // 2. Criar tabela apostila_anotacoes se n√£o existir
    const { error: anotacoesError } = await supabase.rpc('execute_sql', {
      sql_statement: `
        CREATE TABLE IF NOT EXISTS public.apostila_anotacoes (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          user_id UUID NOT NULL,
          pasta_id UUID,
          titulo TEXT NOT NULL,
          conteudo TEXT NOT NULL,
          modelo_anotacao TEXT,
          tags TEXT[],
          data_criacao TIMESTAMP WITH TIME ZONE NOT NULL,
          data_exportacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
          origem TEXT NOT NULL,
          CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE,
          CONSTRAINT fk_pasta_id FOREIGN KEY (pasta_id) REFERENCES apostila_pastas(id) ON DELETE SET NULL
        );

        ALTER TABLE apostila_anotacoes ENABLE ROW LEVEL SECURITY;

        CREATE POLICY "Usu√°rios s√≥ podem ver suas anota√ß√µes" ON apostila_anotacoes
        FOR SELECT
        USING (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem inserir suas anota√ß√µes" ON apostila_anotacoes
        FOR INSERT
        WITH CHECK (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem atualizar suas anota√ß√µes" ON apostila_anotacoes
        FOR UPDATE
        USING (auth.uid() = user_id);
      `,
    });

    if (anotacoesError) {
      throw new Error(`Erro ao criar tabela apostila_anotacoes: ${anotacoesError.message}`);
    }

    console.log('Rela√ß√£o Apostila corrigida com sucesso!');
  } catch (error) {
    console.error('Erro ao corrigir rela√ß√£o Apostila:', error.message);
    process.exit(1);
  }
}

// Executar a fun√ß√£o
fixApostilaRelation();
Passo 3: Instale as depend√™ncias de necessidade:
Certifique-se de que as depend√™ncias @supabase/supabase-js e dotenv est√£o instaladas:
festan√ßa

Copiar
npm install @supabase/supabase-js dotenv
Passo 4: Configure as vari√°veis ‚Äã‚Äãde ambiente:
Crie ou edite o arquivo .env na raiz do projeto com as credenciais do Supabase:
texto

Copiar
SUPABASE_URL=<sua_url_do_supabase>
SUPABASE_KEY=<sua_chave_do_supabase>
Substitua <sua_url_do_supabase> e <sua_chave_do_supabase> pelas credenciais do seu projeto Supabase (encontradas em Configura√ß√µes > API no painel do Supabase).
Valida√ß√£o:

Execute o comando corrigido:
festan√ßa

Copiar
echo "Iniciando corre√ß√£o da rela√ß√£o Apostila..." && node scripts/fix-apostila-relation.js
Confirme que o terminal exibe:
texto

Copiar
Iniciando corre√ß√£o da rela√ß√£o Apostila...
Rela√ß√£o Apostila corrigida com sucesso!
Verifique no painel do Supabase (no Table Editor ) que as tabelas apostila_pastas e apostila_anotacoes foram criadas com as estruturas e pol√≠ticas de RLS corretas.