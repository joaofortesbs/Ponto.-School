2. Ajustar a Tabela apostila_anotacoes e Adicionar a Chave Estrangeira
-se de que a tabela apostila_anotacoes existe e que a coluna pasta_id refere-se corretamente a tabela apostila_pastas .

Passo 1: Verifique se existe tabela apostila_anotacoes . Se não existir, crie-a com a estrutura correta:
sql

Copiar
CREATE TABLE public.apostila_anotacoes (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id UUID NOT NULL,
  pasta_id UUID,
  titulo TEXT NOT NULL,
  conteudo TEXT NOT NULL,
  modelo_anotacao TEXT,
  tags TEXT[],
  data_criacao TIMESTAMP WITH TIME ZONE NOT NULL,
  data_exportacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  origem TEXT NOT NULL,
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE,
  CONSTRAINT fk_pasta_id FOREIGN KEY (pasta_id) REFERENCES apostila_pastas(id) ON DELETE SET NULL
);

ALTER TABLE apostila_anotacoes ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Usuários só podem ver suas anotações" ON apostila_anotacoes
FOR SELECT
USING (auth.uid() = user_id);

CREATE POLICY "Usuários podem inserir suas anotações" ON apostila_anotacoes
FOR INSERT
WITH CHECK (auth.uid() = user_id);

CREATE POLICY "Usuários podem atualizar suas anotações" ON apostila_anotacoes
FOR UPDATE
USING (auth.uid() = user_id);
Passo 2: Se a tabela apostila_anotacoes já existe, mas a chave estrangeira fk_pasta_id não foi criada, adicione-a:
sql

Copiar
ALTER TABLE apostila_anotacoes
ADD CONSTRAINT fk_pasta_id
FOREIGN KEY (pasta_id)
REFERENCES apostila_pastas (id)
ON DELETE SET NULL;
Validação:

Confirme no Table Editor que a tabela apostila_anotacoes tem a chave estrangeira fk_pasta_id associada a apostila_pastas.id .
Insira uma anotação de teste para verificar:
sql

Copiar
INSERT INTO apostila_anotacoes (user_id, pasta_id, titulo, conteudo, modelo_anotacao, tags, data_criacao, origem)
VALUES (
  '<seu_user_id>',
  (SELECT id FROM apostila_pastas WHERE user_id = '<seu_user_id>' LIMIT 1),
  'Anotação de Teste',
  'Conteúdo de teste',
  'Estudo Completo',
  ARRAY['tag1', 'tag2'],
  CURRENT_TIMESTAMP,
  'caderno'
);
Execute uma consulta para confirmar:
sql

Copiar
SELECT * FROM apostila_anotacoes WHERE user_id = '<seu_user_id>';
3. Atualizar o Schema Cache do Supabase
Após criar a tabela apostila_pastas , precisamos garantir que o Supabase reconheça uma nova tabela atualizando o cache do esquema.

Passo 1: No painel do Supabase, vá para Configurações > API .
Passo 2: Clique em Atualizar API Docs para recarregar o cache do esquema.
Passo 3: Se o problema persistir, vá para Configurações > Geral e clique em Reiniciar Projeto para reiniciar o projeto e recarregar o esquema.
Passo 4 (Opcional): Reinicie a aplicação para garantir que o cliente do Supabase (usado no Vibe Code) recarregue o esquema.
Validação:

Execute uma consulta manual no painel do Supabase para confirmar que a tabela é reconhecida:
sql

Copiar
SELECT * FROM apostila_pastas LIMIT 1;
Confirme que a consulta retorna dados sem erros.