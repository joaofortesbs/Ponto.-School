üõ†Ô∏è Instru√ß√µes para Corre√ß√£o

1. Configurar e Validar as Pol√≠ticas de RLS no Supabase
Certifique-se de que as pol√≠ticas de RLS estejam corretamente configuradas para todas as tabelas envolvidas ( caderno_anotacoes , apostila_anotacoes , apostila_pastas ).

Pol√≠tica para apostila_anotacoes :
Crie uma pol√≠tica que permita ao usu√°rio ler apenas suas pr√≥prias anota√ß√µes:
sql

Copiar
CREATE POLICY "Usu√°rios s√≥ podem ver suas anota√ß√µes" ON apostila_anotacoes
FOR SELECT
USING (auth.uid() = user_id);
Crie uma pol√≠tica para permitir inser√ß√µes:
sql

Copiar
CREATE POLICY "Usu√°rios podem inserir suas anota√ß√µes" ON apostila_anotacoes
FOR INSERT
WITH CHECK (auth.uid() = user_id);
Crie uma pol√≠tica para atualiza√ß√µes:
sql

Copiar
CREATE POLICY "Usu√°rios podem atualizar suas anota√ß√µes" ON apostila_anotacoes
FOR UPDATE
USING (auth.uid() = user_id);
Pol√≠tica para caderno_anotacoes :
Aplique pol√≠ticas semelhantes para leitura, inser√ß√£o e atualiza√ß√£o, garantindo que apenas o user_id autenticado possa manipular seus dados.
Pol√≠tica para apostila_pastas :
Aplique pol√≠ticas de RLS para garantir que o usu√°rio acesse suas pr√≥prias pastas.
Valida√ß√£o:

Teste no painel do Supabase: Execute uma consulta como SELECT * FROM apostila_anotacoes WHERE user_id = <user_id> com o user_id do usu√°rio autenticado e confirme que os dados s√£o retornados.
2. Revisar e Corrigir a L√≥gica de Exporta√ß√£o (Caderno ‚Üí Apostila)
Garanta que as anota√ß√µes sejam corretamente exportadas do Caderno para a Apostila, com tratamento de erros adequado.

L√≥gica de Exporta√ß√£o:
Implemente a seguinte fun√ß√£o para exportar uma anota√ß√£o:
JavaScript

Copiar
async function exportAnotacaoParaApostila(anotacaoId, selectedPastaId, updatedTitulo, updatedTags) {
  try {
    // 1. Buscar a anota√ß√£o do Caderno
    const { data: anotacao, error: fetchError } = await supabase
      .from('caderno_anotacoes')
      .select('*')
      .eq('id', anotacaoId)
      .eq('user_id', auth.currentUser.uid) // Garantir que o user_id seja do usu√°rio autenticado
      .single();

    if (fetchError) {
      console.error('Erro ao buscar anota√ß√£o do Caderno:', fetchError.message);
      showError('Erro ao buscar a anota√ß√£o. Tente novamente.');
      return;
    }

    if (!anotacao) {
      showError('Anota√ß√£o n√£o encontrada.');
      return;
    }

    // 2. Criar nova anota√ß√£o na Apostila
    const novaAnotacao = {
      user_id: anotacao.user_id,
      pasta_id: selectedPastaId || null,
      titulo: updatedTitulo || anotacao.titulo,
      conteudo: anotacao.conteudo,
      modelo_anotacao: anotacao.modelo_anotacao,
      tags: updatedTags || anotacao.tags,
      data_criacao: anotacao.data_criacao,
      data_exportacao: new Date().toISOString(),
      origem: 'caderno',
    };

    const { data: insertedAnotacao, error: insertError } = await supabase
      .from('apostila_anotacoes')
      .insert([novaAnotacao])
      .select()
      .single();

    if (insertError) {
      console.error('Erro ao salvar na Apostila:', insertError.message);
      showError('Erro ao salvar na Apostila. Tente novamente.');
      return;
    }

    // 3. Atualizar o status da anota√ß√£o original no Caderno
    const { error: updateError } = await supabase
      .from('caderno_anotacoes')
      .update({ status: 'exportado', data_atualizacao: new Date().toISOString() })
      .eq('id', anotacaoId)
      .eq('user_id', auth.currentUser.uid);

    if (updateError) {
      console.error('Erro ao atualizar status no Caderno:', updateError.message);
      showError('Erro ao atualizar o status da anota√ß√£o. Tente novamente.');
      return;
    }

    // 4. Registrar a a√ß√£o no log de atividades
    await supabase.from('user_activity_logs').insert({
      user_id: auth.currentUser.uid,
      acao: 'exportou anota√ß√£o',
      anotacao_id: insertedAnotacao.id,
      timestamp: new Date().toISOString(),
      detalhes: `Anota√ß√£o "${novaAnotacao.titulo}" exportada para a Apostila.`,
    });

    // 5. Notificar o usu√°rio
    showNotification(`Anota√ß√£o "${novaAnotacao.titulo}" salva com sucesso!`);

  } catch (err) {
    console.error('Erro geral na exporta√ß√£o:', err.message);
    showError('Erro inesperado ao exportar a anota√ß√£o. Tente novamente.');
  }
}
Valida√ß√£o:

Teste a fun√ß√£o acima com uma anota√ß√£o existente no Caderno.
Confirme no painel do Supabase que a anota√ß√£o foi inserida na tabela apostila_anotacoes e que o status em caderno_anotacoes foi atualizado para "exportado".
Verifique se o log de atividade foi registrado em user_activity_logs .