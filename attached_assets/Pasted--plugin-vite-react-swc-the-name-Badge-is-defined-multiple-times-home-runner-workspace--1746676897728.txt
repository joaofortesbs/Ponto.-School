[plugin:vite:react-swc] × the name `Badge` is defined multiple times
    ╭─[/home/runner/workspace/src/components/turmas/GroupCard.tsx:1:1]
  1 │ 
  2 │ import React from "react";
  3 │ import { Card } from "@/components/ui/card";
  4 │ import { Badge } from "@/components/ui/badge";
    ·          ──┬──
    ·            ╰── previous definition of `Badge` here
  5 │ import { Users, Clock, BookOpen, MessageSquare } from "lucide-react";
  6 │ 
  7 │ interface GroupCardProps {
  8 │   group: {
  9 │     id: string;
 10 │     name: string;
 11 │     members: string[];
 12 │     nextMeeting: string;
 13 │     course: string;
 14 │     description: string;
 15 │     hasNewMessages: boolean;
 16 │     lastActivity: string;
 17 │     coverImage?: string;
 18 │   };
 19 │   onClick: () => void;
 20 │ }
 21 │ 
 22 │ const GroupCard: React.FC<GroupCardProps> = ({ group, onClick }) => {
 23 │   return (
 24 │     <Card 
 25 │       className="overflow-hidden hover:shadow-lg transition-all duration-300 cursor-pointer h-full flex flex-col"
 26 │       onClick={onClick}
 27 │     >
 28 │       {group.coverImage && (
 29 │         <div className="h-32 overflow-hidden">
 30 │           <img 
 31 │             src={group.coverImage} 
 32 │             alt={group.name} 
 33 │             className="w-full h-full object-cover"
 34 │           />
 35 │         </div>
 36 │       )}
 37 │       <div className="p-4 flex-1 flex flex-col">
 38 │         <div className="flex justify-between items-start">
 39 │           <h3 className="text-lg font-bold text-gray-900 dark:text-white line-clamp-2">{group.name}</h3>
 40 │           {group.hasNewMessages && (
 41 │             <Badge className="bg-[#FF6B00] text-white">Novo</Badge>
 42 │           )}
 43 │         </div>
 44 │         
 45 │         <p className="text-sm text-gray-500 dark:text-gray-400 mt-2 line-clamp-2">
 46 │           {group.description}
 47 │         </p>
 48 │         
 49 │         <div className="mt-4 flex items-center text-sm text-gray-500 dark:text-gray-400">
 50 │           <BookOpen className="h-4 w-4 mr-1 text-[#FF6B00]" />
 51 │           <span>{group.course}</span>
 52 │         </div>
 53 │         
 54 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
 55 │           <Users className="h-4 w-4 mr-1 text-[#FF6B00]" />
 56 │           <span>{group.members.length} membros</span>
 57 │         </div>
 58 │         
 59 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
 60 │           <Clock className="h-4 w-4 mr-1 text-[#FF6B00]" />
 61 │           <span>Próxima reunião: {group.nextMeeting}</span>
 62 │         </div>
 63 │         
 64 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
 65 │           <MessageSquare className="h-4 w-4 mr-1 text-[#FF6B00]" />
 66 │           <span>Última atividade: {group.lastActivity}</span>
 67 │         </div>
 68 │       </div>
 69 │     </Card>
 70 │   );
 71 │ };
 72 │ 
 73 │ export default GroupCard;
 74 │ 
 75 │ import React from "react";
 76 │ import { motion } from "framer-motion";
 77 │ import { Button } from "@/components/ui/button";
 78 │ import { Badge } from "@/components/ui/badge";
    ·          ──┬──
    ·            ╰── `Badge` redefined here
 79 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
 80 │ import { Calendar, Users, MessageCircle, Lock, Globe } from "lucide-react";
    ╰────

  × the name `Users` is defined multiple times
    ╭─[/home/runner/workspace/src/components/turmas/GroupCard.tsx:2:1]
  2 │ import React from "react";
  3 │ import { Card } from "@/components/ui/card";
  4 │ import { Badge } from "@/components/ui/badge";
  5 │ import { Users, Clock, BookOpen, MessageSquare } from "lucide-react";
    ·          ──┬──
    ·            ╰── previous definition of `Users` here
  6 │ 
  7 │ interface GroupCardProps {
  8 │   group: {
  9 │     id: string;
 10 │     name: string;
 11 │     members: string[];
 12 │     nextMeeting: string;
 13 │     course: string;
 14 │     description: string;
 15 │     hasNewMessages: boolean;
 16 │     lastActivity: string;
 17 │     coverImage?: string;
 18 │   };
 19 │   onClick: () => void;
 20 │ }
 21 │ 
 22 │ const GroupCard: React.FC<GroupCardProps> = ({ group, onClick }) => {
 23 │   return (
 24 │     <Card 
 25 │       className="overflow-hidden hover:shadow-lg transition-all duration-300 cursor-pointer h-full flex flex-col"
 26 │       onClick={onClick}
 27 │     >
 28 │       {group.coverImage && (
 29 │         <div className="h-32 overflow-hidden">
 30 │           <img 
 31 │             src={group.coverImage} 
 32 │             alt={group.name} 
 33 │             className="w-full h-full object-cover"
 34 │           />
 35 │         </div>
 36 │       )}
 37 │       <div className="p-4 flex-1 flex flex-col">
 38 │         <div className="flex justify-between items-start">
 39 │           <h3 className="text-lg font-bold text-gray-900 dark:text-white line-clamp-2">{group.name}</h3>
 40 │           {group.hasNewMessages && (
 41 │             <Badge className="bg-[#FF6B00] text-white">Novo</Badge>
 42 │           )}
 43 │         </div>
 44 │         
 45 │         <p className="text-sm text-gray-500 dark:text-gray-400 mt-2 line-clamp-2">
 46 │           {group.description}
 47 │         </p>
 48 │         
 49 │         <div className="mt-4 flex items-center text-sm text-gray-500 dark:text-gray-400">
 50 │           <BookOpen className="h-4 w-4 mr-1 text-[#FF6B00]" />
 51 │           <span>{group.course}</span>
 52 │         </div>
 53 │         
 54 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
 55 │           <Users className="h-4 w-4 mr-1 text-[#FF6B00]" />
 56 │           <span>{group.members.length} membros</span>
 57 │         </div>
 58 │         
 59 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
 60 │           <Clock className="h-4 w-4 mr-1 text-[#FF6B00]" />
 61 │           <span>Próxima reunião: {group.nextMeeting}</span>
 62 │         </div>
 63 │         
 64 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
 65 │           <MessageSquare className="h-4 w-4 mr-1 text-[#FF6B00]" />
 66 │           <span>Última atividade: {group.lastActivity}</span>
 67 │         </div>
 68 │       </div>
 69 │     </Card>
 70 │   );
 71 │ };
 72 │ 
 73 │ export default GroupCard;
 74 │ 
 75 │ import React from "react";
 76 │ import { motion } from "framer-motion";
 77 │ import { Button } from "@/components/ui/button";
 78 │ import { Badge } from "@/components/ui/badge";
 79 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
 80 │ import { Calendar, Users, MessageCircle, Lock, Globe } from "lucide-react";
    ·                    ──┬──
    ·                      ╰── `Users` redefined here
 81 │ 
 82 │ interface GroupCardProps {
 83 │   group: {
    ╰────

  × the name `GroupCard` is defined multiple times
     ╭─[/home/runner/workspace/src/components/turmas/GroupCard.tsx:19:1]
  19 │   onClick: () => void;
  20 │ }
  21 │ 
  22 │ const GroupCard: React.FC<GroupCardProps> = ({ group, onClick }) => {
     ·       ────┬────
     ·           ╰── previous definition of `GroupCard` here
  23 │   return (
  24 │     <Card 
  25 │       className="overflow-hidden hover:shadow-lg transition-all duration-300 cursor-pointer h-full flex flex-col"
  26 │       onClick={onClick}
  27 │     >
  28 │       {group.coverImage && (
  29 │         <div className="h-32 overflow-hidden">
  30 │           <img 
  31 │             src={group.coverImage} 
  32 │             alt={group.name} 
  33 │             className="w-full h-full object-cover"
  34 │           />
  35 │         </div>
  36 │       )}
  37 │       <div className="p-4 flex-1 flex flex-col">
  38 │         <div className="flex justify-between items-start">
  39 │           <h3 className="text-lg font-bold text-gray-900 dark:text-white line-clamp-2">{group.name}</h3>
  40 │           {group.hasNewMessages && (
  41 │             <Badge className="bg-[#FF6B00] text-white">Novo</Badge>
  42 │           )}
  43 │         </div>
  44 │         
  45 │         <p className="text-sm text-gray-500 dark:text-gray-400 mt-2 line-clamp-2">
  46 │           {group.description}
  47 │         </p>
  48 │         
  49 │         <div className="mt-4 flex items-center text-sm text-gray-500 dark:text-gray-400">
  50 │           <BookOpen className="h-4 w-4 mr-1 text-[#FF6B00]" />
  51 │           <span>{group.course}</span>
  52 │         </div>
  53 │         
  54 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
  55 │           <Users className="h-4 w-4 mr-1 text-[#FF6B00]" />
  56 │           <span>{group.members.length} membros</span>
  57 │         </div>
  58 │         
  59 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
  60 │           <Clock className="h-4 w-4 mr-1 text-[#FF6B00]" />
  61 │           <span>Próxima reunião: {group.nextMeeting}</span>
  62 │         </div>
  63 │         
  64 │         <div className="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
  65 │           <MessageSquare className="h-4 w-4 mr-1 text-[#FF6B00]" />
  66 │           <span>Última atividade: {group.lastActivity}</span>
  67 │         </div>
  68 │       </div>
  69 │     </Card>
  70 │   );
  71 │ };
  72 │ 
  73 │ export default GroupCard;
  74 │ 
  75 │ import React from "react";
  76 │ import { motion } from "framer-motion";
  77 │ import { Button } from "@/components/ui/button";
  78 │ import { Badge } from "@/components/ui/badge";
  79 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
  80 │ import { Calendar, Users, MessageCircle, Lock, Globe } from "lucide-react";
  81 │ 
  82 │ interface GroupCardProps {
  83 │   group: {
  84 │     id: string;
  85 │     nome: string;
  86 │     disciplina: string;
  87 │     descricao: string;
  88 │     membros: number;
  89 │     proximaReuniao?: string;
  90 │     tags: string[];
  91 │     privacidade: "publico" | "restrito" | "privado";
  92 │     icone: React.ReactNode;
  93 │   };
  94 │   onClick: () => void;
  95 │ }
  96 │ 
  97 │ const GroupCard: React.FC<GroupCardProps> = ({ group, onClick }) => {
     ·       ────┬────
     ·           ╰── `GroupCard` redefined here
  98 │   const getPrivacyIcon = () => {
  99 │     switch (group.privacidade) {
 100 │       case "publico":
     ╰────

  × the name `default` is exported multiple times
     ╭─[/home/runner/workspace/src/components/turmas/GroupCard.tsx:70:1]
  70 │   );
  71 │ };
  72 │ 
  73 │ export default GroupCard;
     · ────────────┬────────────
     ·             ╰── previous exported here
  74 │ 
  75 │ import React from "react";
  76 │ import { motion } from "framer-motion";
  77 │ import { Button } from "@/components/ui/button";
  78 │ import { Badge } from "@/components/ui/badge";
  79 │ import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
  80 │ import { Calendar, Users, MessageCircle, Lock, Globe } from "lucide-react";
  81 │ 
  82 │ interface GroupCardProps {
  83 │   group: {
  84 │     id: string;
  85 │     nome: string;
  86 │     disciplina: string;
  87 │     descricao: string;
  88 │     membros: number;
  89 │     proximaReuniao?: string;
  90 │     tags: string[];
  91 │     privacidade: "publico" | "restrito" | "privado";
  92 │     icone: React.ReactNode;
  93 │   };
  94 │   onClick: () => void;
  95 │ }
  96 │ 
  97 │ const GroupCard: React.FC<GroupCardProps> = ({ group, onClick }) => {
  98 │   const getPrivacyIcon = () => {
  99 │     switch (group.privacidade) {
 100 │       case "publico":
 101 │         return <Globe className="h-3.5 w-3.5 text-[#FF6B00]" />;
 102 │       case "restrito":
 103 │         return <Users className="h-3.5 w-3.5 text-[#FF6B00]" />;
 104 │       case "privado":
 105 │         return <Lock className="h-3.5 w-3.5 text-[#FF6B00]" />;
 106 │       default:
 107 │         return <Globe className="h-3.5 w-3.5 text-[#FF6B00]" />;
 108 │     }
 109 │   };
 110 │ 
 111 │   const getPrivacyText = () => {
 112 │     switch (group.privacidade) {
 113 │       case "publico":
 114 │         return "Público";
 115 │       case "restrito":
 116 │         return "Restrito";
 117 │       case "privado":
 118 │         return "Privado";
 119 │       default:
 120 │         return "Público";
 121 │     }
 122 │   };
 123 │ 
 124 │   return (
 125 │     <motion.div
 126 │       initial={{ opacity: 0, y: 20 }}
 127 │       animate={{ opacity: 1, y: 0 }}
 128 │       transition={{ duration: 0.3 }}
 129 │       className="bg-white dark:bg-[#1E293B] rounded-xl overflow-hidden shadow-md hover:shadow-xl transition-all duration-300 border border-[#FF6B00]/10 dark:border-[#FF6B00]/20 transform hover:translate-y-[-3px] cursor-pointer h-full"
 130 │       onClick={onClick}
 131 │     >
 132 │       <div className="p-4 flex flex-col h-full">
 133 │         <div className="flex items-center gap-3 mb-3">
 134 │           <div className="w-12 h-12 rounded-full bg-[#FF6B00]/10 dark:bg-[#FF6B00]/20 flex items-center justify-center">
 135 │             {group.icone}
 136 │           </div>
 137 │           <div>
 138 │             <h3 className="text-lg font-bold text-gray-900 dark:text-white font-montserrat">
 139 │               {group.nome}
 140 │             </h3>
 141 │             <div className="flex items-center gap-2">
 142 │               <Badge className="bg-[#FF6B00]/10 text-[#FF6B00] dark:bg-[#FF6B00]/20 dark:text-[#FF8C40]">
 143 │                 {group.disciplina}
 144 │               </Badge>
 145 │               <div className="flex items-center gap-1 text-xs text-gray-500 dark:text-gray-400">
 146 │                 {getPrivacyIcon()}
 147 │                 <span>{getPrivacyText()}</span>
 148 │               </div>
 149 │             </div>
 150 │           </div>
 151 │         </div>
 152 │ 
 153 │         <p className="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2 flex-grow">
 154 │           {group.descricao}
 155 │         </p>
 156 │ 
 157 │         <div className="flex flex-wrap gap-2 mb-3">
 158 │           {group.tags.map((tag, index) => (
 159 │             <Badge
 160 │               key={index}
 161 │               variant="outline"
 162 │               className="text-xs border-[#FF6B00]/30 text-[#FF6B00] hover:bg-[#FF6B00]/10"
 163 │             >
 164 │               {tag}
 165 │             </Badge>
 166 │           ))}
 167 │         </div>
 168 │ 
 169 │         <div className="flex items-center justify-between mt-auto pt-3 border-t border-gray-100 dark:border-gray-800">
 170 │           <div className="flex items-center gap-1 text-xs text-gray-500 dark:text-gray-400">
 171 │             <Users className="h-3.5 w-3.5 text-[#FF6B00]" />
 172 │             <span>{group.membros} membros</span>
 173 │           </div>
 174 │ 
 175 │           {group.proximaReuniao && (
 176 │             <div className="flex items-center gap-1 text-xs text-gray-500 dark:text-gray-400">
 177 │               <Calendar className="h-3.5 w-3.5 text-[#FF6B00]" />
 178 │               <span>{group.proximaReuniao}</span>
 179 │             </div>
 180 │           )}
 181 │         </div>
 182 │ 
 183 │         <div className="flex gap-2 mt-4">
 184 │           <Button
 185 │             className="flex-1 bg-gradient-to-r from-[#FF6B00] to-[#FF8C40] hover:from-[#FF8C40] hover:to-[#FF6B00] text-white font-montserrat text-xs"
 186 │             onClick={(e) => {
 187 │               e.stopPropagation();
 188 │               onClick();
 189 │             }}
 190 │           >
 191 │             Acessar Grupo
 192 │           </Button>
 193 │ 
 194 │           <Button
 195 │             variant="outline"
 196 │             className="border-[#FF6B00]/30 text-[#FF6B00] hover:bg-[#FF6B00]/10 font-montserrat text-xs"
 197 │             onClick={(e) => {
 198 │               e.stopPropagation();
 199 │               // Handle chat action
 200 │             }}
 201 │           >
 202 │             <MessageCircle className="h-4 w-4 mr-1" /> Chat
 203 │           </Button>
 204 │         </div>
 205 │       </div>
 206 │     </motion.div>
 207 │   );
 208 │ };
 209 │ 
 210 │ export default GroupCard;
     · ────────────┬────────────
     ·             ╰── exported more than once
     ╰────

Error: 
  ☞ Exported identifiers must be unique
/home/runner/workspace/src/components/turmas/GroupCard.tsx:1:1
1  |  
2  |  import React from "react";
   |  ^
3  |  import { Card } from "@/components/ui/card";
4  |  import { Badge } from "@/components/ui/badge";