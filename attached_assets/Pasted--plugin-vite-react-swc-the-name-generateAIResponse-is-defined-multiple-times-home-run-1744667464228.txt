[plugin:vite:react-swc] Ã— the name `generateAIResponse` is defined multiple times
     â•­â”€[/home/runner/workspace/src/services/aiChatService.ts:695:1]
 695 â”‚ }
 696 â”‚ 
 697 â”‚ // FunÃ§Ã£o principal para gerar resposta, tentando primeiro xAI e depois Gemini como fallback
 698 â”‚ export async function generateAIResponse(
     Â·                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€
     Â·                                â•°â”€â”€ previous definition of `generateAIResponse` here
 699 â”‚   message: string,
 700 â”‚   sessionId: string,
 701 â”‚   options?: {
 702 â”‚     intelligenceLevel?: 'basic' | 'normal' | 'advanced',
 703 â”‚     languageStyle?: 'casual' | 'formal' | 'technical'
 704 â”‚   }
 705 â”‚ ): Promise<string> {
 706 â”‚   try {
 707 â”‚     return await generateXAIResponse(message, sessionId, options);
 708 â”‚   } catch (error) {
 709 â”‚     console.error('Erro com xAI, tentando Gemini:', error);
 710 â”‚     return generateGeminiResponse(message, sessionId, options);
 711 â”‚   }
 712 â”‚ }
 713 â”‚ 
 714 â”‚ // Limpar histÃ³rico da conversa
 715 â”‚ export function clearConversationHistory(sessionId: string): void {
 716 â”‚   if (conversationHistory[sessionId]) {
 717 â”‚     // MantÃ©m apenas a mensagem do sistema
 718 â”‚     const systemMessage = conversationHistory[sessionId][0];
 719 â”‚     conversationHistory[sessionId] = [systemMessage];
 720 â”‚ 
 721 â”‚     // Limpar do localStorage tambÃ©m
 722 â”‚     try {
 723 â”‚       localStorage.removeItem(`conversationHistory_${sessionId}`);
 724 â”‚     } catch (error) {
 725 â”‚       console.error("Erro ao limpar histÃ³rico do localStorage:", error);
 726 â”‚     }
 727 â”‚   }
 728 â”‚ }
 729 â”‚ 
 730 â”‚ // Obter histÃ³rico da conversa
 731 â”‚ export function getConversationHistory(sessionId: string): ChatMessage[] {
 732 â”‚   // Primeiro verifica se jÃ¡ estÃ¡ carregado na memÃ³ria
 733 â”‚   if (conversationHistory[sessionId]) {
 734 â”‚     return conversationHistory[sessionId];
 735 â”‚   }
 736 â”‚ 
 737 â”‚   // Caso contrÃ¡rio, tenta recuperar do localStorage
 738 â”‚   try {
 739 â”‚     const savedHistory = localStorage.getItem(`conversationHistory_${sessionId}`);
 740 â”‚     if (savedHistory) {
 741 â”‚       const parsedHistory = JSON.parse(savedHistory) as ChatMessage[];
 742 â”‚       conversationHistory[sessionId] = parsedHistory;
 743 â”‚       return parsedHistory;
 744 â”‚     }
 745 â”‚   } catch (error) {
 746 â”‚     console.error("Erro ao recuperar histÃ³rico do localStorage:", error);
 747 â”‚   }
 748 â”‚ 
 749 â”‚   return [];
 750 â”‚ }
 751 â”‚ 
 752 â”‚ // FunÃ§Ã£o para corrigir links da plataforma
 753 â”‚ function fixPlatformLinks(text: string): string {
 754 â”‚   const platformLinks = {
 755 â”‚     'Portal': 'https://pontoschool.com/portal',
 756 â”‚     'Portal de Estudos': 'https://pontoschool.com/portal',
 757 â”‚     'Agenda': 'https://pontoschool.com/agenda',
 758 â”‚     'Turmas': 'https://pontoschool.com/turmas',
 759 â”‚     'Grupos de Estudo': 'https://pontoschool.com/turmas?view=estudos',
 760 â”‚     'Biblioteca': 'https://pontoschool.com/biblioteca',
 761 â”‚     'Perfil': 'https://pontoschool.com/profile',
 762 â”‚     'PÃ¡gina de Perfil': 'https://pontoschool.com/profile',
 763 â”‚     'ConfiguraÃ§Ãµes': 'https://pontoschool.com/configuracoes',
 764 â”‚     'PÃ¡gina de ConfiguraÃ§Ãµes': 'https://pontoschool.com/configuracoes',
 765 â”‚     'Dashboard': 'https://pontoschool.com/dashboard',
 766 â”‚     'Epictus IA': 'https://pontoschool.com/epictus-ia',
 767 â”‚     'Mentor IA': 'https://pontoschool.com/mentor-ia',
 768 â”‚     'Planos de Estudo': 'https://pontoschool.com/planos-estudo',
 769 â”‚     'Conquistas': 'https://pontoschool.com/conquistas',
 770 â”‚     'Carteira': 'https://pontoschool.com/carteira',
 771 â”‚     'Mercado': 'https://pontoschool.com/mercado',
 772 â”‚     'OrganizaÃ§Ã£o': 'https://pontoschool.com/organizacao',
 773 â”‚     'Comunidades': 'https://pontoschool.com/comunidades',
 774 â”‚     'Chat IA': 'https://pontoschool.com/chat-ia',
 775 â”‚     'School IA': 'https://pontoschool.com/school-ia',
 776 â”‚     'Novidades': 'https://pontoschool.com/novidades',
 777 â”‚     'Lembretes': 'https://pontoschool.com/lembretes',
 778 â”‚     'Pedidos de Ajuda': 'https://pontoschool.com/pedidos-ajuda',
 779 â”‚     'ConexÃ£o Expert': 'https://pontoschool.com/pedidos-ajuda',
 780 â”‚     'Estudos': 'https://pontoschool.com/estudos',
 781 â”‚     'Login': 'https://pontoschool.com/login',
 782 â”‚     'Cadastro': 'https://pontoschool.com/register',
 783 â”‚     'PÃ¡gina de Ajuda': 'https://pontoschool.com/ajuda',
 784 â”‚     'Ajuda': 'https://pontoschool.com/ajuda'
 785 â”‚   };
 786 â”‚ 
 787 â”‚   let newText = text;
 788 â”‚   const alreadyReplaced = new Set<string>();
 789 â”‚   const linkRegex = /\[(.+?)\]\((.+?)\)/g;
 790 â”‚ 
 791 â”‚   // Primeiro, coletar todos os links jÃ¡ presentes no texto e verificar se estÃ£o formatados corretamente
 792 â”‚   let match;
 793 â”‚ 
 794 â”‚   // Armazenar os links que precisam ser corrigidos
 795 â”‚   const linksToFix = [];
 796 â”‚ 
 797 â”‚   while ((match = linkRegex.exec(newText)) !== null) {
 798 â”‚     const linkText = match[1];
 799 â”‚     const url = match[2];
 800 â”‚     alreadyReplaced.add(url.toLowerCase());
 801 â”‚ 
 802 â”‚     // TambÃ©m adicionar o texto do link para evitar duplicaÃ§Ã£o com diferentes textos
 803 â”‚     for (const key in platformLinks) {
 804 â”‚       if (linkText.toLowerCase() === key.toLowerCase()) {
 805 â”‚         alreadyReplaced.add(platformLinks[key].toLowerCase());
 806 â”‚       }
 807 â”‚     }
 808 â”‚   }
 809 â”‚ 
 810 â”‚   // Substituir expressÃµes mais especÃ­ficas, evitando duplicidades
 811 â”‚   for (const key in platformLinks) {
 812 â”‚     const url = platformLinks[key];
 813 â”‚     // Pular se este URL jÃ¡ foi usado
 814 â”‚     if (alreadyReplaced.has(url.toLowerCase())) continue;
 815 â”‚ 
 816 â”‚     const regex = new RegExp(`\\b(${key})\\b(?![^\\[]*\\])`, 'gi'); // Busca palavras inteiras que nÃ£o estÃ£o dentro de colchetes
 817 â”‚     if (regex.test(newText)) {
 818 â”‚       newText = newText.replace(regex, `[${key}](${url})`);
 819 â”‚       alreadyReplaced.add(url.toLowerCase());
 820 â”‚     }
 821 â”‚   }
 822 â”‚ 
 823 â”‚   // Adicionar correÃ§Ã£o para URLs que podem ter sido escritas incorretamente
 824 â”‚   newText = newText.replace(/\(https:\/\/pontoschool\.com(\s+)([^)]+)\)/g, '(https://pontoschool.com/$2)');
 825 â”‚ 
 826 â”‚   // Corrigir URLs que podem ter dupla barra
 827 â”‚   newText = newText.replace(/\(https:\/\/pontoschool\.com\/\/([^)]+)\)/g, '(https://pontoschool.com/$1)');
 828 â”‚ 
 829 â”‚   // Garantir que os links estejam formatados corretamente com os parÃªnteses fora da URL clicÃ¡vel
 830 â”‚   // Primeiro, encontrar todos os links no formato [texto](url)
 831 â”‚   const markdownLinkRegex = /\[([^\]]+)\]\(([^)]+)\)/g;
 832 â”‚   newText = newText.replace(markdownLinkRegex, (match, text, url) => {
 833 â”‚     // Certificar-se de que apenas a URL estÃ¡ dentro dos parÃªnteses
 834 â”‚     const cleanUrl = url.split(' ')[0]; // Pegar apenas a URL sem atributos adicionais
 835 â”‚     return `[${text}](${cleanUrl})`;
 836 â”‚   });
 837 â”‚ 
 838 â”‚   return newText;
 839 â”‚ }
 840 â”‚ 
 841 â”‚ 
 842 â”‚ // FunÃ§Ã£o para salvar o histÃ³rico da conversa no localStorage
 843 â”‚ function saveConversationHistory(sessionId: string, history: ChatMessage[]): void {
 844 â”‚   try {
 845 â”‚     localStorage.setItem(`conversationHistory_${sessionId}`, JSON.stringify(history));
 846 â”‚   } catch (error) {
 847 â”‚     console.error("Erro ao salvar o histÃ³rico da conversa:", error);
 848 â”‚   }
 849 â”‚ }
 850 â”‚ 
 851 â”‚ // SimulaÃ§Ã£o de resposta da IA
 852 â”‚ const getResponseForMessage = (message: string): string => {
 853 â”‚   // AnÃ¡lise bÃ¡sica da mensagem para gerar uma resposta contextual
 854 â”‚   const formattedMessage = message.toLowerCase();
 855 â”‚ 
 856 â”‚   if (formattedMessage.includes('olÃ¡') || formattedMessage.includes('oi') || formattedMessage.includes('bom dia') || formattedMessage.includes('boa tarde') || formattedMessage.includes('boa noite')) {
 857 â”‚     return `**OlÃ¡, ${userInfo?.username || 'amigo'}!** ðŸ˜Š\n\nComo posso ajudar vocÃª hoje?`;
 858 â”‚   } else if (formattedMessage.includes('funÃ§Ã£o') || formattedMessage.includes('o que vocÃª faz') || formattedMessage.includes('para que serve')) {
 859 â”‚     return `**Eu sou o Assistente de Suporte da Ponto.School**, aqui para te ajudar em tudo que precisar na plataforma! ðŸš€\n\nPosso ajudar com:\n\nâ€¢ **NavegaÃ§Ã£o:** Encontrar qualquer recurso na plataforma.\nâ€¢ **Tutoriais:** Explicar o funcionamento de qualquer ferramenta.\nâ€¢ **DÃºvidas:** Responder qualquer questÃ£o sobre a plataforma ou o conteÃºdo.\n\nComo posso ajudar vocÃª agora?`;
 860 â”‚   } else if (formattedMessage.includes('portal') || formattedMessage.includes('material') || formattedMessage.includes('acessar conteÃºdo')) {
 861 â”‚     return `VocÃª pode acessar o **Portal** com todos os materiais em https://pontoschool.com/portal\n\nLÃ¡ vocÃª encontrarÃ¡ todos os seus cursos, materiais e recursos de estudo organizados por disciplina.\n\n_Basta clicar no link acima para ir direto para o Portal!_ ðŸ“š`;
 862 â”‚   } else {
 863 â”‚     return "Desculpe, nÃ£o entendi sua pergunta. Pode reformulÃ¡-la?";
 864 â”‚   }
 865 â”‚ };
 866 â”‚ 
 867 â”‚ // Global variables to control typing state
 868 â”‚ let isTypingPaused = false;
 869 â”‚ let isTypingCancelled = false;
 870 â”‚ 
 871 â”‚ // Set typing pause state
 872 â”‚ export const setPauseTyping = (paused: boolean): void => {
 873 â”‚   isTypingPaused = paused;
 874 â”‚ };
 875 â”‚ 
 876 â”‚ // Set typing cancelled state
 877 â”‚ export const setCancelTyping = (cancelled: boolean): void => {
 878 â”‚   isTypingCancelled = cancelled;
 879 â”‚ };
 880 â”‚ 
 881 â”‚ // Generate AI response
 882 â”‚ export const generateAIResponse = async (
     Â·              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€
     Â·                       â•°â”€â”€ `generateAIResponse` redefined here
 883 â”‚   prompt: string,
 884 â”‚   sessionId: string = 'default_session',
 885 â”‚   options?: {
     â•°â”€â”€â”€â”€
/home/runner/workspace/src/services/aiChatService.ts:695:1