Em nossa plataforma, enfrentamos um problema ao tentar corrigir a estrutura do banco de dados para o Modal da Apostila Inteligente. O comando que deveria executar o script de corre√ß√£o n√£o est√° funcionando:

texto

Copiar
echo "Iniciando corre√ß√£o da rela√ß√£o Apostila..." && node scripts/fix-apostila-relation.js
Esse comando √© respons√°vel por exibir uma mensagem no terminal e executar o script fix-apostila-relation.js , que corrige a estrutura do banco de dados no Supabase (criando as tabelas apostila_pastas e apostila_anotacoes e configurando rela√ß√µes). No entanto, o comando n√£o est√° sendo executado corretamente, possivelmente devido a problemas no ambiente, no comando em si, ou no script. O objetivo deste prompt √© corrigir o comando, garantir que o script fix-apostila-relation.js exista e funcione corretamente, e validar que a corre√ß√£o resolva o problema no Modal da Apostila Inteligente.

üß© Detalhamento do Ambiente T√©cnico

Estrutura do Banco de Dados (Supabase):

 As tabelas esperadas s√£o:

Tabela apostila_pastas :
identifica√ß√£o (UUID)
user_id (UUID do usu√°rio autenticado)
nome (string)
descri√ß√£o (string, opcional)
data_criacao (carimbo de data/hora)
Tabela apostila_anotacoes :
identifica√ß√£o (UUID)
user_id (UUID do usu√°rio autenticado)
pasta_id (UUID, null se n√£o estiver associado a uma pasta)
t√≠tulo (string)
conteudo (texto)
modelo_anotacao (string)
tags (matriz de strings)
data_criacao (carimbo de data/hora)
data_exportacao (carimbo de data/hora)
origem (string: "caderno" ou "criado_na_apostila")
Configura√ß√µes do Supabase:

O Supabase est√° configurado com Row-Level Security (RLS) ativado.
O Supabase Realtime est√° sendo usado para atualizar o Modal da Apostila automaticamente.
Comando Problem√°tico:

texto

Copiar
echo "Iniciando corre√ß√£o da rela√ß√£o Apostila..." && node scripts/fix-apostila-relation.js
Problemas Poss√≠veis:

O Node.js pode n√£o estar instalado ou configurado corretamente.
O script fix-apostila-relation.js pode n√£o existir, ou pode ter erros de sintaxe ou depend√™ncias ausentes.
O comando pode estar sendo executado em um terminal que n√£o suporta a sintaxe (ex.: PowerShell).
O diret√≥rio scripts/ ou o arquivo fix-apostila-relation.js pode estar no caminho errado.
üîç Causas Identificadas do Erro

Ambiente de Execu√ß√£o Incorreto:
O Node.js pode n√£o estar instalado ou no PATH.
O terminal pode n√£o suportar a sintaxe && (ex.: PowerShell).
Script fix-apostila-relation.js Ausente ou com Problemas:
O script n√£o pode existir no diret√≥rio scripts/ .
O script pode ter erros de sintaxe, depend√™ncias ausentes, ou vari√°veis ‚Äã‚Äãde ambiente n√£o definidas.
Caminho ou permiss√µes incorretas:
O diret√≥rio scripts/ pode estar ausente ou no caminho errado.
Pode haver problemas de permiss√£o para executar o script.
‚úÖ Objetivo e Resultado Esperado

Garanta que o ambiente de execu√ß√£o (Node.js e terminal) esteja configurado corretamente.
Corrigir o comando para operar em diferentes terminais (Bash, CMD, PowerShell).
Crie ou corrija o script fix-apostila-relation.js para criar as tabelas apostila_pastas e apostila_anotacoes com as rela√ß√µes e pol√≠ticas de RLS corretas.
Validar que, ap√≥s a execu√ß√£o do roteiro, o Modal da Apostila Inteligente funciona corretamente, exibindo as anota√ß√µes sem erros.
üõ†Ô∏è Instru√ß√µes para Corre√ß√£o

1. Configurar o Ambiente de Execu√ß√£o
-se de que o Node.js est√° instalado e que o comando est√° sendo executado no terminal correto.

Passo 1: Verifique se o Node.js est√° instalado:
festan√ßa

Copiar
node --version
Se o Node.js n√£o estiver instalado, instale-o:
Baixe e instale em nodejs.org .
Ou use um gerenciador como nvm :
festan√ßa

Copiar
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
nvm install node
Passo 2: Escolha o terminal protegido:
No Windows, use Git Bash , WSL ou CMD (evite o PowerShell).
No Mac/Linux, use o terminal padr√£o (Bash, Zsh).
Passo 3: Certifique-se de estar no diret√≥rio raiz do projeto:
festan√ßa

Copiar
cd /caminho/para/o/projeto
Valida√ß√£o:

Execute node --version e confirme que a vers√£o do Node.js est√° exibida (ex.: v18.17.0 ).
Confirme que voc√™ est√° no diret√≥rio raiz do projeto (onde o arquivo package.json est√° localizado).
2. Testar o Comando em Partes
Execute os dois comandos separadamente para identificar onde est√° o erro.

Passo 1: Teste o eco :
festan√ßa

Copiar
echo "Iniciando corre√ß√£o da rela√ß√£o Apostila..."
Voc√™ deve ver a mensagem "Iniciando corre√ß√£o da rela√ß√£o Apostila..." no terminal.
Passo 2: Teste o n√≥ :
festan√ßa

Copiar
node scripts/fix-apostila-relation.js
Se esse comando falhar, o problema est√° no script ou no caminho.
Valida√ß√£o:

Confirme que o echo exibe a mensagem corretamente.
Anote qualquer erro ao executar o comando node .
3. Crie ou corrija o script fix-apostila-relation.js
-se de que o script existe e est√° funcionando corretamente.

Passo 1: Verifique a exist√™ncia do script:
Navegue at√© o diret√≥rio scripts/ no projeto:
festan√ßa

Copiar
ls scripts/
Confirme se o arquivo fix-apostila-relation.js est√° presente.
Passo 2: Crie o script se ele n√£o existir:
Crie o diret√≥rio scripts/ (se necess√°rio):
festan√ßa

Copiar
mkdir scripts
Crie o arquivo scripts/fix-apostila-relation.js com o seguinte conte√∫do:
JavaScript

Copiar
const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

// Inicializar o cliente do Supabase
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_KEY;
if (!supabaseUrl || !supabaseKey) {
  console.error('Erro: Vari√°veis de ambiente SUPABASE_URL e SUPABASE_KEY devem ser definidas no arquivo .env');
  process.exit(1);
}
const supabase = createClient(supabaseUrl, supabaseKey);

async function fixApostilaRelation() {
  console.log('Iniciando corre√ß√£o da rela√ß√£o Apostila...');

  try {
    // 1. Criar tabela apostila_pastas se n√£o existir
    const { error: pastasError } = await supabase.rpc('execute_sql', {
      sql_statement: `
        CREATE TABLE IF NOT EXISTS public.apostila_pastas (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          user_id UUID NOT NULL,
          nome TEXT NOT NULL,
          descricao TEXT,
          data_criacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
          CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE
        );

        ALTER TABLE apostila_pastas ENABLE ROW LEVEL SECURITY;

        CREATE POLICY "Usu√°rios s√≥ podem ver suas pastas" ON apostila_pastas
        FOR SELECT
        USING (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem inserir suas pastas" ON apostila_pastas
        FOR INSERT
        WITH CHECK (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem atualizar suas pastas" ON apostila_pastas
        FOR UPDATE
        USING (auth.uid() = user_id);
      `,
    });

    if (pastasError) {
      throw new Error(`Erro ao criar tabela apostila_pastas: ${pastasError.message}`);
    }

    // 2. Criar tabela apostila_anotacoes se n√£o existir
    const { error: anotacoesError } = await supabase.rpc('execute_sql', {
      sql_statement: `
        CREATE TABLE IF NOT EXISTS public.apostila_anotacoes (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          user_id UUID NOT NULL,
          pasta_id UUID,
          titulo TEXT NOT NULL,
          conteudo TEXT NOT NULL,
          modelo_anotacao TEXT,
          tags TEXT[],
          data_criacao TIMESTAMP WITH TIME ZONE NOT NULL,
          data_exportacao TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
          origem TEXT NOT NULL,
          CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE,
          CONSTRAINT fk_pasta_id FOREIGN KEY (pasta_id) REFERENCES apostila_pastas(id) ON DELETE SET NULL
        );

        ALTER TABLE apostila_anotacoes ENABLE ROW LEVEL SECURITY;

        CREATE POLICY "Usu√°rios s√≥ podem ver suas anota√ß√µes" ON apostila_anotacoes
        FOR SELECT
        USING (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem inserir suas anota√ß√µes" ON apostila_anotacoes
        FOR INSERT
        WITH CHECK (auth.uid() = user_id);

        CREATE POLICY "Usu√°rios podem atualizar suas anota√ß√µes" ON apostila_anotacoes
        FOR UPDATE
        USING (auth.uid() = user_id);
      `,
    });

    if (anotacoesError) {
      throw new Error(`Erro ao criar tabela apostila_anotacoes: ${anotacoesError.message}`);
    }

    console.log('Rela√ß√£o Apostila corrigida com sucesso!');
  } catch (error) {
    console.error('Erro ao corrigir rela√ß√£o Apostila:', error.message);
    process.exit(1);
  }
}

// Executar a fun√ß√£o
fixApostilaRelation();