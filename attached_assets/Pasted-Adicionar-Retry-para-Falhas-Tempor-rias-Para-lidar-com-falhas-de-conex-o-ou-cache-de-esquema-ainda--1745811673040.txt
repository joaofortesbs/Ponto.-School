Adicionar Retry para Falhas Temporárias:
Para lidar com falhas de conexão ou cache de esquema ainda não atualizado, implemente um mecanismo de retry:
JavaScript

Copiar
async function carregarAnotacoesApostilaComRetry(retries = 3, delay = 1000) {
  for (let i = 0; i < retries; i++) {
    try {
      const anotacoes = await carregarAnotacoesApostila();
      return anotacoes;
    } catch (err) {
      if (i === retries - 1) {
        console.error('Falha após todas as tentativas:', err.message);
        showError('Não foi possível carregar as anotações. Verifique sua conexão e tente novamente.');
        return [];
      }
      await new Promise(resolve => setTimeout(resolve, delay));
    }
  }
}
Validação:

Teste a função carregarAnotacoesApostila e confirme que as anotações são exibidas no Modal da Apostila, incluindo o nome da pasta (se pasta_id não for null ).
Verifique se a mensagem "Nenhuma anotação encontrada" aparece corretamente quando não há anotações.
Teste com uma anotação sem pasta ( pasta_id: null ) e confirme que a consulta não falha.
4. Revisar e ajustar o Supabase Realtime
O Supabase Realtime está sendo usado para atualizar o Modal da Apostila automaticamente. Atualize o ouvinte para garantir que ele também lida com a relação com apostila_pastas .

Listener Atualizado:
Ajuste a função configurarRealtimeApostila para incluir a relação com apostila_pastas :
JavaScript

Copiar
function configurarRealtimeApostila() {
  const channel = supabase
    .channel('apostila_anotacoes_changes')
    .on(
      'postgres_changes',
      {
        event: 'INSERT',
        schema: 'public',
        table: 'apostila_anotacoes',
        filter: `user_id=eq.${auth.currentUser.uid}`,
      },
      async (payload) => {
        console.log('Nova anotação adicionada:', payload.new);

        // Buscar detalhes da pasta associada, se houver
        let pasta = null;
        if (payload.new.pasta_id) {
          const { data, error } = await supabase
            .from('apostila_pastas')
            .select('id, nome')
            .eq('id', payload.new.pasta_id)
            .eq('user_id', auth.currentUser.uid)
            .single();

          if (error) {
            console.error('Erro ao buscar pasta:', error.message);
          } else {
            pasta = data;
          }
        }

        // Adicionar a nova anotação ao estado do Modal
        const novaAnotacao = { ...payload.new, apostila_pastas: pasta };
        updateApostilaModalWithNewAnotacao(novaAnotacao);

        // Notificar o usuário
        showNotification(`Nova anotação "${novaAnotacao.titulo}" adicionada!`, { type: 'success' });
      }
    )
    .subscribe();

  // Limpar o canal ao fechar o Modal
  return () => {
    supabase.removeChannel(channel);
  };
}
Validação:

Exporte uma anotação do Caderno e confirme que o Modal da Apostila é atualizado automaticamente, incluindo o nome da pasta (se aplicável).
Teste com uma anotação sem pasta ( pasta_id: null ) e confirme que o listener não falha.