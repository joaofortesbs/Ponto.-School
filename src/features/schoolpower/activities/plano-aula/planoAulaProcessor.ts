
import { PlanoAulaFields, transformPlanoAulaData, planoAulaFieldMapping } from './fieldMapping';

export interface PlanoAulaGenerationData {
  tema: string;
  anoSerie: string;
  componenteCurricular: string;
  contexto?: string;
  restricoes?: string;
}

export class PlanoAulaProcessor {
  static processCustomFields(customFields: Record<string, string>): PlanoAulaFields {
    console.log('üéØ [PlanoAulaProcessor] Processando campos customizados:', customFields);
    
    const processedData = transformPlanoAulaData(customFields);
    
    console.log('‚úÖ [PlanoAulaProcessor] Dados processados:', processedData);
    
    return processedData;
  }

  static generateEnhancedFields(baseData: PlanoAulaGenerationData): Record<string, string> {
    console.log('üîß [PlanoAulaProcessor] Gerando campos aprimorados para:', baseData);
    
    const cargaHoraria = this.inferCargaHoraria(baseData.tema);
    const objetivoGeral = this.generateObjective(baseData.tema, baseData.anoSerie);
    const materiaisRecursos = this.suggestMaterials(baseData.tema, baseData.componenteCurricular);
    const habilidadesBNCC = this.suggestBNCCHabilities(baseData.componenteCurricular, baseData.anoSerie);
    const tipoAula = this.suggestClassType(baseData.tema, baseData.componenteCurricular);
    const perfilTurma = this.inferClassProfile(baseData.anoSerie);
    
    const enhancedFields: Record<string, string> = {
      'Tema ou T√≥pico Central': baseData.tema,
      'Ano/S√©rie Escolar': baseData.anoSerie,
      'Componente Curricular': baseData.componenteCurricular,
      'Carga Hor√°ria': cargaHoraria,
      'Habilidades BNCC': habilidadesBNCC,
      'Objetivo Geral': objetivoGeral,
      'Materiais/Recursos': materiaisRecursos,
      'Perfil da Turma': perfilTurma,
      'Tipo de Aula': tipoAula,
      'Observa√ß√µes do Professor': baseData.restricoes || 'Considerar o ritmo individual dos alunos e adaptar conforme necess√°rio'
    };

    console.log('‚úÖ [PlanoAulaProcessor] Campos gerados:', enhancedFields);
    
    return enhancedFields;
  }

  private static inferCargaHoraria(tema: string): string {
    if (tema.toLowerCase().includes('introdu√ß√£o') || tema.toLowerCase().includes('conceito b√°sico')) {
      return '1 aula de 50 minutos';
    } else if (tema.toLowerCase().includes('pr√°tica') || tema.toLowerCase().includes('exerc√≠cio') || tema.toLowerCase().includes('laborat√≥rio')) {
      return '2 aulas de 45 minutos';
    } else if (tema.toLowerCase().includes('projeto') || tema.toLowerCase().includes('pesquisa')) {
      return '3 aulas de 50 minutos';
    }
    return '1 aula de 50 minutos';
  }

  private static suggestBNCCHabilities(disciplina: string, anoSerie: string): string {
    const disciplinaLower = disciplina.toLowerCase();
    const serie = anoSerie.toLowerCase();
    
    if (disciplinaLower.includes('matem√°tica')) {
      if (serie.includes('9¬∫') || serie.includes('nono')) {
        return 'EF09MA04, EF09MA05, EF09MA06 - Resolver e elaborar problemas com n√∫meros racionais positivos na representa√ß√£o decimal';
      } else if (serie.includes('8¬∫') || serie.includes('oitavo')) {
        return 'EF08MA04, EF08MA05, EF08MA06 - Resolver e elaborar problemas, envolvendo c√°lculo de porcentagens';
      } else if (serie.includes('7¬∫') || serie.includes('s√©timo')) {
        return 'EF07MA04, EF07MA05, EF07MA06 - Resolver e elaborar problemas que envolvam opera√ß√µes com n√∫meros inteiros';
      }
      return 'A definir conforme s√©rie espec√≠fica - Compet√™ncias matem√°ticas da BNCC';
    } else if (disciplinaLower.includes('portugu√™s') || disciplinaLower.includes('l√≠ngua')) {
      if (serie.includes('9¬∫') || serie.includes('nono')) {
        return 'EF69LP01, EF69LP02, EF69LP03 - Diferenciar liberdade de express√£o de discursos de √≥dio';
      } else if (serie.includes('8¬∫') || serie.includes('oitavo')) {
        return 'EF89LP01, EF89LP02, EF89LP03 - Analisar os interesses que movem o campo jornal√≠stico';
      }
      return 'EF69LP01, EF69LP02, EF69LP03 - Compet√™ncias de linguagem da BNCC';
    } else if (disciplinaLower.includes('ci√™ncias')) {
      if (serie.includes('9¬∫') || serie.includes('nono')) {
        return 'EF09CI01, EF09CI02, EF09CI03 - Classificar as radia√ß√µes eletromagn√©ticas por suas frequ√™ncias';
      } else if (serie.includes('8¬∫') || serie.includes('oitavo')) {
        return 'EF08CI01, EF08CI02, EF08CI03 - Identificar e classificar diferentes fontes e tipos de energia';
      }
      return 'EF07CI01, EF07CI02, EF07CI03 - Compet√™ncias cient√≠ficas da BNCC';
    } else if (disciplinaLower.includes('hist√≥ria')) {
      return 'EF09HI01, EF09HI02, EF09HI03 - Descrever e contextualizar os principais aspectos sociais, culturais, econ√¥micos e pol√≠ticos';
    } else if (disciplinaLower.includes('geografia')) {
      return 'EF09GE01, EF09GE02, EF09GE03 - Analisar criticamente de que forma a hegemonia europeia foi exercida em v√°rias regi√µes do planeta';
    }
    
    return 'A definir conforme BNCC espec√≠fica da disciplina e s√©rie';
  }

  private static generateObjective(tema: string, anoSerie: string): string {
    return `Proporcionar aos alunos do ${anoSerie} a compreens√£o e aplica√ß√£o dos conceitos relacionados a ${tema}, desenvolvendo habilidades cognitivas, procedimentais e atitudinais adequadas ao n√≠vel educacional, promovendo o pensamento cr√≠tico e a capacidade de an√°lise.`;
  }

  private static suggestMaterials(tema: string, disciplina: string): string {
    const basicMaterials = ['Quadro branco', 'Projetor multim√≠dia', 'Livro did√°tico'];
    
    if (disciplina.toLowerCase().includes('matem√°tica')) {
      basicMaterials.push('Calculadora cient√≠fica', 'R√©gua e compasso', 'Material dourado', 'Softwares matem√°ticos');
    } else if (disciplina.toLowerCase().includes('ci√™ncias') || disciplina.toLowerCase().includes('f√≠sica') || disciplina.toLowerCase().includes('qu√≠mica')) {
      basicMaterials.push('Kit de laborat√≥rio', 'Microsc√≥pio', 'Materiais para experimentos', 'Modelos did√°ticos');
    } else if (disciplina.toLowerCase().includes('portugu√™s') || disciplina.toLowerCase().includes('literatura')) {
      basicMaterials.push('Textos diversos', 'Dicion√°rio', 'Gram√°tica', 'Obras liter√°rias');
    } else if (disciplina.toLowerCase().includes('hist√≥ria')) {
      basicMaterials.push('Atlas hist√≥rico', 'Documentos hist√≥ricos', 'Timeline', 'Mapas');
    } else if (disciplina.toLowerCase().includes('geografia')) {
      basicMaterials.push('Atlas geogr√°fico', 'Mapas', 'Globo terrestre', 'Imagens de sat√©lite');
    }
    
    return basicMaterials.join(', ');
  }

  private static suggestClassType(tema: string, disciplina: string): string {
    if (tema.toLowerCase().includes('pr√°tica') || tema.toLowerCase().includes('experimento') || tema.toLowerCase().includes('laborat√≥rio')) {
      return 'Aula pr√°tica experimental';
    } else if (tema.toLowerCase().includes('an√°lise') || tema.toLowerCase().includes('discuss√£o') || tema.toLowerCase().includes('debate')) {
      return 'Aula dialogada e participativa';
    } else if (disciplina.toLowerCase().includes('matem√°tica')) {
      return 'Aula expositiva com resolu√ß√£o de exerc√≠cios';
    } else if (disciplina.toLowerCase().includes('educa√ß√£o f√≠sica')) {
      return 'Aula pr√°tica esportiva';
    } else if (disciplina.toLowerCase().includes('arte') || disciplina.toLowerCase().includes('m√∫sica')) {
      return 'Aula pr√°tica art√≠stica';
    }
    
    return 'Aula expositiva dialogada com atividades pr√°ticas';
  }

  private static inferClassProfile(anoSerie: string): string {
    const serie = anoSerie.toLowerCase();
    
    if (serie.includes('1¬∫') || serie.includes('2¬∫') || serie.includes('3¬∫') || serie.includes('fundamental i')) {
      return 'Turma do Ensino Fundamental I - Faixa et√°ria de 6 a 10 anos, em processo de alfabetiza√ß√£o e letramento';
    } else if (serie.includes('4¬∫') || serie.includes('5¬∫')) {
      return 'Turma do Ensino Fundamental I - Faixa et√°ria de 9 a 11 anos, consolidando habilidades b√°sicas';
    } else if (serie.includes('6¬∫') || serie.includes('7¬∫') || serie.includes('8¬∫') || serie.includes('9¬∫') || serie.includes('fundamental ii')) {
      return 'Turma do Ensino Fundamental II - Adolescentes em desenvolvimento, com diferentes ritmos de aprendizagem';
    } else if (serie.includes('1¬™') || serie.includes('2¬™') || serie.includes('3¬™') || serie.includes('m√©dio')) {
      return 'Turma do Ensino M√©dio - Jovens em prepara√ß√£o para vestibular e mercado de trabalho';
    }
    
    return 'Turma heterog√™nea com diferentes n√≠veis de conhecimento e ritmos de aprendizagem';
  }
}
