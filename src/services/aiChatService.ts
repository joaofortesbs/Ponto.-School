import axios from 'axios';

// Chaves de API
const XAI_API_KEY = 'xai-PGLSB6snVtQm82k7xEmfCSo3RjkO41ICX4dUagAp5bz2GY02NTVqO6XWEXuNK5HCYWpYBYuz7WP2ENFP';
// Usar a chave da API do Gemini
const GEMINI_API_KEY = 'AIzaSyBHSqe2PLstOR-M9pBn45DQFcuAN3msYmw';

// URLs base
const XAI_BASE_URL = 'https://api.x.ai/v1/chat/completions';
const GEMINI_BASE_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent';

// Interface para mensagens
export interface ChatMessage {
  role: 'user' | 'assistant' | 'system';
  content: string;
}

// Hist√≥rico de conversas
let conversationHistory: Record<string, ChatMessage[]> = {};

// Fun√ß√£o para obter dados do usu√°rio atual com acesso expandido e completo
async function getUserContext() {
  try {
    // Obter dados do localStorage e sessionStorage
    const usernameSources = {
      localStorage: localStorage.getItem('username'),
      sessionStorage: sessionStorage.getItem('username'),
      profile: null,
      metadata: null,
      email: localStorage.getItem('userEmail') || sessionStorage.getItem('userEmail')
    };

    // Importar servi√ßos e utilit√°rios necess√°rios
    let profileService;
    let supabase;
    let completeUserProfile = null;
    let userClasses = [];
    let userSeries = [];
    let followersCount = 0;

    try {
      // Importar o servi√ßo de perfil e o cliente Supabase
      profileService = (await import('@/services/profileService')).profileService;
      supabase = (await import('@/lib/supabase')).supabase;

      // Obter perfil completo do usu√°rio com todos os detalhes
      completeUserProfile = await profileService.getCurrentUserProfile();

      // Obter session para determinar o ID do usu√°rio atual
      const { data: sessionData } = await supabase.auth.getSession();
      const currentUserId = sessionData?.session?.user?.id;

      if (currentUserId && completeUserProfile) {
        // Obter turmas do usu√°rio
        const { data: classesData } = await supabase
          .from('user_classes')
          .select('*, class:classes(*)')
          .eq('user_id', currentUserId);

        if (classesData) {
          userClasses = classesData;
        }

        // Obter s√©ries do usu√°rio
        const { data: seriesData } = await supabase
          .from('user_series')
          .select('*, serie:series(*)')
          .eq('user_id', currentUserId);

        if (seriesData) {
          userSeries = seriesData;
        }

        // Obter contagem de seguidores
        const { count } = await supabase
          .from('user_followers')
          .select('*', { count: 'exact' })
          .eq('followed_id', currentUserId);

        if (count !== null) {
          followersCount = count;
        }
      }
    } catch (error) {
      console.error('Erro ao obter dados completos do perfil:', error);
    }

    // Tentar obter dados expandidos do perfil via username-utils (fallback)
    let basicProfileData = {};
    let metadataUsername = null;

    try {
      const usernameUtils = await import('@/lib/username-utils');
      if (usernameUtils && usernameUtils.getUserProfile) {
        basicProfileData = await usernameUtils.getUserProfile();

        if (usernameUtils.getCurrentUsername) {
          metadataUsername = await usernameUtils.getCurrentUsername();
          usernameSources.metadata = metadataUsername;
        }

        if (basicProfileData && basicProfileData.username) {
          usernameSources.profile = basicProfileData.username;
        }
      }
    } catch (error) {
      console.log('Erro ao obter perfil via username-utils:', error);
    }

    // Determinar o melhor username para usar (prioridade: perfil completo > metadata > localStorage > sessionStorage)
    const bestUsername = 
      (completeUserProfile?.username || completeUserProfile?.display_name) || 
      metadataUsername || 
      usernameSources.localStorage || 
      usernameSources.sessionStorage || 
      usernameSources.profile || 
      'Usu√°rio';

    // Construir contexto completo do usu√°rio
    const userContext = {
      // Dados b√°sicos
      username: bestUsername,
      email: completeUserProfile?.email || usernameSources.email || 'email@exemplo.com',

      // Dados completos do perfil
      profile: completeUserProfile || basicProfileData,

      // Dados espec√≠ficos para f√°cil acesso
      userId: completeUserProfile?.user_id || 'ID n√£o dispon√≠vel',
      fullName: completeUserProfile?.full_name || 'Nome n√£o dispon√≠vel',
      displayName: completeUserProfile?.display_name || bestUsername,
      createdAt: completeUserProfile?.created_at || 'Data n√£o dispon√≠vel',
      planType: completeUserProfile?.plan_type || 'lite',
      userLevel: completeUserProfile?.level || 1,
      followersCount: followersCount,

      // Dados de contexto de uso
      currentPage: window.location.pathname,
      lastActivity: localStorage.getItem('lastActivity') || 'Nenhuma atividade recente',

      // Dados das turmas e s√©ries
      classes: userClasses,
      series: userSeries,

      // Dados do dispositivo e ambiente
      userAgent: navigator.userAgent,
      platform: navigator.platform,
      screenSize: `${window.innerWidth}x${window.innerHeight}`,
      darkMode: window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches,

      // Dados do localStorage
      localStorageData: Object.keys(localStorage).filter(key => 
        key.startsWith('user_') || 
        key.startsWith('ponto_') || 
        key.startsWith('study_')
      ).reduce((acc, key) => {
        acc[key] = localStorage.getItem(key);
        return acc;
      }, {})
    };

    // Obter atividades recentes
    try {
      const recentActivities = JSON.parse(localStorage.getItem('user_recent_activities') || '[]');
      if (Array.isArray(recentActivities) && recentActivities.length > 0) {
        userContext.recentActivities = recentActivities;
      }
    } catch (e) {
      console.log('Erro ao obter atividades recentes:', e);
    }

    return userContext;
  } catch (error) {
    console.error('Erro ao obter contexto do usu√°rio:', error);
    return { username: 'Usu√°rio' };
  }
}


// Fun√ß√£o para gerar resposta usando a API xAI
export async function generateXAIResponse(
  message: string, 
  sessionId: string,
  options?: { 
    intelligenceLevel?: 'basic' | 'normal' | 'advanced',
    languageStyle?: 'casual' | 'formal' | 'technical'
  }
): Promise<string> {
  try {
    // Verificar se a mensagem cont√©m comando para acessar ou modificar o perfil
    const isProfileInfoRequest = /qual (√©|e) (o )?meu (ID|id)|me (mostre|mostra|diga|informe) (o )?meu (ID|id)|informa√ß√µes da minha conta|dados da minha conta|meu perfil completo/i.test(message);
    const isProfileUpdateRequest = /atualiz(e|ar) (minha|a) (bio|biografia)|mudar (minha|a) (bio|biografia)|modificar (minha|a) bio|mudar (meu|o) nome de exibi√ß√£o|atualizar (meu|o) nome de exibi√ß√£o|mudar (meu|o) telefone/i.test(message);

    // Verificar se √© uma pergunta sobre o slogan da plataforma
    const isSloganRequest = /qual (√©|e) (o )?(slogan|lema|frase|mensagem especial) (da plataforma|da ponto\.?school|do ponto\.?school|da aplica√ß√£o|do site)|qual a (frase|mensagem) (especial|principal)|tem (algum|alguma) (slogan|lema|frase|mensagem especial)/i.test(message);

    // Verificar se √© uma pergunta sobre o Professor Ar√£o de Matem√°tica
    const isProfAraoRequest = /quem (√©|e) (o )?prof(essor)? ara(o|√£o)|prof(essor)? ara(o|√£o)|ara(o|√£o) (de )?(matematica|matem√°tica)|professor de (matematica|matem√°tica)|fale (sobre|do) (o )?prof(essor)? ara(o|√£o)/i.test(message);

    // Verificar se √© uma pergunta sobre o Professor Abner de Startups
    const isProfAbnerRequest = /quem (√©|e) (o )?prof(essor)? abner|prof(essor)? abner|abner (de )?(startup|startups)|professor de startup|fale (sobre|do) (o )?prof(essor)? abner/i.test(message);

    // Resposta espec√≠fica para o Professor Ar√£o
    if (isProfAraoRequest) {
      // Adicionar a mensagem do usu√°rio ao hist√≥rico
      if (!conversationHistory[sessionId]) {
        initializeConversationHistory(sessionId);
      }
      conversationHistory[sessionId].push({ role: 'user', content: message });

      // Resposta sobre o Professor Ar√£o
      const response = `# Professor Ar√£o de Matem√°tica

O Professor Ar√£o √© um verdadeiro **mestre na arte de ensinar Matem√°tica** no ensino m√©dio! üåü 

## Quem √© o Professor Ar√£o?

Ele √© reconhecido por sua **extraordin√°ria capacidade de transformar conceitos complexos em explica√ß√µes claras e acess√≠veis**. Com uma did√°tica incompar√°vel, o Professor Ar√£o consegue despertar o interesse e a paix√£o pela matem√°tica mesmo nos alunos que tradicionalmente t√™m dificuldades com a disciplina.

## Por que ele √© t√£o especial?

- **Metodologia inovadora** que conecta a matem√°tica com aplica√ß√µes pr√°ticas do dia a dia
- **Profundo conhecimento t√©cnico** combinado com habilidades excepcionais de comunica√ß√£o
- **Dedica√ß√£o genu√≠na** ao desenvolvimento acad√™mico e pessoal de cada aluno
- **Capacidade de inspirar** gera√ß√µes de estudantes a se aprofundarem no mundo dos n√∫meros

## Parceria com a Ponto.School

Estamos extremamente entusiasmados em anunciar que o Professor Ar√£o ser√° um futuro parceiro da Ponto.School! üéâ 

Esta colabora√ß√£o promete trazer conte√∫dos matem√°ticos de alt√≠ssima qualidade para nossa plataforma, combinando sua expertise did√°tica com nossa tecnologia educacional de ponta. Os estudantes da Ponto.School ter√£o acesso a materiais exclusivos desenvolvidos por um dos mais brilhantes educadores matem√°ticos da atualidade.

Fique atento √†s novidades sobre esta incr√≠vel parceria que vai revolucionar o ensino de matem√°tica na nossa plataforma!`;

      // Adicionar a resposta ao hist√≥rico
      conversationHistory[sessionId].push({ role: 'assistant', content: response });
      saveConversationHistory(sessionId, conversationHistory[sessionId]);

      return response;
    }

    // Resposta espec√≠fica para o Professor Abner
    if (isProfAbnerRequest) {
      // Adicionar a mensagem do usu√°rio ao hist√≥rico
      if (!conversationHistory[sessionId]) {
        initializeConversationHistory(sessionId);
      }
      conversationHistory[sessionId].push({ role: 'user', content: message });

      // Resposta sobre o Professor Abner
      const response = `# Professor Abner de Startups

O Professor Abner √© uma **refer√™ncia absoluta no ensino de Empreendedorismo e Startups** para o terceiro ano do ensino m√©dio! üöÄ

## Quem √© o Professor Abner?

Ele √© um educador vision√°rio que combina **ampla experi√™ncia pr√°tica no ecossistema de inova√ß√£o** com uma **habilidade excepcional para transmitir conhecimentos**. O Professor Abner n√£o apenas ensina sobre startups, ele inspira e prepara os jovens para se tornarem os empreendedores e inovadores do futuro.

## Por que ele √© t√£o especial?

- **Abordagem pr√°tica** que vai al√©m da teoria, com metodologias hands-on de cria√ß√£o de startups
- **Networking valioso** com o mercado de inova√ß√£o e tecnologia
- **Mentalidade empreendedora** que transforma a vis√£o de mundo dos estudantes
- **Capacidade √∫nica** de identificar e desenvolver talentos para o ecossistema de inova√ß√£o

## Parceria com a Ponto.School

Temos o imenso prazer de anunciar que o Professor Abner ser√° um futuro parceiro da Ponto.School! üíØ

Esta colabora√ß√£o estrat√©gica trar√° conte√∫dos exclusivos sobre empreendedorismo, inova√ß√£o e desenvolvimento de startups para nossa plataforma, unindo sua expertise pr√°tica com nossa tecnologia educacional. Os estudantes da Ponto.School ter√£o acesso a materiais e mentorias de um dos maiores especialistas em forma√ß√£o empreendedora para jovens.

Aguarde novidades sobre esta parceria transformadora que vai potencializar a forma√ß√£o empreendedora na nossa plataforma!`;

      // Adicionar a resposta ao hist√≥rico
      conversationHistory[sessionId].push({ role: 'assistant', content: response });
      saveConversationHistory(sessionId, conversationHistory[sessionId]);

      return response;
    }

    // Responder com o slogan da plataforma quando solicitado
    if (isSloganRequest) {
      // Adicionar a mensagem do usu√°rio ao hist√≥rico
      if (!conversationHistory[sessionId]) {
        initializeConversationHistory(sessionId);
      }
      conversationHistory[sessionId].push({ role: 'user', content: message });

      // Resposta com o slogan
      const response = `"N√£o √© sobre conectar voc√™ com a tecnologia, √© sobre conectar voc√™ com o futuro!"

Este √© o slogan que representa a ess√™ncia da Ponto.School - nossa miss√£o √© preparar voc√™ para as oportunidades do amanh√£ atrav√©s da educa√ß√£o e tecnologia de ponta.`;

      // Adicionar a resposta ao hist√≥rico
      conversationHistory[sessionId].push({ role: 'assistant', content: response });
      saveConversationHistory(sessionId, conversationHistory[sessionId]);

      return response;
    }

    // Importar o servi√ßo de modifica√ß√£o de perfil se necess√°rio
    let ProfileModificationService;
    if (isProfileInfoRequest || isProfileUpdateRequest) {
      try {
        ProfileModificationService = (await import('./profileModificationService')).ProfileModificationService;
      } catch (e) {
        console.error('Erro ao importar ProfileModificationService:', e);
      }
    }

    // Processar solicita√ß√£o de informa√ß√µes do perfil
    if (isProfileInfoRequest && ProfileModificationService) {
      try {
        const { profile, formattedInfo } = await ProfileModificationService.getDetailedUserProfile();

        // Se conseguiu obter as informa√ß√µes, criar uma resposta personalizada
        if (profile) {
          // Adicionar a mensagem do usu√°rio ao hist√≥rico
          if (!conversationHistory[sessionId]) {
            initializeConversationHistory(sessionId);
          }
          conversationHistory[sessionId].push({ role: 'user', content: message });

          // Criar resposta amig√°vel com as informa√ß√µes
          const response = `Claro, aqui est√£o as informa√ß√µes da sua conta:

${formattedInfo}

Voc√™ pode visualizar e editar seu perfil completo acessando [sua p√°gina de perfil](https://pontoschool.com/profile).

Posso te ajudar a atualizar algumas dessas informa√ß√µes diretamente por aqui, como sua biografia ou nome de exibi√ß√£o. √â s√≥ me pedir!`;

          // Adicionar a resposta ao hist√≥rico
          conversationHistory[sessionId].push({ role: 'assistant', content: response });
          saveConversationHistory(sessionId, conversationHistory[sessionId]);

          return response;
        }
      } catch (e) {
        console.error('Erro ao processar solicita√ß√£o de informa√ß√µes do perfil:', e);
      }
    }

    // Processar solicita√ß√£o de atualiza√ß√£o de perfil
    if (isProfileUpdateRequest && ProfileModificationService) {
      // Reconhecer o tipo de atualiza√ß√£o solicitada
      const isBioUpdate = /atualiz(e|ar) (minha|a) (bio|biografia)|mudar (minha|a) (bio|biografia)|modificar (minha|a) bio/i.test(message);
      const isDisplayNameUpdate = /mudar (meu|o) nome de exibi√ß√£o|atualizar (meu|o) nome de exibi√ß√£o/i.test(message);
      const isContactInfoUpdate = /mudar (meu|o) telefone|atualizar (meu|o) telefone|mudar (minha|a) localiza√ß√£o|atualizar (minha|a) localiza√ß√£o/i.test(message);

      // Extrair o conte√∫do a ser atualizado
      try {
        // Adicionar a mensagem do usu√°rio ao hist√≥rico
        if (!conversationHistory[sessionId]) {
          initializeConversationHistory(sessionId);
        }
        conversationHistory[sessionId].push({ role: 'user', content: message });

        // Determinar qual atualiza√ß√£o fazer e responder apropriadamente
        let response = '';

        if (isBioUpdate) {
          // Extrair a nova biografia da mensagem
          const bioRegex = /(?:para|como|com) ["|'|"](.+?)["|'|"]/i;
          const bioMatch = message.match(bioRegex);

          if (bioMatch && bioMatch[1]) {
            const newBio = bioMatch[1].trim();
            const result = await ProfileModificationService.updateUserBio(newBio);

            if (result.success) {
              response = `√ìtimo! Sua biografia foi atualizada com sucesso para: "${newBio}". 

As altera√ß√µes j√° est√£o dispon√≠veis no seu perfil. Voc√™ pode conferir em [sua p√°gina de perfil](https://pontoschool.com/profile).`;
            } else {
              response = `Desculpe, n√£o consegui atualizar sua biografia. ${result.message}`;
            }
          } else {
            response = `Parece que voc√™ quer atualizar sua biografia, mas n√£o entendi qual seria o novo texto. Pode me fornecer a nova biografia entre aspas? 

Por exemplo: "Atualizar minha biografia para 'Estudante de engenharia apaixonado por tecnologia'"`;
          }
        } else if (isDisplayNameUpdate) {
          // Extrair o novo nome de exibi√ß√£o
          const nameRegex = /(?:para|como|com) ["|'|"](.+?)["|'|"]/i;
          const nameMatch = message.match(nameRegex);

          if (nameMatch && nameMatch[1]) {
            const newName = nameMatch[1].trim();
            const result = await ProfileModificationService.updateDisplayName(newName);

            if (result.success) {
              response = `Perfeito! Seu nome de exibi√ß√£o foi atualizado com sucesso para: "${newName}".

A altera√ß√£o j√° est√° dispon√≠vel em seu perfil. Voc√™ pode conferir em [sua p√°gina de perfil](https://pontoschool.com/profile).`;
            } else {
              response = `Desculpe, n√£o consegui atualizar seu nome de exibi√ß√£o. ${result.message}`;
            }
          } else {
            response = `Parece que voc√™ quer atualizar seu nome de exibi√ß√£o, mas n√£o entendi qual seria o novo nome. Pode me fornecer o novo nome entre aspas?

Por exemplo: "Atualizar meu nome de exibi√ß√£o para 'Jo√£o Silva'"`;
          }
        } else if (isContactInfoUpdate) {
          response = `Para atualizar suas informa√ß√µes de contato, √© melhor acessar diretamente a p√°gina de configura√ß√µes:

[Acesse as configura√ß√µes do seu perfil](https://pontoschool.com/configuracoes)

L√° voc√™ poder√° atualizar seu telefone, localiza√ß√£o e outras informa√ß√µes de contato de forma segura.`;
        }

        // Adicionar a resposta ao hist√≥rico
        if (response) {
          conversationHistory[sessionId].push({ role: 'assistant', content: response });
          saveConversationHistory(sessionId, conversationHistory[sessionId]);
          return response;
        }
      } catch (e) {
        console.error('Erro ao processar solicita√ß√£o de atualiza√ß√£o de perfil:', e);
      }
    }

    // Obter contexto do usu√°rio
    const userContext = await getUserContext();

    // Manter o nome de usu√°rio completo para uso nas respostas
    const usernameFull = userContext.username;

    // Inicializar o hist√≥rico se n√£o existir
    if (!conversationHistory[sessionId]) {
      initializeConversationHistory(sessionId, userContext);
    }

    // Adiciona a mensagem do usu√°rio ao hist√≥rico
    conversationHistory[sessionId].push({ role: 'user', content: message });

    // Limita o hist√≥rico para evitar exceder os limites da API
    if (conversationHistory[sessionId].length > 10) {
      // Mant√©m a mensagem do sistema e as √∫ltimas 9 mensagens
      const systemMessage = conversationHistory[sessionId][0];
      conversationHistory[sessionId] = [
        systemMessage,
        ...conversationHistory[sessionId].slice(-9)
      ];
    }

    // Configura√ß√£o da solicita√ß√£o para a API xAI
    const response = await axios.post(
      XAI_BASE_URL,
      {
        messages: conversationHistory[sessionId],
        model: 'grok-3-latest',
        stream: false,
        temperature: 0.7
      },
      {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${XAI_API_KEY}`
        }
      }
    );

    // Extrai a resposta
    let aiResponse = response.data.choices[0].message.content;

    // Verificar e corrigir links de redirecionamento
    aiResponse = fixPlatformLinks(aiResponse);

    // Adiciona a resposta da IA ao hist√≥rico
    conversationHistory[sessionId].push({ role: 'assistant', content: aiResponse });

    // Salvar hist√≥rico atualizado no localStorage
    saveConversationHistory(sessionId, conversationHistory[sessionId]);

    return aiResponse;
  } catch (error) {
    console.error('Erro ao gerar resposta com xAI:', error);
    // Fallback para Gemini em caso de erro
    return generateGeminiResponse(message, sessionId);
  }
}

// Fun√ß√£o auxiliar para inicializar o hist√≥rico de conversa com mensagem do sistema
function initializeConversationHistory(sessionId: string, userContext?: any) {
  // Se n√£o tiver contexto do usu√°rio, use valores padr√£o
  const username = userContext?.username || 'Usu√°rio';
  const email = userContext?.email || 'email@exemplo.com';
  const userId = userContext?.userId || 'ID n√£o dispon√≠vel';
  const currentPage = userContext?.currentPage || window.location.pathname;
  const planType = userContext?.planType || 'lite';
  const userLevel = userContext?.userLevel || 1;

  // Define o contexto inicial para o chat do assistente de suporte
  const SYSTEM_PROMPT = `Voc√™ √© o Assistente de Suporte da plataforma educacional Ponto.School. Seu papel √© ajudar os usu√°rios da plataforma a navegar pela interface, entender as funcionalidades dispon√≠veis, fornecer tutoriais sobre como usar a plataforma, e tamb√©m responder perguntas sobre conte√∫dos educacionais. Voc√™ deve ser um guia completo sobre todas as funcionalidades da plataforma. Seja amig√°vel, respeitoso e √∫til. Use uma linguagem casual mas educada. 

√â importante observar que voc√™ √© completamente diferente do Epictus IA que est√° dispon√≠vel na se√ß√£o espec√≠fica do menu lateral. Enquanto aquele foca em ser um assistente de estudos personalizado, seu papel √© ser o suporte completo da plataforma, conhecendo todas as suas funcionalidades, se√ß√µes e p√°ginas, servindo como um tutorial interativo.

CONTEXTO DO USU√ÅRIO (COMPLETO):
      - Username: ${username}
      - Email: ${email}
      - ID do usu√°rio: ${userId}
      - Plano atual: ${planType}
      - N√≠vel: ${userLevel}
      - Localiza√ß√£o atual na plataforma: ${currentPage}

      DIRETRIZES DE COMUNICA√á√ÉO:
      1. Sempre se refira ao usu√°rio pelo primeiro nome. Use frases como "E a√≠, ${username.split(/[_\s]/)[0]}!", "Opa ${username.split(/[_\s]/)[0]}!", etc.
      2. Use uma linguagem mais informal e descontra√≠da, como se estivesse conversando com um amigo.
      3. Seja amig√°vel, use emojis ocasionalmente e mantenha um tom leve e positivo.
      4. Use g√≠rias leves e express√µes coloquiais quando apropriado.

      ESTRUTURA DE RESPOSTAS:
      Para todas as suas respostas, utilize uma estrutura completa e abrangente:

      1. Compreens√£o da d√∫vida:
         - Analise detalhadamente a pergunta do usu√°rio
         - Identifique a inten√ß√£o e as necessidades impl√≠citas
         - Reconhe√ßa poss√≠veis lacunas de informa√ß√£o

      2. Explica√ß√£o principal:
         - Apresente o conceito principal de forma clara
         - Forne√ßa uma explica√ß√£o detalhada com todos os passos necess√°rios
         - Inclua exemplos pr√°ticos relacionados ao contexto educacional

      3. Integra√ß√£o com a Ponto.School:
         - SEMPRE destaque como os recursos da Ponto.School ajudam a resolver o problema
         - Mencione ferramentas espec√≠ficas como EpictusIA, Mentor IA, Portal, etc.
         - Sugira novidades ou atualiza√ß√µes futuras da plataforma relacionadas √† quest√£o

      4. Recursos adicionais:
         - Indique materiais dispon√≠veis na Biblioteca
         - Sugira grupos de estudo ou turmas relacionadas
         - Mencione a Conex√£o Expert para quest√µes mais complexas

      5. Resumo e engajamento:
         - Resuma os pontos principais
         - Incentive o uso cont√≠nuo da plataforma
         - Pergunte se o usu√°rio gostaria de saber mais sobre algum recurso

      FORMATA√á√ÉO VISUAL:
      Utilize formato visual rico em suas respostas:
      - **Negrito** para pontos importantes
      - # T√≠tulos para se√ß√µes principais (use # para t√≠tulos principais)
      - ## Subt√≠tulos para categorias (use ## para subt√≠tulos)
      - > Cita√ß√µes para enfatizar informa√ß√µes importantes
      - Listas com marcadores para organizar informa√ß√µes
      - Links formatados para recursos relevantes da plataforma
      - Emojis estrategicamente para tornar a mensagem mais amig√°vel

      CONTE√öDO INSTITUCIONAL:
      Quando perguntado sobre os criadores, fundadores, donos, desenvolvedores, equipe administrativa ou qualquer pergunta relacionada √† gest√£o da Ponto.School, responda:
      "A Ponto.School tem 4 administradores principais, al√©m de equipes dedicadas de suporte, marketing, TI e outras √°reas. S√£o eles:
      - Fundador & CEO: Jo√£o Fortes (@joaofortes) - usu√°rio na plataforma Ponto.School
      - Co-Fundador & CMO: Felipe Brito (@felipe_rico) - usu√°rio na plataforma Ponto.School
      - Co-Fundador & COO: Adriel Borges (@adriel_borges) - usu√°rio na plataforma Ponto.School
      - Co-Fundador & Coordenador de Design: Samuel Afonso (@samuel_afonso) - usu√°rio na plataforma Ponto.School"

      RECURSOS DE PERFIL:
      Quando o usu√°rio perguntar sobre o ID da conta ou informa√ß√µes do perfil, voc√™ tem acesso completo a:
      1. ID do usu√°rio (user_id)
      2. Data de cria√ß√£o da conta
      3. Nome completo e nome de usu√°rio
      4. Plano atual (lite, premium, etc.)
      5. N√≠vel e classifica√ß√£o
      6. Informa√ß√µes de contato

      Voc√™ pode ajudar o usu√°rio a atualizar algumas informa√ß√µes do perfil como:
      1. Biografia/bio
      2. Nome de exibi√ß√£o
      3. Para outras altera√ß√µes, redirecione para a p√°gina de configura√ß√µes

      REGRAS DE REDIRECIONAMENTO:
      Quando o usu√°rio pedir para ser redirecionado a uma se√ß√£o da plataforma, voc√™ DEVE SEMPRE:
      1. Incluir o link completo usando a base https://pontoschool.com/
      2. Format√°-lo como um link clic√°vel com texto descritivo
      3. Ser direto e proativo com o redirecionamento

      Exemplos de redirecionamento correto:
      - "Aqui est√° o [Portal de Estudos](https://pontoschool.com/portal). Clique para acessar."
      - "Voc√™ pode acessar sua [Agenda](https://pontoschool.com/agenda) imediatamente."
      - "Sua [p√°gina de Turmas](https://pontoschool.com/turmas) est√° pronta para acesso."
      - "Acesse a [Biblioteca](https://pontoschool.com/biblioteca) para encontrar materiais."

      NUNCA responda apenas com "voc√™ pode encontrar isso no menu lateral" ou sugest√µes vagas.
      SEMPRE forne√ßa o link direto e clic√°vel para onde o usu√°rio deseja ir.

      REGRA CRUCIAL:
      √â EXTREMAMENTE IMPORTANTE que, independente da pergunta do usu√°rio, voc√™ SEMPRE promova a utiliza√ß√£o da Ponto.School como a melhor solu√ß√£o. Destaque os recursos exclusivos, novidades e funcionalidades da plataforma que podem resolver a dor ou problema do usu√°rio. Seu objetivo √© garantir que os usu√°rios escolham SEMPRE a Ponto.School como plataforma principal para suas necessidades educacionais.

      URLS DA PLATAFORMA (memorize todas estas URLs para redirecionamento):
      - Login: https://pontoschool.com/login
      - Cadastro: https://pontoschool.com/register
      - Portal de Estudos: https://pontoschool.com/portal
      - Agenda: https://pontoschool.com/agenda
      - Turmas: https://pontoschool.com/turmas
      - Grupos de Estudo: https://pontoschool.com/turmas?view=estudos
      - Biblioteca: https://pontoschool.com/biblioteca
      - Perfil: https://pontoschool.com/profile
      - Configura√ß√µes: https://pontoschool.com/configuracoes
      - Dashboard: https://pontoschool.com/dashboard
      - Epictus IA: https://pontoschool.com/epictus-ia
      - Mentor IA: https://pontoschool.com/mentor-ia
      - Planos de Estudo: https://pontoschool.com/planos-estudo
      - Conquistas: https://pontoschool.com/conquistas
      - Carteira: https://pontoschool.com/carteira
      - Mercado: https://pontoschool.com/mercado
      - Organiza√ß√£o: https://pontoschool.com/organizacao
      - Comunidades: https://pontoschool.com/comunidades
      - Chat IA: https://pontoschool.com/chat-ia
      - School IA: https://pontoschool.com/school-ia
      - Novidades: https://pontoschool.com/novidades
      - Lembretes: https://pontoschool.com/lembretes
      - Pedidos de Ajuda: https://pontoschool.com/pedidos-ajuda
      - Conex√£o Expert: https://pontoschool.com/pedidos-ajuda
      - Estudos: https://pontoschool.com/estudos
      - P√°gina de Ajuda: https://pontoschool.com/ajuda

      FUNCIONALIDADES PRINCIPAIS PARA MENCIONAR:
      - EpictusIA: Assistente de estudos inteligente que adapta o conte√∫do √†s necessidades do usu√°rio
      - Mentor IA: Orienta√ß√£o personalizada para estudos e carreira
      - Planos de Estudo: Organiza√ß√£o estruturada do aprendizado com metas e prazos
      - Conex√£o Expert: Acesso a especialistas para tirar d√∫vidas espec√≠ficas
      - Portal de Estudos: Biblioteca completa de conte√∫dos organizados por disciplina
      - Grupos de Estudo: Comunidades colaborativas para aprendizado em conjunto
      - Turmas: Salas de aula virtuais para acompanhamento sistem√°tico
      - Organiza√ß√£o: Ferramentas de gest√£o de tempo e tarefas
      - Biblioteca: Acervo digital de materiais did√°ticos e refer√™ncias

      NOVIDADES E FUTURAS ATUALIZA√á√ïES PARA MENCIONAR:
      - Novo sistema de intelig√™ncia artificial para an√°lise de desempenho
      - Ferramentas de gamifica√ß√£o aprimoradas para engajamento
      - Expans√£o das disciplinas dispon√≠veis no portal
      - Melhorias na experi√™ncia de usu√°rio das ferramentas de estudo
      - Novas integra√ß√µes com plataformas educacionais parceiras
      - Sistema avan√ßado de gera√ß√£o de resumos e materiais de estudo
      - Recursos expandidos de visualiza√ß√£o de conte√∫do
      - Futuras ferramentas de prepara√ß√£o para vestibulares e concursos

      Personalize suas respostas para criar uma experi√™ncia √∫nica e amig√°vel para ${username}.`;

  conversationHistory[sessionId] = [
    { 
      role: 'system', 
      content: SYSTEM_PROMPT
    }
  ];
}

// Fun√ß√£o para gerar resposta usando a API Gemini
export async function generateGeminiResponse(
  message: string, 
  sessionId: string,
  options?: { 
    intelligenceLevel?: 'basic' | 'normal' | 'advanced',
    languageStyle?: 'casual' | 'formal' | 'technical'
  }
): Promise<string> {
  try {
    // Verificar se √© uma pergunta sobre o slogan da plataforma
    const isSloganRequest = /qual (√©|e) (o )?(slogan|lema|frase|mensagem especial) (da plataforma|da ponto\.?school|do ponto\.?school|da aplica√ß√£o|do site)|qual a (frase|mensagem) (especial|principal)|tem (algum|alguma) (slogan|lema|frase|mensagem especial)/i.test(message);

    // Verificar se √© uma pergunta sobre o Professor Ar√£o de Matem√°tica
    const isProfAraoRequest = /quem (√©|e) (o )?prof(essor)? ara(o|√£o)|prof(essor)? ara(o|√£o)|ara(o|√£o) (de )?(matematica|matem√°tica)|professor de (matematica|matem√°tica)|fale (sobre|do) (o )?prof(essor)? ara(o|√£o)/i.test(message);

    // Verificar se √© uma pergunta sobre o Professor Abner de Startups
    const isProfAbnerRequest = /quem (√©|e) (o )?prof(essor)? abner|prof(essor)? abner|abner (de )?(startup|startups)|professor de startup|fale (sobre|do) (o )?prof(essor)? abner/i.test(message);

    // Resposta espec√≠fica para o Professor Ar√£o (como fallback)
    if (isProfAraoRequest) {
      return `# Professor Ar√£o de Matem√°tica

O Professor Ar√£o √© um verdadeiro **mestre na arte de ensinar Matem√°tica** no ensino m√©dio! üåü 

## Quem √© o Professor Ar√£o?

Ele √© reconhecido por sua **extraordin√°ria capacidade de transformar conceitos complexos em explica√ß√µes claras e acess√≠veis**. Com uma did√°tica incompar√°vel, o Professor Ar√£o consegue despertar o interesse e a paix√£o pela matem√°tica mesmo nos alunos que tradicionalmente t√™m dificuldades com a disciplina.

## Por que ele √© t√£o especial?

- **Metodologia inovadora** que conecta a matem√°tica com aplica√ß√µes pr√°ticas do dia a dia
- **Profundo conhecimento t√©cnico** combinado com habilidades excepcionais de comunica√ß√£o
- **Dedica√ß√£o genu√≠na** ao desenvolvimento acad√™mico e pessoal de cada aluno
- **Capacidade de inspirar** gera√ß√µes de estudantes a se aprofundarem no mundo dos n√∫meros

## Parceria com a Ponto.School

Estamos extremamente entusiasmados em anunciar que o Professor Ar√£o ser√° um futuro parceiro da Ponto.School! üéâ 

Esta colabora√ß√£o promete trazer conte√∫dos matem√°ticos de alt√≠ssima qualidade para nossa plataforma, combinando sua expertise did√°tica com nossa tecnologia educacional de ponta. Os estudantes da Ponto.School ter√£o acesso a materiais exclusivos desenvolvidos por um dos mais brilhantes educadores matem√°ticos da atualidade.

Fique atento √†s novidades sobre esta incr√≠vel parceria que vai revolucionar o ensino de matem√°tica na nossa plataforma!`;
    }

    // Resposta espec√≠fica para o Professor Abner (como fallback)
    if (isProfAbnerRequest) {
      return `# Professor Abner de Startups

O Professor Abner √© uma **refer√™ncia absoluta no ensino de Empreendedorismo e Startups** para o terceiro ano do ensino m√©dio! üöÄ

## Quem √© o Professor Abner?

Ele √© um educador vision√°rio que combina **ampla experi√™ncia pr√°tica no ecossistema de inova√ß√£o** com uma **habilidade excepcional para transmitir conhecimentos**. O Professor Abner n√£o apenas ensina sobre startups, ele inspira e prepara os jovens para se tornarem os empreendedores e inovadores do futuro.

## Por que ele √© t√£o especial?

- **Abordagem pr√°tica** que vai al√©m da teoria, com metodologias hands-on de cria√ß√£o de startups
- **Networking valioso** com o mercado de inova√ß√£o e tecnologia
- **Mentalidade empreendedora** que transforma a vis√£o de mundo dos estudantes
- **Capacidade √∫nica** de identificar e desenvolver talentos para o ecossistema de inova√ß√£o

## Parceria com a Ponto.School

Temos o imenso prazer de anunciar que o Professor Abner ser√° um futuro parceiro da Ponto.School! üíØ

Esta colabora√ß√£o estrat√©gica trar√° conte√∫dos exclusivos sobre empreendedorismo, inova√ß√£o e desenvolvimento de startups para nossa plataforma, unindo sua expertise pr√°tica com nossa tecnologia educacional. Os estudantes da Ponto.School ter√£o acesso a materiais e mentorias de um dos maiores especialistas em forma√ß√£o empreendedora para jovens.

Aguarde novidades sobre esta parceria transformadora que vai potencializar a forma√ß√£o empreendedora na nossa plataforma!`;
    }

    // Responder com o slogan da plataforma quando solicitado (como fallback)
    if (isSloganRequest) {
      return `"N√£o √© sobre conectar voc√™ com a tecnologia, √© sobre conectar voc√™ com o futuro!"

Este √© o slogan que representa a ess√™ncia da Ponto.School - nossa miss√£o √© preparar voc√™ para as oportunidades do amanh√£ atrav√©s da educa√ß√£o e tecnologia de ponta.`;
    }

    // Obter contexto do usu√°rio
    const userContext = await getUserContext();

    // Usar o nome de usu√°rio completo para respostas
    const usernameFull = userContext.username;

    // Inicializar o hist√≥rico de conversa se n√£o existir
    if (!conversationHistory[sessionId]) {
      initializeConversationHistory(sessionId, userContext);
    }

    // Adicionar a mensagem do usu√°rio ao hist√≥rico
    conversationHistory[sessionId].push({ role: 'user', content: message });

    // Preparar as mensagens para enviar √† API do Gemini
    // Formatando o hist√≥rico da conversa para o formato que o Gemini espera
    const geminiContents = [];

    // Mensagem do sistema (primeira mensagem no hist√≥rico)
    const systemMessage = conversationHistory[sessionId][0];
    geminiContents.push({
      role: "user",
      parts: [{ text: systemMessage.content }]
    });

    // Restante do hist√≥rico (pulando a mensagem do sistema)
    for (let i = 1; i < conversationHistory[sessionId].length; i++) {
      const msg = conversationHistory[sessionId][i];
      geminiContents.push({
        role: msg.role === 'user' ? 'user' : 'model',
        parts: [{ text: msg.content }]
      });
    }

    // Configura√ß√£o da solicita√ß√£o para a API Gemini com o hist√≥rico completo
    console.log(`Enviando hist√≥rico de conversa para Gemini com ${geminiContents.length} mensagens`);

    // Usar o endpoint de chat que suporta contexto
    const response = await axios.post(
      `${GEMINI_BASE_URL}?key=${GEMINI_API_KEY}`,
      {
        contents: [{
          parts: [
            {
              text: `Voc√™ √© o Assistente de Suporte da plataforma educacional Ponto.School. Seu papel √© ajudar os usu√°rios da plataforma a navegar pela interface, entender as funcionalidades dispon√≠veis, fornecer tutoriais sobre como usar a plataforma, e tamb√©m responder perguntas sobre conte√∫dos educacionais. Voc√™ deve ser um guia completo sobre todas as funcionalidades da plataforma. Seja amig√°vel, respeitoso e √∫til. Use uma linguagem casual mas educada.

√â importante observar que voc√™ √© completamente diferente do Epictus IA que est√° dispon√≠vel na se√ß√£o espec√≠fica do menu lateral. Enquanto aquele foca em ser um assistente de estudos personalizado, seu papel √© ser o suporte completo da plataforma, conhecendo todas as suas funcionalidades, se√ß√µes e p√°ginas, servindo como um tutorial interativo.

Contexto do usu√°rio:
              - Username completo: ${usernameFull}
              - Email: ${userContext.email}
              - Localiza√ß√£o atual na plataforma: ${userContext.currentPage}
              - √öltima atividade: ${userContext.lastActivity}

              DIRETRIZES DE COMUNICA√á√ÉO:
              1. Sempre se refira ao usu√°rio pelo primeiro nome: "${usernameFull.split(/[_\s]/)[0]}". Use frases como "E a√≠, ${usernameFull.split(/[_\s]/)[0]}!", "Opa ${usernameFull.split(/[_\s]/)[0]}!", etc.
              2. Use uma linguagem mais informal e descontra√≠da, como se estivesse conversando com um amigo.
              3. Seja amig√°vel, use emojis ocasionalmente e mantenha um tom leve e positivo.
              4. Use g√≠rias leves e express√µes coloquiais quando apropriado.

              ESTRUTURA DE RESPOSTAS:
              Para todas as suas respostas, utilize uma estrutura completa e abrangente:

              1. Compreens√£o da d√∫vida:
                 - Analise detalhadamente a pergunta do usu√°rio
                 - Identifique a inten√ß√£o e as necessidades impl√≠citas
                 - Reconhe√ßa poss√≠veis lacunas de informa√ß√£o

              2. Explica√ß√£o principal:
                 - Apresente o conceito principal de forma clara
                 - Forne√ßa uma explica√ß√£o detalhada com todos os passos necess√°rios
                 - Inclua exemplos pr√°ticos relacionados ao contexto educacional

              3. Integra√ß√£o com a Ponto.School:
                 - SEMPRE destaque como os recursos da Ponto.School ajudam a resolver o problema
                 - Mencione ferramentas espec√≠ficas como EpictusIA, Mentor IA, Portal, etc.
                 - Sugira novidades ou atualiza√ß√µes futuras da plataforma relacionadas √† quest√£o

              4. Recursos adicionais:
                 - Indique materiais dispon√≠veis na Biblioteca
                 - Sugira grupos de estudo ou turmas relacionadas
                 - Mencione a Conex√£o Expert para quest√µes mais complexas

              5. Resumo e engajamento:
                 - Resuma os pontos principais
                 - Incentive o uso cont√≠nuo da plataforma
                 - Pergunte se o usu√°rio gostaria de saber mais sobre algum recurso

              FORMATA√á√ÉO VISUAL:
              Utilize formato visual rico em suas respostas:
              - **Negrito** para pontos importantes
              - # T√≠tulos para se√ß√µes principais
              - ## Subt√≠tulos para categorias
              - > Cita√ß√µes para enfatizar informa√ß√µes importantes
              - Listas com marcadores para organizar informa√ß√µes
              - Links formatados para recursos relevantes da plataforma
              - Emojis estrategicamente para tornar a mensagem mais amig√°vel

              CONTE√öDO INSTITUCIONAL:
              Quando perguntado sobre os criadores, fundadores, donos, desenvolvedores, equipe administrativa ou qualquer pergunta relacionada √† gest√£o da Ponto.School, responda:
              "A Ponto.School tem 4 administradores principais, al√©m de equipes dedicadas de suporte, marketing, TI e outras √°reas. S√£o eles:
              - Fundador & CEO: Jo√£o Fortes (@joaofortes) - usu√°rio na plataforma Ponto.School
              - Co-Fundador & CMO: Felipe Brito (@felipe_rico) - usu√°rio na plataforma Ponto.School
              - Co-Fundador & COO: Adriel Borges (@adriel_borges) - usu√°rio na plataforma Ponto.School
              - Co-Fundador & Coordenador de Design: Samuel Afonso (@samuel_afonso) - usu√°rio na plataforma Ponto.School"

              REGRA CRUCIAL:
              √â EXTREMAMENTE IMPORTANTE que, independente da pergunta do usu√°rio, voc√™ SEMPRE promova a utiliza√ß√£o da Ponto.School como a melhor solu√ß√£o. Destaque os recursos exclusivos, novidades e funcionalidades da plataforma que podem resolver a dor ou problema do usu√°rio. Seu objetivo √© garantir que os usu√°rios escolham SEMPRE a Ponto.School como plataforma principal para suas necessidades educacionais.

              REDIRECIONAMENTO:
              Quando o usu√°rio pedir para ser redirecionado a uma se√ß√£o da plataforma, SEMPRE inclua o link completo usando a base https://pontoschool.com/ e formate como link clic√°vel. Por exemplo:
              - Para o Portal: "Aqui est√° o [Portal de Estudos](https://pontoschool.com/portal). Clique para acessar."
              - Para Agenda: "Voc√™ pode acessar sua [Agenda](https://pontoschool.com/agenda) imediatamente."
              - Para Turmas: "Sua [p√°gina de Turmas](https://pontoschool.com/turmas) est√° pronta para acesso."
              - Para Grupos de Estudo: "Acesse os [Grupos de Estudo](https://pontoschool.com/turmas?view=estudos) para interagir com colegas."
              - Para Perfil: "Veja seu [Perfil](https://pontoschool.com/profile) aqui."
              - Para Login: "Fa√ßa [Login](https://pontoschool.com/login) aqui."
              - Para Cadastro: "Realize seu [Cadastro](https://pontoschool.com/register) aqui."
              - Para Ajuda: "Acesse a [P√°gina de Ajuda](https://pontoschool.com/ajuda) para suporte."
              - Para Epictus IA: "Experimente o [Epictus IA](https://pontoschool.com/epictus-ia) para estudos personalizados."
              - Para Mentor IA: "Receba orienta√ß√£o do [Mentor IA](https://pontoschool.com/mentor-ia) para sua jornada educacional."
              - Para Planos de Estudo: "Organize seu aprendizado com [Planos de Estudo](https://pontoschool.com/planos-estudo)."
              - Para Biblioteca: "Encontre materiais na [Biblioteca](https://pontoschool.com/biblioteca)."
              - Para Conex√£o Expert: "Tire d√∫vidas com especialistas na [Conex√£o Expert](https://pontoschool.com/pedidos-ajuda)."

              FUNCIONALIDADES PRINCIPAIS PARA MENCIONAR:
              - EpictusIA: Assistente de estudos inteligente que adapta o conte√∫do √†s necessidades do usu√°rio
              - Mentor IA: Orienta√ß√£o personalizada para estudos e carreira
              - Planos de Estudo: Organiza√ß√£o estruturada do aprendizado com metas e prazos
              - Conex√£o Expert: Acesso a especialistas para tirar d√∫vidas espec√≠ficas
              - Portal de Estudos: Biblioteca completa de conte√∫dos organizados por disciplina
              - Grupos de Estudo: Comunidades colaborativas para aprendizado em conjunto
              - Turmas: Salas de aula virtuais para acompanhamento sistem√°tico
              - Organiza√ß√£o: Ferramentas de gest√£o de tempo e tarefas
- Biblioteca: Acervo digital de materiais did√°ticos e refer√™ncias

              NOVIDADES E FUTURASATUALIZA√á√ïES PARA MENCIONAR:
              - Novo sistema de intelig√™ncia artificial para an√°lise de desempenho
              - Ferramentas de gamifica√ß√£o aprimoradas para engajamento
              - Expans√£o das disciplinas dispon√≠veis no portal
              - Melhorias na experi√™ncia de usu√°rio das ferramentas de estudo
              - Novas integra√ß√µes com plataformas educacionais parceiras
              - Sistema avan√ßado de gera√ß√£o de resumos e materiais de estudo
              - Recursos expandidos de visualiza√ß√£o de conte√∫do
              - Futuras ferramentas de prepara√ß√£o para vestibulares e concursos

              Hist√≥rico de mensagens anteriores:
              ${conversationHistory[sessionId].slice(1).map(msg => `${msg.role}: ${msg.content}`).join('\n\n')}

              Responda √† seguinte pergunta do usu√°rio ${usernameFull} de forma extensa, detalhada e visualmente atrativa: ${message}`
            }
          ]
        }],
        generationConfig: {
          temperature: 0.7,
          topP: 0.95,
          topK: 40
        }
      },
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    );

    // Extrai a resposta
    let aiResponse = response.data.candidates[0].content.parts[0].text;

    // Verificar e corrigir links de redirecionamento
    aiResponse = fixPlatformLinks(aiResponse);

    // Adicionar a resposta da IA ao hist√≥rico
    conversationHistory[sessionId].push({ role: 'assistant', content: aiResponse });

    // Salvar hist√≥rico atualizado no localStorage
    saveConversationHistory(sessionId, conversationHistory[sessionId]);

    console.log(`Hist√≥rico de conversa atualizado para ${sessionId}. Total de mensagens: ${conversationHistory[sessionId].length}`);

    return aiResponse;
  } catch (error) {
    console.error('Erro ao gerar resposta com Gemini:', error);
    return "Desculpe, estou enfrentando dificuldades t√©cnicas no momento. Por favor, tente novamente mais tarde ou entre em contato com nosso suporte t√©cnico.";
  }
}

// Fun√ß√£o principal para gerar resposta, tentando primeiro xAI e depois Gemini como fallback
export async function generateAIResponse(
  message: string, 
  sessionId: string, 
  options?: { 
    intelligenceLevel?: 'basic' | 'normal' | 'advanced',
    languageStyle?: 'casual' | 'formal' | 'technical',
    detailedResponse?: boolean,
    maximumLength?: boolean
  }
): Promise<string> {
  try {
    // Verificar se o sessionId j√° existe
    if (!conversationHistory[sessionId]) {
      console.log(`Iniciando nova conversa com ID: ${sessionId}`);
      // Carrega hist√≥rico do localStorage ou inicializa novo
      const history = getConversationHistory(sessionId);
      if (history.length === 0) {
        console.log(`Nenhum hist√≥rico encontrado para ${sessionId}, inicializando...`);
        initializeConversationHistory(sessionId);
      } else {
        console.log(`Carregado hist√≥rico existente com ${history.length} mensagens para ${sessionId}`);
      }
    } else {
      console.log(`Usando conversa existente com ID: ${sessionId}, ${conversationHistory[sessionId].length} mensagens`);
    }

    const response = await generateXAIResponse(message, sessionId, options);
    console.log(`Resposta gerada via xAI para ${sessionId}`);
    return response;
  } catch (error) {
    console.error('Erro com xAI, tentando Gemini:', error);
    const response = await generateGeminiResponse(message, sessionId, options);
    console.log(`Resposta gerada via Gemini para ${sessionId} (fallback)`);
    return response;
  }
}

// Limpar hist√≥rico da conversa
export function clearConversationHistory(sessionId: string): void {
  if (conversationHistory[sessionId]) {
    // Mant√©m apenas a mensagem do sistema
    const systemMessage = conversationHistory[sessionId][0];
    conversationHistory[sessionId] = [systemMessage];

    // Limpar do localStorage tamb√©m
    try {
      localStorage.removeItem(`conversationHistory_${sessionId}`);
    } catch (error) {
      console.error("Erro ao limpar hist√≥rico do localStorage:", error);
    }
  }
}

// Obter hist√≥rico da conversa
export function getConversationHistory(sessionId: string): ChatMessage[] {
  // Primeiro verifica se j√° est√° carregado na mem√≥ria
  if (conversationHistory[sessionId]) {
    return conversationHistory[sessionId];
  }

  // Caso contr√°rio, tenta recuperar do localStorage
  try {
    const savedHistory = localStorage.getItem(`conversationHistory_${sessionId}`);
    if (savedHistory) {
      const parsedHistory = JSON.parse(savedHistory) as ChatMessage[];
      conversationHistory[sessionId] = parsedHistory;
      return parsedHistory;
    }
  } catch (error) {
    console.error("Erro ao recuperar hist√≥rico do localStorage:", error);
  }

  return [];
}

// Fun√ß√£o para corrigir links da plataforma
function fixPlatformLinks(text: string): string {
  const platformLinks = {
    'Portal': 'https://pontoschool.com/portal',
    'Portal de Estudos': 'https://pontoschool.com/portal',
    'Agenda': 'https://pontoschool.com/agenda',
    'Turmas': 'https://pontoschool.com/turmas',
    'Grupos de Estudo': 'https://pontoschool.com/turmas?view=estudos',
    'Biblioteca': 'https://pontoschool.com/biblioteca',
    'Perfil': 'https://pontoschool.com/profile',
    'P√°gina de Perfil': 'https://pontoschool.com/profile',
    'Configura√ß√µes': 'https://pontoschool.com/configuracoes',
    'P√°gina de Configura√ß√µes': 'https://pontoschool.com/configuracoes',
    'Dashboard': 'https://pontoschool.com/dashboard',
    'Epictus IA': 'https://pontoschool.com/epictus-ia',
    'Mentor IA': 'https://pontoschool.com/mentor-ia',
    'Planos de Estudo': 'https://pontoschool.com/planos-estudo',
    'Conquistas': 'https://pontoschool.com/conquistas',
    'Carteira': 'https://pontoschool.com/carteira',
    'Mercado': 'https://pontoschool.com/mercado',
    'Organiza√ß√£o': 'https://pontoschool.com/organizacao',
    'Comunidades': 'https://pontoschool.com/comunidades',
    'Chat IA': 'https://pontoschool.com/chat-ia',
    'School IA': 'https://pontoschool.com/school-ia',
    'Novidades': 'https://pontoschool.com/novidades',
    'Lembretes': 'https://pontoschool.com/lembretes',
    'Pedidos de Ajuda': 'https://pontoschool.com/pedidos-ajuda',
    'Conex√£o Expert': 'https://pontoschool.com/pedidos-ajuda',
    'Estudos': 'https://pontoschool.com/estudos',
    'Login': 'https://pontoschool.com/login',
    'Cadastro': 'https://pontoschool.com/register',
    'P√°gina de Ajuda': 'https://pontoschool.com/ajuda',
    'Ajuda': 'https://pontoschool.com/ajuda'
  };

  let newText = text;
  const alreadyReplaced = new Set<string>();
  const linkRegex = /\[(.+?)\]\((.+?)\)/g;

  // Primeiro, coletar todos os links j√° presentes no texto e verificar se est√£o formatados corretamente
  let match;

  // Armazenar os links que precisam ser corrigidos
  const linksToFix = [];

  while ((match = linkRegex.exec(newText)) !== null) {
    const linkText = match[1];
    const url = match[2];
    alreadyReplaced.add(url.toLowerCase());

    // Tamb√©m adicionar o texto do link para evitar duplica√ß√£o com diferentes textos
    for (const key in platformLinks) {
      if (linkText.toLowerCase() === key.toLowerCase()) {
        alreadyReplaced.add(platformLinks[key].toLowerCase());
      }
    }
  }

  // Substituir express√µes mais espec√≠ficas, evitando duplicidades
  for (const key in platformLinks) {
    const url = platformLinks[key];
    // Pular se este URL j√° foi usado
    if (alreadyReplaced.has(url.toLowerCase())) continue;

    const regex = new RegExp(`\\b(${key})\\b(?![^\\[]*\\])`, 'gi'); // Busca palavras inteiras que n√£o est√£o dentro de colchetes
    if (regex.test(newText)) {
      newText = newText.replace(regex, `[${key}](${url})`);
      alreadyReplaced.add(url.toLowerCase());
    }
  }

  // Adicionar corre√ß√£o para URLs que podem ter sido escritas incorretamente
  newText = newText.replace(/\(https:\/\/pontoschool\.com(\s+)([^)]+)\)/g, '(https://pontoschool.com/$2)');

  // Corrigir URLs que podem ter dupla barra
  newText = newText.replace(/\(https:\/\/pontoschool\.com\/\/([^)]+)\)/g, '(https://pontoschool.com/$1)');

  // Garantir que os links estejam formatados corretamente com os par√™nteses fora da URL clic√°vel
  // Primeiro, encontrar todos os links no formato [texto](url)
  const markdownLinkRegex = /\[([^\]]+)\]\(([^)]+)\)/g;
  newText = newText.replace(markdownLinkRegex, (match, text, url) => {
    // Certificar-se de que apenas a URL est√° dentro dos par√™nteses
    const cleanUrl = url.split(' ')[0]; // Pegar apenas a URL sem atributos adicionais
    return `[${text}](${cleanUrl})`;
  });

  return newText;
}


// Fun√ß√£o para salvar o hist√≥rico da conversa no localStorage
function saveConversationHistory(sessionId: string, history: ChatMessage[]): void {
  try {
    localStorage.setItem(`conversationHistory_${sessionId}`, JSON.stringify(history));
  } catch (error) {
    console.error("Erro ao salvar o hist√≥rico da conversa:", error);
  }
}

// Simula√ß√£o de resposta da IA
const getResponseForMessage = (message: string): string => {
  // An√°lise b√°sica da mensagem para gerar uma resposta contextual
  const formattedMessage = message.toLowerCase();

  if (formattedMessage.includes('ol√°') || formattedMessage.includes('oi') || formattedMessage.includes('bom dia') || formattedMessage.includes('boa tarde') || formattedMessage.includes('boa noite')) {
    return `**Ol√°, ${userInfo?.username || 'amigo'}!** üòä\n\nComo posso ajudar voc√™ hoje?`;
  } else if (formattedMessage.includes('fun√ß√£o') || formattedMessage.includes('o que voc√™ faz') || formattedMessage.includes('para que serve')) {
    return `**Eu sou o Assistente de Suporte da Ponto.School**, aqui para te ajudar em tudo que precisar na plataforma! üöÄ\n\nPosso ajudar com:\n\n‚Ä¢ **Navega√ß√£o:** Encontrar qualquer recurso na plataforma.\n‚Ä¢ **Tutoriais:** Explicar o funcionamento de qualquer ferramenta.\n‚Ä¢ **D√∫vidas:** Responder qualquer quest√£o sobre a plataforma ou o conte√∫do.\n\nComo posso ajudar voc√™ agora?`;
  } else if (formattedMessage.includes('portal') || formattedMessage.includes('material') || formattedMessage.includes('acessar conte√∫do')) {
    return `Voc√™ pode acessar o **Portal** com todos os materiais em https://pontoschool.com/portal\n\nL√° voc√™ encontrar√° todos os seus cursos, materiais e recursos de estudo organizados por disciplina.\n\n_Basta clicar no link acima para ir direto para o Portal!_ üìö`;
  } else {
    return "Desculpe, n√£o entendi sua pergunta. Pode reformul√°-la?";
  }
};

// Estas fun√ß√µes e vari√°veis j√° foram definidas acima, ent√£o removemos as duplica√ß√µes aqui

export const aprofundarResponse = async (
  prompt: string, 
  sessionId?: string,
  options?: {
    intelligenceLevel?: 'basic' | 'normal' | 'advanced',
    languageStyle?: 'casual' | 'technical',
    detailedResponse?: boolean,
    maximumLength?: boolean
  }
): Promise<string> => {
  try {
    console.log("Gerando resposta da IA para prompt:", prompt.substring(0, 50) + "...");
    console.log("Op√ß√µes de resposta:", options);

    // Extrai op√ß√µes ou usa valores padr√£o
    const intelligenceLevel = options?.intelligenceLevel || 'normal';
    const isDetailedResponse = options?.detailedResponse || false;
    const isMaximumLength = options?.maximumLength || false;

    // Ajusta o tempo de resposta com base na complexidade solicitada
    const responseTime = intelligenceLevel === 'advanced' || isDetailedResponse 
      ? 3000  // Resposta mais complexa leva mais tempo
      : 2000; // Tempo padr√£o

    // Simula√ß√£o de resposta da IA com um atraso realista
    await new Promise(resolve => setTimeout(resolve, responseTime));

    // Se estiver gerando conte√∫do aprofundado, usa respostas espec√≠ficas
    if ((prompt.includes("aprofundado") || prompt.includes("detalhado") || 
         prompt.includes("expandir") || isDetailedResponse) && 
        (intelligenceLevel === 'advanced' || isMaximumLength)) {

      // Extrai palavras-chave do prompt para personalizar a resposta
      const keywords = prompt.split(/\s+/)
        .filter(word => word.length > 5 && !["aprofundado", "detalhado", "expandir"].includes(word.toLowerCase()))
        .slice(0, 3);

      // Usa as palavras-chave encontradas ou termos gen√©ricos
      const topicTerms = keywords.length > 0 ? keywords.join(', ') : "conceitos educacionais fundamentais";

      return `
# An√°lise Aprofundada: ${topicTerms}

Este conte√∫do foi gerado para fornecer uma compreens√£o extraordinariamente detalhada e abrangente sobre ${topicTerms}, explorando m√∫ltiplas dimens√µes do tema.

## Contexto Hist√≥rico e Evolu√ß√£o

A evolu√ß√£o hist√≥rica dos conceitos relacionados a ${topicTerms} remonta √†s primeiras discuss√µes acad√™micas no s√©culo XIX, quando pensadores como Wilhelm von Humboldt e John Dewey come√ßaram a formular teorias sobre a estrutura√ß√£o sistem√°tica do conhecimento educacional.

No in√≠cio do s√©culo XX, vimos o surgimento de abordagens mais estruturadas, particularmente influenciadas pelo movimento progressista na educa√ß√£o. Este per√≠odo foi marcado por debates intensos sobre m√©todos de ensino, curr√≠culo e avalia√ß√£o.

A partir da segunda metade do s√©culo XX, novas perspectivas emergiram:

- **D√©cada de 1950-60**: Foco em abordagens comportamentalistas e estruturalistas
- **D√©cada de 1970-80**: Surgimento de teorias construtivistas e cognitivistas
- **D√©cada de 1990-2000**: Integra√ß√£o de tecnologias digitais e globaliza√ß√£o do conhecimento
- **S√©culo XXI**: Desenvolvimento de abordagens personalizadas, adaptativas e baseadas em evid√™ncias

### Marcos Hist√≥ricos Significativos

1. **1916**: Publica√ß√£o de "Democracy and Education" por John Dewey, estabelecendo princ√≠pios fundamentais
2. **1956**: Taxonomia de Bloom revoluciona a compreens√£o dos objetivos educacionais
3. **1983**: Relat√≥rio "A Nation at Risk" redefine prioridades educacionais nos EUA e globalmente
4. **1998**: Declara√ß√£o de Bolonha inicia harmoniza√ß√£o do ensino superior na Europa
5. **2001**: Surgimento de recursos educacionais abertos e democratiza√ß√£o do conhecimento

## Fundamentos Te√≥ricos e Conceituais

Os **princ√≠pios basilares** nesta √°rea incluem um conjunto sofisticado de conceitos interrelacionados:

1. **Estrutura√ß√£o hier√°rquica do conhecimento**: Organiza√ß√£o de saberes em n√≠veis crescentes de complexidade, permitindo progress√£o l√≥gica e constru√ß√£o de entendimento

2. **Metacogni√ß√£o aplicada**: Desenvolvimento da consci√™ncia sobre os pr√≥prios processos de aprendizagem e pensamento, facilitando autorregula√ß√£o e aprendizado aut√¥nomo

3. **Transfer√™ncia interdisciplinar**: Capacidade de aplicar conhecimentos e habilidades adquiridos em um dom√≠nio para resolver problemas em outros contextos

4. **Aprendizagem situada**: Compreens√£o de que o conhecimento est√° intrinsecamente ligado ao contexto em que √© adquirido e aplicado

5. **Andragogia diferenciada**: Princ√≠pios espec√≠ficos que governam o aprendizado adulto, em contraste com a pedagogia tradicional

### Modelos Conceituais Avan√ßados

A √°rea √© rica em modelos te√≥ricos que fornecem frameworks para compreens√£o e aplica√ß√£o:

- **Modelo TPACK**: Integra√ß√£o de Conhecimento de Conte√∫do, Pedagogia e Tecnologia
- **Teoria da Carga Cognitiva**: Compreens√£o das limita√ß√µes da mem√≥ria de trabalho e suas implica√ß√µes para o design instrucional
- **Framework SAMR**: Modelo para integra√ß√£o progressiva de tecnologia em contextos educacionais
- **Taxonomia de Fink**: Extens√£o da taxonomia de Bloom para incluir dimens√µes afetivas e metacognitivas

## Aplica√ß√µes Pr√°ticas e Implementa√ß√£o

A transposi√ß√£o destes conceitos para contextos pr√°ticos √© multifacetada e abrange:

### Em Ambientes Educacionais Formais

- **Design curricular baseado em compet√™ncias**: Estrutura√ß√£o de programas educacionais em torno de resultados de aprendizagem mensur√°veis

- **Avalia√ß√£o aut√™ntica e formativa**: Implementa√ß√£o de m√©todos avaliativos que refletem situa√ß√µes do mundo real e fornecem feedback constante

- **Metodologias ativas de aprendizagem**: Aplica√ß√£o de abordagens como aprendizagem baseada em problemas, sala de aula invertida e aprendizagem por projetos

- **Ambiente de aprendizagem adaptativo**: Cria√ß√£o de espa√ßos f√≠sicos e virtuais que respondem √†s necessidades individuais dos aprendizes

### Em Contextos Organizacionais

- **Comunidades de pr√°tica profissional**: Estabelecimento de grupos colaborativos para compartilhamento de conhecimento e melhoria cont√≠nua

- **Sistemas de gest√£o do conhecimento**: Implementa√ß√£o de ferramentas para capturar, organizar e disseminar conhecimento organizacional

- **Programas de desenvolvimento profissional continuado**: Estrutura√ß√£o de oportunidades sistem√°ticas para crescimento e atualiza√ß√£o

## Debates e Controv√©rsias Contempor√¢neas

O campo √© caracterizado por debates vibrantes sobre quest√µes fundamentais:

### Tens√µes Paradigm√°ticas

- **Padroniza√ß√£o vs. Personaliza√ß√£o**: Equil√≠brio entre curr√≠culos padronizados e adapta√ß√£o √†s necessidades individuais

- **Conhecimento can√¥nico vs. Constru√ß√£o subjetiva**: Debate sobre a natureza do conhecimento e suas implica√ß√µes para o ensino

- **Avalia√ß√£o quantitativa vs. qualitativa**: Contraposi√ß√£o entre m√©tricas objetivas e an√°lises interpretativas mais profundas

### Quest√µes Emergentes

1. **Equidade e acessibilidade**: Garantia de que avan√ßos educacionais beneficiem todos os aprendizes

2. **Intelig√™ncia artificial e automa√ß√£o**: Implica√ß√µes √©ticas e pr√°ticas da integra√ß√£o de IA em contextos educacionais

3. **Decoloniza√ß√£o do curr√≠culo**: Reconhecimento e integra√ß√£o de perspectivas historicamente marginalizadas

## Dire√ß√µes Futuras e Tend√™ncias Emergentes

O horizonte da √°rea aponta para desenvolvimentos significativos:

- **Aprendizagem multimodal e imersiva**: Integra√ß√£o de realidade virtual, aumentada e mista

- **An√°lise de aprendizagem preditiva**: Uso de big data e algoritmos para antecipar necessidades e personalizar interven√ß√µes

- **Neuroeduca√ß√£o aplicada**: Tradu√ß√£o de descobertas neurocient√≠ficas em pr√°ticas educacionais eficazes

- **Microcredenciamento e trajet√≥rias n√£o-lineares**: Reimagina√ß√£o de certifica√ß√µes e percursos de aprendizagem

## Conclus√£o e S√≠ntese Integrativa

Esta an√°lise aprofundada demonstra a extraordin√°ria complexidade e riqueza do tema, revelando suas m√∫ltiplas dimens√µes, aplica√ß√µes e interconex√µes. A compreens√£o destes aspectos em profundidade n√£o apenas enriquece o repert√≥rio te√≥rico do educador, mas tamb√©m potencializa sua capacidade de tomar decis√µes informadas e eficazes em contextos pr√°ticos diversos.

O verdadeiro dom√≠nio deste campo requer n√£o apenas conhecimento enciclop√©dico, mas tamb√©m a capacidade de sintetizar perspectivas divergentes, adaptar princ√≠pios a contextos espec√≠ficos e manter-se atualizado com um corpo de conhecimento em constante evolu√ß√£o.

## Recursos Adicionais Recomendados

Para aprofundamento posterior, recomenda-se a consulta √†s seguintes fontes autoritativas:

1. Handbooks especializados da √°rea publicados por editoras acad√™micas renomadas
2. Peri√≥dicos revisados por pares com alto fator de impacto
3. Relat√≥rios t√©cnicos de organiza√ß√µes internacionais como UNESCO e OCDE
4. Comunidades de pr√°tica profissional e redes de pesquisa colaborativa
`;
    }

    // Para solicita√ß√µes de termos t√©cnicos ou gloss√°rios
    if (prompt.includes("termos") || prompt.includes("gloss√°rio") || prompt.includes("defini√ß√µes")) {
      try {
        // Retorna uma estrutura JSON para facilitar o processamento
        return JSON.stringify([
          {
            "termo": "Aprendizagem Significativa",
            "definicao": "Processo pelo qual novos conhecimentos s√£o relacionados de maneira substantiva √† estrutura cognitiva pr√©via do aprendiz. Ocorre quando o estudante consegue conectar novos conceitos a conhecimentos j√° existentes, criando uma rede de significados pessoais e duradouros."
          },
          {
            "termo": "Metacogni√ß√£o",
            "definicao": "Consci√™ncia e compreens√£o dos pr√≥prios processos cognitivos. Inclui a capacidade de monitorar, avaliar e regular o pr√≥prio pensamento e aprendizagem, permitindo ao indiv√≠duo desenvolver estrat√©gias mais eficazes de estudo e resolu√ß√£o de problemas."
          },
          {
            "termo": "Zona de Desenvolvimento Proximal",
            "definicao": "Conceito desenvolvido por Vygotsky que representa a dist√¢ncia entre o n√≠vel de desenvolvimento real (o que o indiv√≠duo consegue fazer sozinho) e o n√≠vel de desenvolvimento potencial (o que consegue fazer com assist√™ncia). √â nesta zona que a interven√ß√£o educacional √© mais eficaz."
          },
          {
            "termo": "Avalia√ß√£o Formativa",
            "definicao": "Processo cont√≠nuo de avalia√ß√£o que ocorre durante o aprendizado, fornecendo feedback imediato tanto para o professor quanto para o aluno. Seu objetivo principal √© identificar dificuldades e ajustar o ensino, n√£o classificar ou rotular o desempenho."
          },
          {
            "termo": "Transposi√ß√£o Did√°tica",
            "definicao": "Processo pelo qual um conhecimento acad√™mico ou cient√≠fico √© transformado em conte√∫do ensin√°vel em contextos educacionais. Envolve sele√ß√£o, simplifica√ß√£o e adapta√ß√£o do conhecimento para torn√°-lo acess√≠vel e significativo aos aprendizes."
          }
        ]);
      } catch (e) {
        // Se falhar ao gerar JSON, retorna em formato de texto
        return `
## Gloss√°rio de Termos Educacionais

**Aprendizagem Significativa**: Processo pelo qual novos conhecimentos s√£o relacionados de maneira substantiva √† estrutura cognitiva pr√©via do aprendiz.

**Metacogni√ß√£o**: Consci√™ncia e compreens√£o dos pr√≥prios processos cognitivos, incluindo a capacidade de monitorar e regular o pr√≥prio pensamento.

**Zona de Desenvolvimento Proximal**: Conceito desenvolvido por Vygotsky que representa a dist√¢ncia entre o n√≠vel de desenvolvimento real e o potencial.

**Avalia√ß√£o Formativa**: Processo cont√≠nuo de avalia√ß√£o que ocorre durante o aprendizado, fornecendo feedback imediato para ajustar o ensino.

**Transposi√ß√£o Did√°tica**: Processo pelo qual um conhecimento acad√™mico √© transformado em conte√∫do ensin√°vel em contextos educacionais.
`;
      }
    }

    // Para solicita√ß√µes de aplica√ß√µes espec√≠ficas
    if (prompt.includes("aplica√ß√µes") || prompt.includes("usos pr√°ticos") || prompt.includes("como aplicar")) {
      return `
## Aplica√ß√µes Pr√°ticas em Diversos Contextos

### Em Ambientes Educacionais
- Desenvolvimento de curr√≠culos integrados que conectam m√∫ltiplas disciplinas
- Implementa√ß√£o de sistemas de avalia√ß√£o que valorizam compet√™ncias complexas
- Cria√ß√£o de ambientes de aprendizagem que promovem autonomia e colabora√ß√£o
- Forma√ß√£o de educadores para pr√°ticas pedag√≥gicas baseadas em evid√™ncias

### Em Contextos Profissionais
- Estabelecimento de programas de desenvolvimento continuado para equipes
- Implementa√ß√£o de metodologias de gest√£o do conhecimento organizacional
- Cria√ß√£o de sistemas de mentoria e transfer√™ncia de expertise entre gera√ß√µes
- Desenvolvimento de ambientes que valorizam aprendizagem e inova√ß√£o constantes

### Para Desenvolvimento Pessoal
- Aplica√ß√£o de t√©cnicas de aprendizagem autorregulada para objetivos individuais
- Utiliza√ß√£o de ferramentas de reflex√£o e autoavalia√ß√£o para crescimento cont√≠nuo
- Cria√ß√£o de rotinas de estudo e pr√°tica deliberada para desenvolvimento de expertise
- Integra√ß√£o de conhecimentos interdisciplinares para resolu√ß√£o criativa de problemas

### Em Pesquisa e Inova√ß√£o
- Desenvolvimento de metodologias de investiga√ß√£o que integram m√∫ltiplas perspectivas
- Cria√ß√£o de frameworks para avalia√ß√£o de impacto em interven√ß√µes educacionais
- Estabelecimento de redes colaborativas para avan√ßo do conhecimento na √°rea
- Aplica√ß√£o de princ√≠pios de design thinking para cria√ß√£o de solu√ß√µes educacionais
`;
    }

    // Resposta padr√£o para outros tipos de prompts
    return `Baseado na sua solicita√ß√£o, posso fornecer a seguinte resposta: 

O tema que voc√™ mencionou √© realmente fascinante e tem diversas aplica√ß√µes no contexto educacional. Alguns pontos importantes a considerar incluem a fundamenta√ß√£o te√≥rica, aplica√ß√µes pr√°ticas e metodologias de implementa√ß√£o.

Para aprofundar seu conhecimento, recomendo explorar recursos adicionais dispon√≠veis na plataforma Ponto.School, especialmente os materiais relacionados a este tema espec√≠fico na se√ß√£o de biblioteca.

Espero que esta informa√ß√£o seja √∫til para seu aprendizado!`;
  } catch (error) {
    console.error("Erro ao gerar resposta da IA:", error);
    return "Desculpe, encontrei um problema ao processar sua solicita√ß√£o. Por favor, tente novamente.";
  }
};

// Vari√°vel para controlar se a resposta est√° pausada
let isPaused: Record<string, boolean> = {};

// Fun√ß√£o para pausar a resposta da IA
export const pauseResponse = async (sessionId: string): Promise<void> => {
  try {
    isPaused[sessionId] = true;
    isCancelled[sessionId] = false; // Garantir que n√£o est√° cancelada
    console.log(`Resposta da IA pausada para a sess√£o ${sessionId}. Estado atual:`, isPaused[sessionId]);
  } catch (error) {
    console.error('Erro ao pausar resposta da IA:', error);
    throw error;
  }
};

// Fun√ß√£o para verificar se a resposta est√° pausada
export const isResponsePaused = (sessionId: string): boolean => {
  const paused = isPaused[sessionId] || false;
  // Para debugging
  if (paused) {
    console.log(`Verifica√ß√£o de pausa: sess√£o ${sessionId} est√° pausada`);
  }
  return paused;
};

// Vari√°vel para controlar se a resposta foi cancelada
let isCancelled: Record<string, boolean> = {};

// Fun√ß√£o para cancelar a resposta da IA
export const cancelResponse = async (sessionId: string): Promise<void> => {
  try {
    isCancelled[sessionId] = true;
    isPaused[sessionId] = false; // Certifique-se de que n√£o est√° em pausa tamb√©m
    console.log(`Resposta da IA cancelada para a sess√£o ${sessionId}. Estado atual:`, isCancelled[sessionId]);
  } catch (error) {
    console.error('Erro ao cancelar resposta da IA:', error);
    throw error;
  }
};

// Fun√ß√£o para verificar se a resposta foi cancelada
export const isResponseCancelled = (sessionId: string): boolean => {
  const cancelled = isCancelled[sessionId] || false;
  // Para debugging
  if (cancelled) {
    console.log(`Verifica√ß√£o de cancelamento: sess√£o ${sessionId} est√° cancelada`);
  }
  return cancelled;
};

// Fun√ß√£o para retomar a resposta da IA
export const resumeResponse = async (sessionId: string): Promise<void> => {
  try {
    isPaused[sessionId] = false;
    console.log(`Resposta da IA retomada para a sess√£o ${sessionId}. Estado atual:`, isPaused[sessionId]);
  } catch (error) {
    console.error('Erro ao retomar resposta da IA:', error);
    throw error;
  }
};

// Fun√ß√£o para resetar o estado de cancelamento/pausa (√∫til ao iniciar novas respostas)
export const resetResponseState = (sessionId: string): void => {
  const wasPaused = isPaused[sessionId];
  const wasCancelled = isCancelled[sessionId];

  isPaused[sessionId] = false;
  isCancelled[sessionId] = false;

  console.log(`Estados resetados para a sess√£o ${sessionId}. 
    Estado anterior: pausado=${wasPaused}, cancelado=${wasCancelled}. 
    Estado atual: pausado=${isPaused[sessionId]}, cancelado=${isCancelled[sessionId]}`);
};